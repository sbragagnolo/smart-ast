base 64 content
base64ahooleeToken
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC4xMTsNCg0KLyoqDQogKiBNYXRoIG9wZXJhdGlvbnMgd2l0aCBzYWZldHkgY2hlY2tzDQogKi8NCmxpYnJhcnkgU2FmZU1hdGggew0KICBmdW5jdGlvbiBtdWwodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHJldHVybnMgKHVpbnQyNTYpIHsNCiAgICB1aW50MjU2IGMgPSBhICogYjsNCiAgICBhc3NlcnQoYSA9PSAwIHx8IGMgLyBhID09IGIpOw0KICAgIHJldHVybiBjOw0KICB9DQoNCiAgZnVuY3Rpb24gZGl2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCByZXR1cm5zICh1aW50MjU2KSB7DQogICAgLy8gYXNzZXJ0KGIgPiAwKTsgLy8gU29saWRpdHkgYXV0b21hdGljYWxseSB0aHJvd3Mgd2hlbiBkaXZpZGluZyBieSAwDQogICAgdWludDI1NiBjID0gYSAvIGI7DQogICAgLy8gYXNzZXJ0KGEgPT0gYiAqIGMgKyBhICUgYik7IC8vIFRoZXJlIGlzIG5vIGNhc2UgaW4gd2hpY2ggdGhpcyBkb2Vzbid0IGhvbGQNCiAgICByZXR1cm4gYzsNCiAgfQ0KDQogIGZ1bmN0aW9uIHN1Yih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcmV0dXJucyAodWludDI1Nikgew0KICAgIGFzc2VydChiIDw9IGEpOw0KICAgIHJldHVybiBhIC0gYjsNCiAgfQ0KDQogIGZ1bmN0aW9uIGFkZCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcmV0dXJucyAodWludDI1Nikgew0KICAgIHVpbnQyNTYgYyA9IGEgKyBiOw0KICAgIGFzc2VydChjID49IGEpOw0KICAgIHJldHVybiBjOw0KICB9DQoNCiAgZnVuY3Rpb24gbWF4NjQodWludDY0IGEsIHVpbnQ2NCBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50NjQpIHsNCiAgICByZXR1cm4gYSA+PSBiID8gYSA6IGI7DQogIH0NCg0KICBmdW5jdGlvbiBtaW42NCh1aW50NjQgYSwgdWludDY0IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQ2NCkgew0KICAgIHJldHVybiBhIDwgYiA/IGEgOiBiOw0KICB9DQoNCiAgZnVuY3Rpb24gbWF4MjU2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7DQogICAgcmV0dXJuIGEgPj0gYiA/IGEgOiBiOw0KICB9DQoNCiAgZnVuY3Rpb24gbWluMjU2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7DQogICAgcmV0dXJuIGEgPCBiID8gYSA6IGI7DQogIH0NCg0KfQ0KDQovKg0KICogT3duYWJsZQ0KICoNCiAqIEJhc2UgY29udHJhY3Qgd2l0aCBhbiBvd25lci4NCiAqIFByb3ZpZGVzIG9ubHlPd25lciBtb2RpZmllciwgd2hpY2ggcHJldmVudHMgZnVuY3Rpb24gZnJvbSBydW5uaW5nIGlmIGl0IGlzIGNhbGxlZCBieSBhbnlvbmUgb3RoZXIgdGhhbiB0aGUgb3duZXIuDQogKi8NCmNvbnRyYWN0IE93bmFibGUgew0KICBhZGRyZXNzIHB1YmxpYyBvd25lcjsNCg0KICBmdW5jdGlvbiBPd25hYmxlKCkgew0KICAgIG93bmVyID0gbXNnLnNlbmRlcjsNCiAgfQ0KDQogIG1vZGlmaWVyIG9ubHlPd25lcigpIHsNCiAgICBpZiAobXNnLnNlbmRlciAhPSBvd25lcikgew0KICAgICAgdGhyb3c7DQogICAgfQ0KICAgIF87DQogIH0NCg0KICBmdW5jdGlvbiB0cmFuc2Zlck93bmVyc2hpcChhZGRyZXNzIG5ld093bmVyKSBvbmx5T3duZXIgew0KICAgIGlmIChuZXdPd25lciAhPSBhZGRyZXNzKDApKSB7DQogICAgICBvd25lciA9IG5ld093bmVyOw0KICAgIH0NCiAgfQ0KDQp9DQoNCg0KLyoNCiAqIEhhbHRhYmxlDQogKg0KICogQWJzdHJhY3QgY29udHJhY3QgdGhhdCBhbGxvd3MgY2hpbGRyZW4gdG8gaW1wbGVtZW50IGFuDQogKiBlbWVyZ2VuY3kgc3RvcCBtZWNoYW5pc20uIERpZmZlcnMgZnJvbSBQYXVzYWJsZSBieSBjYXVzaW5nIGEgdGhyb3cgd2hlbiBpbiBoYWx0IG1vZGUuDQogKg0KICoNCiAqIE9yaWdpbmFsbHkgZW52aXNpb25lZCBpbiBGaXJzdEJsb29kIElDTyBjb250cmFjdC4NCiAqLw0KY29udHJhY3QgSGFsdGFibGUgaXMgT3duYWJsZSB7DQogIGJvb2wgcHVibGljIGhhbHRlZDsNCg0KICBtb2RpZmllciBzdG9wSW5FbWVyZ2VuY3kgew0KICAgIGlmIChoYWx0ZWQpIHRocm93Ow0KICAgIF87DQogIH0NCg0KICBtb2RpZmllciBvbmx5SW5FbWVyZ2VuY3kgew0KICAgIGlmICghaGFsdGVkKSB0aHJvdzsNCiAgICBfOw0KICB9DQoNCiAgLy8gY2FsbGVkIGJ5IHRoZSBvd25lciBvbiBlbWVyZ2VuY3ksIHRyaWdnZXJzIHN0b3BwZWQgc3RhdGUNCiAgZnVuY3Rpb24gaGFsdCgpIGV4dGVybmFsIG9ubHlPd25lciB7DQogICAgaGFsdGVkID0gdHJ1ZTsNCiAgfQ0KDQogIC8vIGNhbGxlZCBieSB0aGUgb3duZXIgb24gZW5kIG9mIGVtZXJnZW5jeSwgcmV0dXJucyB0byBub3JtYWwgc3RhdGUNCiAgZnVuY3Rpb24gdW5oYWx0KCkgZXh0ZXJuYWwgb25seU93bmVyIG9ubHlJbkVtZXJnZW5jeSB7DQogICAgaGFsdGVkID0gZmFsc2U7DQogIH0NCg0KfQ0KDQovKioNCiAqIEB0aXRsZSBFUkMyMEJhc2ljDQogKiBAZGV2IFNpbXBsZXIgdmVyc2lvbiBvZiBFUkMyMCBpbnRlcmZhY2UNCiAqIEBkZXYgc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bS9FSVBzL2lzc3Vlcy8yMA0KICovDQpjb250cmFjdCBFUkMyMEJhc2ljIHsNCiAgdWludDI1NiBwdWJsaWMgdG90YWxTdXBwbHk7DQogIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIHdobykgY29uc3RhbnQgcmV0dXJucyAodWludDI1Nik7DQogIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgdG8sIHVpbnQyNTYgdmFsdWUpOw0KICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50MjU2IHZhbHVlKTsNCn0NCg0KLyoqDQogKiBAdGl0bGUgRVJDMjAgaW50ZXJmYWNlDQogKiBAZGV2IHNlZSBodHRwczovL2dpdGh1Yi5jb20vZXRoZXJldW0vRUlQcy9pc3N1ZXMvMjANCiAqLw0KY29udHJhY3QgRVJDMjAgaXMgRVJDMjBCYXNpYyB7DQogIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIG93bmVyLCBhZGRyZXNzIHNwZW5kZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpOw0KICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBmcm9tLCBhZGRyZXNzIHRvLCB1aW50MjU2IHZhbHVlKTsNCiAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIHNwZW5kZXIsIHVpbnQyNTYgdmFsdWUpOw0KICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBzcGVuZGVyLCB1aW50MjU2IHZhbHVlKTsNCn0NCg0KDQovKioNCiAqIEB0aXRsZSBCYXNpYyB0b2tlbg0KICogQGRldiBCYXNpYyB2ZXJzaW9uIG9mIFN0YW5kYXJkVG9rZW4sIHdpdGggbm8gYWxsb3dhbmNlcy4gDQogKi8NCmNvbnRyYWN0IEJhc2ljVG9rZW4gaXMgRVJDMjBCYXNpYyB7DQogIHVzaW5nIFNhZmVNYXRoIGZvciB1aW50MjU2Ow0KDQogIG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50MjU2KSBiYWxhbmNlczsNCg0KICAvKioNCiAgICogQGRldiBGaXggZm9yIHRoZSBFUkMyMCBzaG9ydCBhZGRyZXNzIGF0dGFjay4NCiAgICovDQogIG1vZGlmaWVyIG9ubHlQYXlsb2FkU2l6ZSh1aW50MjU2IHNpemUpIHsNCiAgICAgaWYobXNnLmRhdGEubGVuZ3RoIDwgc2l6ZSArIDQpIHsNCiAgICAgICB0aHJvdzsNCiAgICAgfQ0KICAgICBfOw0KICB9DQoNCiAgLyoqDQogICogQGRldiB0cmFuc2ZlciB0b2tlbiBmb3IgYSBzcGVjaWZpZWQgYWRkcmVzcw0KICAqIEBwYXJhbSBfdG8gVGhlIGFkZHJlc3MgdG8gdHJhbnNmZXIgdG8uDQogICogQHBhcmFtIF92YWx1ZSBUaGUgYW1vdW50IHRvIGJlIHRyYW5zZmVycmVkLg0KICAqLw0KICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIG9ubHlQYXlsb2FkU2l6ZSgyICogMzIpIHsNCiAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IGJhbGFuY2VzW21zZy5zZW5kZXJdLnN1YihfdmFsdWUpOw0KICAgIGJhbGFuY2VzW190b10gPSBiYWxhbmNlc1tfdG9dLmFkZChfdmFsdWUpOw0KICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsNCiAgfQ0KDQogIC8qKg0KICAqIEBkZXYgR2V0cyB0aGUgYmFsYW5jZSBvZiB0aGUgc3BlY2lmaWVkIGFkZHJlc3MuDQogICogQHBhcmFtIF9vd25lciBUaGUgYWRkcmVzcyB0byBxdWVyeSB0aGUgdGhlIGJhbGFuY2Ugb2YuIA0KICAqIEByZXR1cm4gQW4gdWludDI1NiByZXByZXNlbnRpbmcgdGhlIGFtb3VudCBvd25lZCBieSB0aGUgcGFzc2VkIGFkZHJlc3MuDQogICovDQogIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKSB7DQogICAgcmV0dXJuIGJhbGFuY2VzW19vd25lcl07DQogIH0NCg0KfQ0KDQovKioNCiAqIEB0aXRsZSBTdGFuZGFyZCBFUkMyMCB0b2tlbg0KICoNCiAqIEBkZXYgSW1wbGVtYW50YXRpb24gb2YgdGhlIGJhc2ljIHN0YW5kYXJ0IHRva2VuLg0KICogQGRldiBodHRwczovL2dpdGh1Yi5jb20vZXRoZXJldW0vRUlQcy9pc3N1ZXMvMjANCiAqIEBkZXYgQmFzZWQgb24gY29kZSBieSBGaXJzdEJsb29kOiBodHRwczovL2dpdGh1Yi5jb20vRmlyc3RibG9vZGlvL3Rva2VuL2Jsb2IvbWFzdGVyL3NtYXJ0X2NvbnRyYWN0L0ZpcnN0Qmxvb2RUb2tlbi5zb2wNCiAqLw0KY29udHJhY3QgU3RhbmRhcmRUb2tlbiBpcyBCYXNpY1Rva2VuLCBFUkMyMCB7DQoNCiAgbWFwcGluZyAoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpKSBhbGxvd2VkOw0KDQoNCiAgLyoqDQogICAqIEBkZXYgVHJhbnNmZXIgdG9rZW5zIGZyb20gb25lIGFkZHJlc3MgdG8gYW5vdGhlcg0KICAgKiBAcGFyYW0gX2Zyb20gYWRkcmVzcyBUaGUgYWRkcmVzcyB3aGljaCB5b3Ugd2FudCB0byBzZW5kIHRva2VucyBmcm9tDQogICAqIEBwYXJhbSBfdG8gYWRkcmVzcyBUaGUgYWRkcmVzcyB3aGljaCB5b3Ugd2FudCB0byB0cmFuc2ZlciB0bw0KICAgKiBAcGFyYW0gX3ZhbHVlIHVpbnQyNTYgdGhlIGFtb3V0IG9mIHRva2VucyB0byBiZSB0cmFuc2ZlcmVkDQogICAqLw0KICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBvbmx5UGF5bG9hZFNpemUoMyAqIDMyKSB7DQogICAgdmFyIF9hbGxvd2FuY2UgPSBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXTsNCg0KICAgIC8vIENoZWNrIGlzIG5vdCBuZWVkZWQgYmVjYXVzZSBzdWIoX2FsbG93YW5jZSwgX3ZhbHVlKSB3aWxsIGFscmVhZHkgdGhyb3cgaWYgdGhpcyBjb25kaXRpb24gaXMgbm90IG1ldA0KICAgIC8vIGlmIChfdmFsdWUgPiBfYWxsb3dhbmNlKSB0aHJvdzsNCg0KICAgIGJhbGFuY2VzW190b10gPSBiYWxhbmNlc1tfdG9dLmFkZChfdmFsdWUpOw0KICAgIGJhbGFuY2VzW19mcm9tXSA9IGJhbGFuY2VzW19mcm9tXS5zdWIoX3ZhbHVlKTsNCiAgICBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSA9IF9hbGxvd2FuY2Uuc3ViKF92YWx1ZSk7DQogICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsNCiAgfQ0KDQogIC8qKg0KICAgKiBAZGV2IEFwcm92ZSB0aGUgcGFzc2VkIGFkZHJlc3MgdG8gc3BlbmQgdGhlIHNwZWNpZmllZCBhbW91bnQgb2YgdG9rZW5zIG9uIGJlaGFsZiBvZiBtc2cuc2VuZGVyLg0KICAgKiBAcGFyYW0gX3NwZW5kZXIgVGhlIGFkZHJlc3Mgd2hpY2ggd2lsbCBzcGVuZCB0aGUgZnVuZHMuDQogICAqIEBwYXJhbSBfdmFsdWUgVGhlIGFtb3VudCBvZiB0b2tlbnMgdG8gYmUgc3BlbnQuDQogICAqLw0KICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKSB7DQoNCiAgICAvLyBUbyBjaGFuZ2UgdGhlIGFwcHJvdmUgYW1vdW50IHlvdSBmaXJzdCBoYXZlIHRvIHJlZHVjZSB0aGUgYWRkcmVzc2VzYA0KICAgIC8vICBhbGxvd2FuY2UgdG8gemVybyBieSBjYWxsaW5nIGBhcHByb3ZlKF9zcGVuZGVyLCAwKWAgaWYgaXQgaXMgbm90DQogICAgLy8gIGFscmVhZHkgMCB0byBtaXRpZ2F0ZSB0aGUgcmFjZSBjb25kaXRpb24gZGVzY3JpYmVkIGhlcmU6DQogICAgLy8gIGh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bS9FSVBzL2lzc3Vlcy8yMCNpc3N1ZWNvbW1lbnQtMjYzNTI0NzI5DQogICAgaWYgKChfdmFsdWUgIT0gMCkgJiYgKGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdICE9IDApKSB0aHJvdzsNCg0KICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOw0KICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfdmFsdWUpOw0KICB9DQoNCiAgLyoqDQogICAqIEBkZXYgRnVuY3Rpb24gdG8gY2hlY2sgdGhlIGFtb3VudCBvZiB0b2tlbnMgdGhhdCBhbiBvd25lciBhbGxvd2VkIHRvIGEgc3BlbmRlci4NCiAgICogQHBhcmFtIF9vd25lciBhZGRyZXNzIFRoZSBhZGRyZXNzIHdoaWNoIG93bnMgdGhlIGZ1bmRzLg0KICAgKiBAcGFyYW0gX3NwZW5kZXIgYWRkcmVzcyBUaGUgYWRkcmVzcyB3aGljaCB3aWxsIHNwZW5kIHRoZSBmdW5kcy4NCiAgICogQHJldHVybiBBIHVpbnQyNTYgc3BlY2lmaW5nIHRoZSBhbW91bnQgb2YgdG9rZW5zIHN0aWxsIGF2YWlibGUgZm9yIHRoZSBzcGVuZGVyLg0KICAgKi8NCiAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IHJlbWFpbmluZykgew0KICAgIHJldHVybiBhbGxvd2VkW19vd25lcl1bX3NwZW5kZXJdOw0KICB9DQoNCn0NCg0KLyoqDQogKiBAdGl0bGUgU2ltcGxlVG9rZW4NCiAqIEBkZXYgVmVyeSBzaW1wbGUgRVJDMjAgVG9rZW4gZXhhbXBsZSwgd2hlcmUgYWxsIHRva2VucyBhcmUgcHJlLWFzc2lnbmVkIHRvIHRoZSBjcmVhdG9yLiANCiAqIE5vdGUgdGhleSBjYW4gbGF0ZXIgZGlzdHJpYnV0ZSB0aGVzZSB0b2tlbnMgYXMgdGhleSB3aXNoIHVzaW5nIGB0cmFuc2ZlcmAgYW5kIG90aGVyDQogKiBgU3RhbmRhcmRUb2tlbmAgZnVuY3Rpb25zLg0KICovDQpjb250cmFjdCBBaG9vbGVlVG9rZW4gaXMgU3RhbmRhcmRUb2tlbiB7DQoNCiAgc3RyaW5nIHB1YmxpYyBuYW1lID0gIkFob29sZWUgVG9rZW4iOw0KICBzdHJpbmcgcHVibGljIHN5bWJvbCA9ICJBSFQiOw0KICB1aW50MjU2IHB1YmxpYyBkZWNpbWFscyA9IDE4Ow0KICB1aW50MjU2IHB1YmxpYyBJTklUSUFMX1NVUFBMWSA9IDEwMDAwMDAwMCAqIDEgZXRoZXI7DQoNCiAgLyoqDQogICAqIEBkZXYgQ29udHJ1Y3RvciB0aGF0IGdpdmVzIG1zZy5zZW5kZXIgYWxsIG9mIGV4aXN0aW5nIHRva2Vucy4gDQogICAqLw0KICBmdW5jdGlvbiBBaG9vbGVlVG9rZW4oKSB7DQogICAgdG90YWxTdXBwbHkgPSBJTklUSUFMX1NVUFBMWTsNCiAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IElOSVRJQUxfU1VQUExZOw0KICB9DQoNCn0NCg0KDQpjb250cmFjdCBBaG9vbGVlVG9rZW5QcmVTYWxlIGlzIEhhbHRhYmxlIHsNCiAgICB1c2luZyBTYWZlTWF0aCBmb3IgdWludDsNCg0KICAgIHN0cmluZyBwdWJsaWMgbmFtZSA9ICJBaG9vbGVlIFRva2VuIFByZVNhbGUiOw0KDQogICAgQWhvb2xlZVRva2VuIHB1YmxpYyB0b2tlbjsNCiAgICBhZGRyZXNzIHB1YmxpYyBiZW5lZmljaWFyeTsNCg0KICAgIHVpbnQgcHVibGljIGhhcmRDYXA7DQogICAgdWludCBwdWJsaWMgc29mdENhcDsNCiAgICB1aW50IHB1YmxpYyBjb2xsZWN0ZWQ7DQogICAgdWludCBwdWJsaWMgcHJpY2U7DQogICAgdWludCBwdWJsaWMgcHVyY2hhc2VMaW1pdDsNCg0KICAgIHVpbnQgcHVibGljIHRva2Vuc1NvbGQgPSAwOw0KICAgIHVpbnQgcHVibGljIHdlaVJhaXNlZCA9IDA7DQogICAgdWludCBwdWJsaWMgaW52ZXN0b3JDb3VudCA9IDA7DQogICAgdWludCBwdWJsaWMgd2VpUmVmdW5kZWQgPSAwOw0KDQogICAgdWludCBwdWJsaWMgc3RhcnRUaW1lOw0KICAgIHVpbnQgcHVibGljIGVuZFRpbWU7DQoNCiAgICBib29sIHB1YmxpYyBzb2Z0Q2FwUmVhY2hlZCA9IGZhbHNlOw0KICAgIGJvb2wgcHVibGljIGNyb3dkc2FsZUZpbmlzaGVkID0gZmFsc2U7DQoNCiAgICBtYXBwaW5nIChhZGRyZXNzID0+IGJvb2wpIHJlZnVuZGVkOw0KDQogICAgZXZlbnQgR29hbFJlYWNoZWQodWludCBhbW91bnRSYWlzZWQpOw0KICAgIGV2ZW50IFNvZnRDYXBSZWFjaGVkKHVpbnQgc29mdENhcCk7DQogICAgZXZlbnQgTmV3Q29udHJpYnV0aW9uKGFkZHJlc3MgaW5kZXhlZCBob2xkZXIsIHVpbnQyNTYgdG9rZW5BbW91bnQsIHVpbnQyNTYgZXRoZXJBbW91bnQpOw0KICAgIGV2ZW50IFJlZnVuZGVkKGFkZHJlc3MgaW5kZXhlZCBob2xkZXIsIHVpbnQyNTYgYW1vdW50KTsNCg0KICAgIG1vZGlmaWVyIG9ubHlBZnRlcih1aW50IHRpbWUpIHsNCiAgICAgICAgaWYgKG5vdyA8IHRpbWUpIHRocm93Ow0KICAgICAgICBfOw0KICAgIH0NCg0KICAgIG1vZGlmaWVyIG9ubHlCZWZvcmUodWludCB0aW1lKSB7DQogICAgICAgIGlmIChub3cgPiB0aW1lKSB0aHJvdzsNCiAgICAgICAgXzsNCiAgICB9DQoNCiAgICBmdW5jdGlvbiBBaG9vbGVlVG9rZW5QcmVTYWxlKA0KICAgICAgICB1aW50IF9oYXJkQ2FwVVNELA0KICAgICAgICB1aW50IF9zb2Z0Q2FwVVNELA0KICAgICAgICBhZGRyZXNzIF90b2tlbiwNCiAgICAgICAgYWRkcmVzcyBfYmVuZWZpY2lhcnksDQogICAgICAgIHVpbnQgX3RvdGFsVG9rZW5zLA0KICAgICAgICB1aW50IF9wcmljZUVUSCwNCiAgICAgICAgdWludCBfcHVyY2hhc2VMaW1pdFVTRCwNCg0KICAgICAgICB1aW50IF9zdGFydFRpbWUsDQogICAgICAgIHVpbnQgX2R1cmF0aW9uDQogICAgKSB7DQogICAgICAgIGhhcmRDYXAgPSBfaGFyZENhcFVTRCAgKiAxIGV0aGVyIC8gX3ByaWNlRVRIOw0KICAgICAgICBzb2Z0Q2FwID0gX3NvZnRDYXBVU0QgKiAxIGV0aGVyIC8gX3ByaWNlRVRIOw0KICAgICAgICBwcmljZSA9IF90b3RhbFRva2VucyAqIDEgZXRoZXIgLyBoYXJkQ2FwOw0KDQogICAgICAgIHB1cmNoYXNlTGltaXQgPSBfcHVyY2hhc2VMaW1pdFVTRCAqIDEgZXRoZXIgLyBfcHJpY2VFVEggKiBwcmljZTsNCiAgICAgICAgdG9rZW4gPSBBaG9vbGVlVG9rZW4oX3Rva2VuKTsNCiAgICAgICAgYmVuZWZpY2lhcnkgPSBfYmVuZWZpY2lhcnk7DQoNCiAgICAgICAgc3RhcnRUaW1lID0gX3N0YXJ0VGltZTsNCiAgICAgICAgZW5kVGltZSA9IF9zdGFydFRpbWUgKyBfZHVyYXRpb24gKiAxIGhvdXJzOw0KICAgIH0NCg0KICAgIGZ1bmN0aW9uICgpIHBheWFibGUgc3RvcEluRW1lcmdlbmN5ew0KICAgICAgICBpZiAobXNnLnZhbHVlIDwgMC4wMSAqIDEgZXRoZXIpIHRocm93Ow0KICAgICAgICBkb1B1cmNoYXNlKG1zZy5zZW5kZXIpOw0KICAgIH0NCg0KICAgIGZ1bmN0aW9uIHJlZnVuZCgpIGV4dGVybmFsIG9ubHlBZnRlcihlbmRUaW1lKSB7DQogICAgICAgIGlmIChzb2Z0Q2FwUmVhY2hlZCkgdGhyb3c7DQogICAgICAgIGlmIChyZWZ1bmRlZFttc2cuc2VuZGVyXSkgdGhyb3c7DQoNCiAgICAgICAgdWludCBiYWxhbmNlID0gdG9rZW4uYmFsYW5jZU9mKG1zZy5zZW5kZXIpOw0KICAgICAgICBpZiAoYmFsYW5jZSA9PSAwKSB0aHJvdzsNCg0KICAgICAgICB1aW50IHJlZnVuZCA9IGJhbGFuY2UgLyBwcmljZTsNCiAgICAgICAgaWYgKHJlZnVuZCA+IHRoaXMuYmFsYW5jZSkgew0KICAgICAgICAgICAgcmVmdW5kID0gdGhpcy5iYWxhbmNlOw0KICAgICAgICB9DQoNCiAgICAgICAgaWYgKCFtc2cuc2VuZGVyLnNlbmQocmVmdW5kKSkgdGhyb3c7DQogICAgICAgIHJlZnVuZGVkW21zZy5zZW5kZXJdID0gdHJ1ZTsNCiAgICAgICAgd2VpUmVmdW5kZWQgPSB3ZWlSZWZ1bmRlZC5hZGQocmVmdW5kKTsNCiAgICAgICAgUmVmdW5kZWQobXNnLnNlbmRlciwgcmVmdW5kKTsNCiAgICB9DQoNCiAgICBmdW5jdGlvbiB3aXRoZHJhdygpIG9ubHlPd25lciB7DQogICAgICAgIGlmICghc29mdENhcFJlYWNoZWQpIHRocm93Ow0KICAgICAgICBpZiAoIWJlbmVmaWNpYXJ5LnNlbmQoY29sbGVjdGVkKSkgdGhyb3c7DQogICAgICAgIHRva2VuLnRyYW5zZmVyKGJlbmVmaWNpYXJ5LCB0b2tlbi5iYWxhbmNlT2YodGhpcykpOw0KICAgICAgICBjcm93ZHNhbGVGaW5pc2hlZCA9IHRydWU7DQogICAgfQ0KDQogICAgZnVuY3Rpb24gZG9QdXJjaGFzZShhZGRyZXNzIF9vd25lcikgcHJpdmF0ZSBvbmx5QWZ0ZXIoc3RhcnRUaW1lKSBvbmx5QmVmb3JlKGVuZFRpbWUpIHsNCiAgICAgICAgDQogICAgICAgIGFzc2VydChjcm93ZHNhbGVGaW5pc2hlZCA9PSBmYWxzZSk7DQoNCiAgICAgICAgaWYgKGNvbGxlY3RlZC5hZGQobXNnLnZhbHVlKSA+IGhhcmRDYXApIHRocm93Ow0KDQogICAgICAgIGlmICghc29mdENhcFJlYWNoZWQgJiYgY29sbGVjdGVkIDwgc29mdENhcCAmJiBjb2xsZWN0ZWQuYWRkKG1zZy52YWx1ZSkgPj0gc29mdENhcCkgew0KICAgICAgICAgICAgc29mdENhcFJlYWNoZWQgPSB0cnVlOw0KICAgICAgICAgICAgU29mdENhcFJlYWNoZWQoc29mdENhcCk7DQogICAgICAgIH0NCg0KICAgICAgICB1aW50IHRva2VucyA9IG1zZy52YWx1ZSAqIHByaWNlOw0KICAgICAgICBpZiAodG9rZW4uYmFsYW5jZU9mKG1zZy5zZW5kZXIpICsgdG9rZW5zID4gcHVyY2hhc2VMaW1pdCkgdGhyb3c7DQoNCiAgICAgICAgaWYgKHRva2VuLmJhbGFuY2VPZihtc2cuc2VuZGVyKSA9PSAwKSBpbnZlc3RvckNvdW50Kys7DQogICAgICANCiAgICAgICAgY29sbGVjdGVkID0gY29sbGVjdGVkLmFkZChtc2cudmFsdWUpOw0KDQogICAgICAgIHRva2VuLnRyYW5zZmVyKG1zZy5zZW5kZXIsIHRva2Vucyk7DQoNCiAgICAgICAgd2VpUmFpc2VkID0gd2VpUmFpc2VkLmFkZChtc2cudmFsdWUpOw0KICAgICAgICB0b2tlbnNTb2xkID0gdG9rZW5zU29sZC5hZGQodG9rZW5zKTsNCg0KICAgICAgICBOZXdDb250cmlidXRpb24oX293bmVyLCB0b2tlbnMsIG1zZy52YWx1ZSk7DQoNCiAgICAgICAgaWYgKGNvbGxlY3RlZCA9PSBoYXJkQ2FwKSB7DQogICAgICAgICAgICBHb2FsUmVhY2hlZChoYXJkQ2FwKTsNCiAgICAgICAgfQ0KICAgIH0NCn0='