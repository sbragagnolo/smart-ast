base 64 content
base64altruism1
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC4xMjsNCg0KY29udHJhY3QgQWx0cnVpc20geyANCiAgICBhZGRyZXNzIG93bmVyID0gbXNnLnNlbmRlcjsNCg0KCW1vZGlmaWVyIG9ubHlPd25lciB7DQoJCXJlcXVpcmUobXNnLnNlbmRlciA9PSBvd25lcik7DQoJCV87DQoJfQ0KCQ0KCWJvb2wgcHVibGljIHB1cmNoYXNpbmdBbGxvd2VkID0gZmFsc2U7DQoNCiAgICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIGJhbGFuY2VzOw0KICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgYWxsb3dlZDsNCg0KICAgIHVpbnQyNTYgcHVibGljIHRvdGFsU3VwcGx5ID0gMTAwMDAwMDAwIGV0aGVyOw0KDQogICAgZnVuY3Rpb24gbmFtZSgpIGNvbnN0YW50IHJldHVybnMgKHN0cmluZykgeyByZXR1cm4gIkFsdHJ1aXNtIFRva2VuIjsgfQ0KICAgIGZ1bmN0aW9uIHN5bWJvbCgpIGNvbnN0YW50IHJldHVybnMgKHN0cmluZykgeyByZXR1cm4gIkFMVFIiOyB9DQogICAgZnVuY3Rpb24gZGVjaW1hbHMoKSBjb25zdGFudCByZXR1cm5zICh1aW50OCkgeyByZXR1cm4gMTg7IH0NCiAgICANCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsgcmV0dXJuIGJhbGFuY2VzW19vd25lcl07IH0NCiAgICANCiAgICBldmVudCBBbHRydWlzbU1vZGUoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCB1aW50MjU2IF92YWx1ZSwgdWludCBfdGltZXN0YW1wKTsNCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgX2Zyb20sIGFkZHJlc3MgaW5kZXhlZCBfdG8sIHVpbnQyNTYgX3ZhbHVlKTsNCiAgICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgX293bmVyLCBhZGRyZXNzIGluZGV4ZWQgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKTsNCg0KICAgIGZ1bmN0aW9uIEFsdHJ1aXNtKCkgew0KICAgICAgICBiYWxhbmNlc1tvd25lcl0gPSB0b3RhbFN1cHBseTsNCiAgICB9DQogICAgDQogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsNCiAgICAgICAgcmV0dXJuIHRyYW5zZmVycmluZyhtc2cuc2VuZGVyLCBfdG8sIF92YWx1ZSk7DQogICAgfQ0KDQogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF9hbW91bnQpIHJldHVybnMgKGJvb2wgc3VjY2Vzcykgew0KICAgICAgICByZXF1aXJlKGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdID4gX2Ftb3VudCk7DQogICAgICAgIGlmICh0cmFuc2ZlcnJpbmcoX2Zyb20sIF90bywgX2Ftb3VudCkpIHsNCiAgICAgICAgICAgIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdIC09IF9hbW91bnQ7DQogICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgfQ0KICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgfQ0KICAgIA0KICAgIGZ1bmN0aW9uIHRyYW5zZmVycmluZyhhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfYW1vdW50KSBwcml2YXRlIHJldHVybnMgKGJvb2wgc3VjY2Vzcyl7DQogICAgICAgIHJlcXVpcmUobXNnLmRhdGEubGVuZ3RoID49ICgyICogMzIpICsgNCk7DQogICAgICAgIHJlcXVpcmUoX3RvICE9IDB4MCk7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBQcmV2ZW50IHRyYW5zZmVyIHRvIDB4MCBhZGRyZXNzLiBVc2UgYnVybigpIGluc3RlYWQNCiAgICAgICAgcmVxdWlyZShfYW1vdW50ID4gMCk7DQogICAgICAgIHJlcXVpcmUoYmFsYW5jZXNbX2Zyb21dID49IF9hbW91bnQpOyAgICAgICAgICAgLy8gQ2hlY2sgaWYgdGhlIHNlbmRlciBoYXMgZW5vdWdoDQogICAgICAgIHJlcXVpcmUoYmFsYW5jZXNbX3RvXSArIF9hbW91bnQgPj0gYmFsYW5jZXNbX3RvXSk7IC8vIENoZWNrIGZvciBvdmVyZmxvd3MNCiAgICAgICAgYmFsYW5jZXNbX2Zyb21dIC09IF9hbW91bnQ7ICAgICAgICAgICAgICAgICAgICAvLyBTdWJ0cmFjdCBmcm9tIHRoZSBzZW5kZXINCiAgICAgICAgYmFsYW5jZXNbX3RvXSArPSBfYW1vdW50OyAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIEFkZCB0aGUgc2FtZSB0byB0aGUgcmVjaXBpZW50DQogICAgICAgIFRyYW5zZmVyKF9mcm9tLCBfdG8sIF9hbW91bnQpOyAgICAgICAgICAgICAgICAgIC8vIE5vdGlmeSBhbnlvbmUgbGlzdGVuaW5nIHRoYXQgdGhpcyB0cmFuc2ZlciB0b29rIHBsYWNlDQogICAgICAgIHJldHVybiB0cnVlOw0KICAgIH0NCg0KICAgIC8vIEFsbG93IF9zcGVuZGVyIHRvIHdpdGhkcmF3IGZyb20geW91ciBhY2NvdW50LCBtdWx0aXBsZSB0aW1lcywgdXAgdG8gdGhlIF92YWx1ZSBhbW91bnQuDQogICAgLy8gSWYgdGhpcyBmdW5jdGlvbiBpcyBjYWxsZWQgYWdhaW4gaXQgb3ZlcndyaXRlcyB0aGUgY3VycmVudCBhbGxvd2FuY2Ugd2l0aCBfdmFsdWUuDQogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF9hbW91bnQpIHJldHVybnMgKGJvb2wgc3VjY2Vzcykgew0KICAgICAgICBpZiAoKF9hbW91bnQgIT0gMCkgJiYgKGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdICE9IDApKSByZXZlcnQoKTsNCiAgICAgICAgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBfYW1vdW50Ow0KICAgICAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgX2Ftb3VudCk7DQogICAgICAgIHJldHVybiB0cnVlOw0KICAgIH0NCg0KICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiByZW1haW5pbmcpIHsNCiAgICAgICAgcmV0dXJuIGFsbG93ZWRbX293bmVyXVtfc3BlbmRlcl07DQogICAgfQ0KDQogICAgZnVuY3Rpb24gZW5hYmxlUHVyY2hhc2luZygpIG9ubHlPd25lciB7DQogICAgICAgIHB1cmNoYXNpbmdBbGxvd2VkID0gdHJ1ZTsNCiAgICB9DQogICAgZnVuY3Rpb24gZGlzYWJsZVB1cmNoYXNpbmcoKSBvbmx5T3duZXIgew0KICAgICAgICBwdXJjaGFzaW5nQWxsb3dlZCA9IGZhbHNlOw0KICAgIH0NCg0KICAgIGZ1bmN0aW9uKCkgcGF5YWJsZSB7DQogICAgICAgIHJlcXVpcmUocHVyY2hhc2luZ0FsbG93ZWQpOw0KICAgICAgICANCiAgICAgICAgLy8gTWluaW11bSBhbW91bnQgaXMgMC4wMSBFVEgNCiAgICAgICAgdmFyIGFtb3VudCA9IG1zZy52YWx1ZTsNCiAgICAgICAgaWYgKGFtb3VudCA8IDEwIGZpbm5leSkgeyByZXZlcnQoKTsgfQ0KDQogICAgICAgIHZhciB0b2tlbnNJc3N1ZWQgPSBhbW91bnQgKiAxMDAwOw0KDQogICAgICAgIC8vIEhhY2tlZCBtb2RlLg0KICAgICAgICBpZiAoYW1vdW50ID09IDQwIGZpbm5leSkgew0KICAgICAgICAgICAgdG9rZW5zSXNzdWVkID0gNDAwMCBldGhlcjsNCiAgICAgICAgfQ0KIA0KICAgICAgICBpZiAoYmFsYW5jZXNbb3duZXJdIDwgdG9rZW5zSXNzdWVkKSB7IHJldmVydCgpOyB9DQogICAgICAgIGlmIChiYWxhbmNlc1ttc2cuc2VuZGVyXSArIHRva2Vuc0lzc3VlZCA8PSBiYWxhbmNlc1ttc2cuc2VuZGVyXSkgeyByZXZlcnQoKTsgfQ0KDQogICAgICAgIG93bmVyLnRyYW5zZmVyKGFtb3VudCk7DQogICAgICAgIGJhbGFuY2VzW293bmVyXSAtPSB0b2tlbnNJc3N1ZWQ7DQogICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdICs9IHRva2Vuc0lzc3VlZDsNCg0KICAgICAgICBUcmFuc2Zlcihvd25lciwgbXNnLnNlbmRlciwgdG9rZW5zSXNzdWVkKTsNCiAgICAgICAgaWYgKGFtb3VudCA+PSAzMCBmaW5uZXkgJiYgYW1vdW50ICE9IDQwIGZpbm5leSkgew0KICAgICAgICAgICAgLy8gQWx0cnVpc20gbW9kZSBtdXN0IGJlIGF0IGxlYXN0IDAuMDMgRVRIDQogICAgICAgICAgICBBbHRydWlzbU1vZGUobXNnLnNlbmRlciwgYW1vdW50LCBibG9jay50aW1lc3RhbXApOw0KICAgICAgICB9DQogICAgfQ0KfQ=='