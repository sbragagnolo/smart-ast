base 64 content
base64bTH
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC4xMTsNCg0KDQovKioNCiAqIE1hdGggb3BlcmF0aW9ucyB3aXRoIHNhZmV0eSBjaGVja3MNCiAqLw0KbGlicmFyeSBTYWZlTWF0aCB7DQogIGZ1bmN0aW9uIG11bCh1aW50IGEsIHVpbnQgYikgaW50ZXJuYWwgcmV0dXJucyAodWludCkgew0KICAgIHVpbnQgYyA9IGEgKiBiOw0KICAgIGFzc2VydChhID09IDAgfHwgYyAvIGEgPT0gYik7DQogICAgcmV0dXJuIGM7DQogIH0NCg0KICBmdW5jdGlvbiBkaXYodWludCBhLCB1aW50IGIpIGludGVybmFsIHJldHVybnMgKHVpbnQpIHsNCiAgICAvLyBhc3NlcnQoYiA+IDApOyAvLyBTb2xpZGl0eSBhdXRvbWF0aWNhbGx5IHRocm93cyB3aGVuIGRpdmlkaW5nIGJ5IDANCiAgICB1aW50IGMgPSBhIC8gYjsNCiAgICAvLyBhc3NlcnQoYSA9PSBiICogYyArIGEgJSBiKTsgLy8gVGhlcmUgaXMgbm8gY2FzZSBpbiB3aGljaCB0aGlzIGRvZXNuJ3QgaG9sZA0KICAgIHJldHVybiBjOw0KICB9DQoNCiAgZnVuY3Rpb24gc3ViKHVpbnQgYSwgdWludCBiKSBpbnRlcm5hbCByZXR1cm5zICh1aW50KSB7DQogICAgYXNzZXJ0KGIgPD0gYSk7DQogICAgcmV0dXJuIGEgLSBiOw0KICB9DQoNCiAgZnVuY3Rpb24gYWRkKHVpbnQgYSwgdWludCBiKSBpbnRlcm5hbCByZXR1cm5zICh1aW50KSB7DQogICAgdWludCBjID0gYSArIGI7DQogICAgYXNzZXJ0KGMgPj0gYSk7DQogICAgcmV0dXJuIGM7DQogIH0NCg0KICBmdW5jdGlvbiBtYXg2NCh1aW50NjQgYSwgdWludDY0IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQ2NCkgew0KICAgIHJldHVybiBhID49IGIgPyBhIDogYjsNCiAgfQ0KDQogIGZ1bmN0aW9uIG1pbjY0KHVpbnQ2NCBhLCB1aW50NjQgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDY0KSB7DQogICAgcmV0dXJuIGEgPCBiID8gYSA6IGI7DQogIH0NCg0KICBmdW5jdGlvbiBtYXgyNTYodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsNCiAgICByZXR1cm4gYSA+PSBiID8gYSA6IGI7DQogIH0NCg0KICBmdW5jdGlvbiBtaW4yNTYodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsNCiAgICByZXR1cm4gYSA8IGIgPyBhIDogYjsNCiAgfQ0KDQogIGZ1bmN0aW9uIGFzc2VydChib29sIGFzc2VydGlvbikgaW50ZXJuYWwgew0KICAgIGlmICghYXNzZXJ0aW9uKSB7DQogICAgICB0aHJvdzsNCiAgICB9DQogIH0NCn0NCg0KDQovKioNCiAqIEB0aXRsZSBTaGFyZWFibGUNCiAqIEBkZXYgaW5oZXJpdGFibGUgInByb3BlcnR5IiBjb250cmFjdCB0aGF0IGVuYWJsZXMgbWV0aG9kcyB0byBiZSBwcm90ZWN0ZWQgYnkgcmVxdWlyaW5nIHRoZQ0KICogYWNxdWllc2NlbmNlIG9mIGVpdGhlciBhIHNpbmdsZSwgb3IsIGNydWNpYWxseSwgZWFjaCBvZiBhIG51bWJlciBvZiwgZGVzaWduYXRlZCBvd25lcnMuDQogKiBAZGV2IFVzYWdlOiB1c2UgbW9kaWZpZXJzIG9ubHlvd25lciAoanVzdCBvd24gb3duZWQpIG9yIG9ubHltYW55b3duZXJzKGhhc2gpLCB3aGVyZWJ5IHRoZSBzYW1lIGhhc2ggbXVzdCBiZSBwcm92aWRlZCBieSBzb21lIG51bWJlciAoc3BlY2lmaWVkIGluIGNvbnN0cnVjdG9yKSBvZiB0aGUgc2V0IG9mIG93bmVycyAoc3BlY2lmaWVkIGluIHRoZSBjb25zdHJ1Y3RvcikgYmVmb3JlIHRoZSBpbnRlcmlvciBpcyBleGVjdXRlZC4NCiAqLw0KY29udHJhY3QgU2hhcmVhYmxlIHsNCg0KICAvLyBzdHJ1Y3QgZm9yIHRoZSBzdGF0dXMgb2YgYSBwZW5kaW5nIG9wZXJhdGlvbi4NCiAgc3RydWN0IFBlbmRpbmdTdGF0ZSB7DQogICAgdWludCB5ZXROZWVkZWQ7DQogICAgdWludCBvd25lcnNEb25lOw0KICAgIHVpbnQgaW5kZXg7DQogIH0NCg0KICAvLyB0aGUgbnVtYmVyIG9mIG93bmVycyB0aGF0IG11c3QgY29uZmlybSB0aGUgc2FtZSBvcGVyYXRpb24gYmVmb3JlIGl0IGlzIHJ1bi4NCiAgdWludCBwdWJsaWMgcmVxdWlyZWQ7DQoNCiAgLy8gbGlzdCBvZiBvd25lcnMNCiAgYWRkcmVzc1syNTZdIG93bmVyczsNCiAgLy8gaW5kZXggb24gdGhlIGxpc3Qgb2Ygb3duZXJzIHRvIGFsbG93IHJldmVyc2UgbG9va3VwDQogIG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50KSBvd25lckluZGV4Ow0KICAvLyB0aGUgb25nb2luZyBvcGVyYXRpb25zLg0KICBtYXBwaW5nKGJ5dGVzMzIgPT4gUGVuZGluZ1N0YXRlKSBwZW5kaW5nczsNCiAgYnl0ZXMzMltdIHBlbmRpbmdzSW5kZXg7DQoNCg0KICAvLyB0aGlzIGNvbnRyYWN0IG9ubHkgaGFzIHNpeCB0eXBlcyBvZiBldmVudHM6IGl0IGNhbiBhY2NlcHQgYSBjb25maXJtYXRpb24sIGluIHdoaWNoIGNhc2UNCiAgLy8gd2UgcmVjb3JkIG93bmVyIGFuZCBvcGVyYXRpb24gKGhhc2gpIGFsb25nc2lkZSBpdC4NCiAgZXZlbnQgQ29uZmlybWF0aW9uKGFkZHJlc3Mgb3duZXIsIGJ5dGVzMzIgb3BlcmF0aW9uKTsNCiAgZXZlbnQgUmV2b2tlKGFkZHJlc3Mgb3duZXIsIGJ5dGVzMzIgb3BlcmF0aW9uKTsNCg0KDQogIC8vIHNpbXBsZSBzaW5nbGUtc2lnIGZ1bmN0aW9uIG1vZGlmaWVyLg0KICBtb2RpZmllciBvbmx5T3duZXIgew0KICAgIGlmICghaXNPd25lcihtc2cuc2VuZGVyKSkgew0KICAgICAgdGhyb3c7DQogICAgfQ0KICAgIF87DQogIH0NCg0KICAvKioNCiAgICogQGRldiBNb2RpZmllciBmb3IgbXVsdGlzaWcgZnVuY3Rpb25zLg0KICAgKiBAcGFyYW0gX29wZXJhdGlvbiBUaGUgb3BlcmF0aW9uIG11c3QgaGF2ZSBhbiBpbnRyaW5zaWMgaGFzaCBpbiBvcmRlciB0aGF0IGxhdGVyIGF0dGVtcHRzIGNhbiBiZQ0KICAgKiByZWFsaXNlZCBhcyB0aGUgc2FtZSB1bmRlcmx5aW5nIG9wZXJhdGlvbiBhbmQgdGh1cyBjb3VudCBhcyBjb25maXJtYXRpb25zLg0KICAgKi8NCiAgbW9kaWZpZXIgb25seW1hbnlvd25lcnMoYnl0ZXMzMiBfb3BlcmF0aW9uKSB7DQogICAgaWYgKGNvbmZpcm1BbmRDaGVjayhfb3BlcmF0aW9uKSkgew0KICAgICAgXzsNCiAgICB9DQogIH0NCg0KICAvKioNCiAgICogQGRldiBDb25zdHJ1Y3RvciBpcyBnaXZlbiB0aGUgbnVtYmVyIG9mIHNpZ3MgcmVxdWlyZWQgdG8gZG8gcHJvdGVjdGVkICJvbmx5bWFueW93bmVycyINCiAgICogdHJhbnNhY3Rpb25zIGFzIHdlbGwgYXMgdGhlIHNlbGVjdGlvbiBvZiBhZGRyZXNzZXMgY2FwYWJsZSBvZiBjb25maXJtaW5nIHRoZW0uDQogICAqIEBwYXJhbSBfb3duZXJzIEEgbGlzdCBvZiBvd25lcnMuDQogICAqIEBwYXJhbSBfcmVxdWlyZWQgVGhlIGFtb3VudCByZXF1aXJlZCBmb3IgYSB0cmFuc2FjdGlvbiB0byBiZSBhcHByb3ZlZC4NCiAgICovDQogIGZ1bmN0aW9uIFNoYXJlYWJsZShhZGRyZXNzW10gX293bmVycywgdWludCBfcmVxdWlyZWQpIHsNCiAgICBvd25lcnNbMV0gPSBtc2cuc2VuZGVyOw0KICAgIG93bmVySW5kZXhbbXNnLnNlbmRlcl0gPSAxOw0KICAgIGZvciAodWludCBpID0gMDsgaSA8IF9vd25lcnMubGVuZ3RoOyArK2kpIHsNCiAgICAgIG93bmVyc1syICsgaV0gPSBfb3duZXJzW2ldOw0KICAgICAgb3duZXJJbmRleFtfb3duZXJzW2ldXSA9IDIgKyBpOw0KICAgIH0NCiAgICByZXF1aXJlZCA9IF9yZXF1aXJlZDsNCiAgICBpZiAocmVxdWlyZWQgPiBvd25lcnMubGVuZ3RoKSB7DQogICAgICB0aHJvdzsNCiAgICB9DQogIH0NCg0KICAvKioNCiAgICogQGRldiBSZXZva2VzIGEgcHJpb3IgY29uZmlybWF0aW9uIG9mIHRoZSBnaXZlbiBvcGVyYXRpb24uDQogICAqIEBwYXJhbSBfb3BlcmF0aW9uIEEgc3RyaW5nIGlkZW50aWZ5aW5nIHRoZSBvcGVyYXRpb24uDQogICAqLw0KICBmdW5jdGlvbiByZXZva2UoYnl0ZXMzMiBfb3BlcmF0aW9uKSBleHRlcm5hbCB7DQogICAgdWludCBpbmRleCA9IG93bmVySW5kZXhbbXNnLnNlbmRlcl07DQogICAgLy8gbWFrZSBzdXJlIHRoZXkncmUgYW4gb3duZXINCiAgICBpZiAoaW5kZXggPT0gMCkgew0KICAgICAgcmV0dXJuOw0KICAgIH0NCiAgICB1aW50IG93bmVySW5kZXhCaXQgPSAyKippbmRleDsNCiAgICB2YXIgcGVuZGluZyA9IHBlbmRpbmdzW19vcGVyYXRpb25dOw0KICAgIGlmIChwZW5kaW5nLm93bmVyc0RvbmUgJiBvd25lckluZGV4Qml0ID4gMCkgew0KICAgICAgcGVuZGluZy55ZXROZWVkZWQrKzsNCiAgICAgIHBlbmRpbmcub3duZXJzRG9uZSAtPSBvd25lckluZGV4Qml0Ow0KICAgICAgUmV2b2tlKG1zZy5zZW5kZXIsIF9vcGVyYXRpb24pOw0KICAgIH0NCiAgfQ0KDQogIC8qKg0KICAgKiBAZGV2IEdldHMgYW4gb3duZXIgYnkgMC1pbmRleGVkIHBvc2l0aW9uICh1c2luZyBudW1Pd25lcnMgYXMgdGhlIGNvdW50KQ0KICAgKiBAcGFyYW0gb3duZXJJbmRleCBVaW50IFRoZSBpbmRleCBvZiB0aGUgb3duZXINCiAgICogQHJldHVybiBUaGUgYWRkcmVzcyBvZiB0aGUgb3duZXINCiAgICovDQogIGZ1bmN0aW9uIGdldE93bmVyKHVpbnQgb3duZXJJbmRleCkgZXh0ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAoYWRkcmVzcykgew0KICAgIHJldHVybiBhZGRyZXNzKG93bmVyc1tvd25lckluZGV4ICsgMV0pOw0KICB9DQoNCiAgLyoqDQogICAqIEBkZXYgQ2hlY2tzIGlmIGdpdmVuIGFkZHJlc3MgaXMgYW4gb3duZXIuDQogICAqIEBwYXJhbSBfYWRkciBhZGRyZXNzIFRoZSBhZGRyZXNzIHdoaWNoIHlvdSB3YW50IHRvIGNoZWNrLg0KICAgKiBAcmV0dXJuIFRydWUgaWYgdGhlIGFkZHJlc3MgaXMgYW4gb3duZXIgYW5kIGZhc2Ugb3RoZXJ3aXNlLg0KICAgKi8NCiAgZnVuY3Rpb24gaXNPd25lcihhZGRyZXNzIF9hZGRyKSBjb25zdGFudCByZXR1cm5zIChib29sKSB7DQogICAgcmV0dXJuIG93bmVySW5kZXhbX2FkZHJdID4gMDsNCiAgfQ0KDQogIC8qKg0KICAgKiBAZGV2IEZ1bmN0aW9uIHRvIGNoZWNrIGlzIHNwZWNpZmljIG93bmVyIGhhcyBhbHJlYWR5IGNvbmZpcm1lIHRoZSBvcGVyYXRpb24uDQogICAqIEBwYXJhbSBfb3BlcmF0aW9uIFRoZSBvcGVyYXRpb24gaWRlbnRpZmllci4NCiAgICogQHBhcmFtIF9vd25lciBUaGUgb3duZXIgYWRkcmVzcy4NCiAgICogQHJldHVybiBUcnVlIGlmIHRoZSBvd25lciBoYXMgY29uZmlybWVkIGFuZCBmYWxzZSBvdGhlcndpc2UuDQogICAqLw0KICBmdW5jdGlvbiBoYXNDb25maXJtZWQoYnl0ZXMzMiBfb3BlcmF0aW9uLCBhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAoYm9vbCkgew0KICAgIHZhciBwZW5kaW5nID0gcGVuZGluZ3NbX29wZXJhdGlvbl07DQogICAgdWludCBpbmRleCA9IG93bmVySW5kZXhbX293bmVyXTsNCg0KICAgIC8vIG1ha2Ugc3VyZSB0aGV5J3JlIGFuIG93bmVyDQogICAgaWYgKGluZGV4ID09IDApIHsNCiAgICAgIHJldHVybiBmYWxzZTsNCiAgICB9DQoNCiAgICAvLyBkZXRlcm1pbmUgdGhlIGJpdCB0byBzZXQgZm9yIHRoaXMgb3duZXIuDQogICAgdWludCBvd25lckluZGV4Qml0ID0gMioqaW5kZXg7DQogICAgcmV0dXJuICEocGVuZGluZy5vd25lcnNEb25lICYgb3duZXJJbmRleEJpdCA9PSAwKTsNCiAgfQ0KDQogIC8qKg0KICAgKiBAZGV2IENvbmZpcm0gYW5kIG9wZXJhdGlvbiBhbmQgY2hlY2tzIGlmIGl0J3MgYWxyZWFkeSBleGVjdXRhYmxlLg0KICAgKiBAcGFyYW0gX29wZXJhdGlvbiBUaGUgb3BlcmF0aW9uIGlkZW50aWZpZXIuDQogICAqIEByZXR1cm4gUmV0dXJucyB0cnVlIHdoZW4gb3BlcmF0aW9uIGNhbiBiZSBleGVjdXRlZC4NCiAgICovDQogIGZ1bmN0aW9uIGNvbmZpcm1BbmRDaGVjayhieXRlczMyIF9vcGVyYXRpb24pIGludGVybmFsIHJldHVybnMgKGJvb2wpIHsNCiAgICAvLyBkZXRlcm1pbmUgd2hhdCBpbmRleCB0aGUgcHJlc2VudCBzZW5kZXIgaXM6DQogICAgdWludCBpbmRleCA9IG93bmVySW5kZXhbbXNnLnNlbmRlcl07DQogICAgLy8gbWFrZSBzdXJlIHRoZXkncmUgYW4gb3duZXINCiAgICBpZiAoaW5kZXggPT0gMCkgew0KICAgICAgdGhyb3c7DQogICAgfQ0KDQogICAgdmFyIHBlbmRpbmcgPSBwZW5kaW5nc1tfb3BlcmF0aW9uXTsNCiAgICAvLyBpZiB3ZSdyZSBub3QgeWV0IHdvcmtpbmcgb24gdGhpcyBvcGVyYXRpb24sIHN3aXRjaCBvdmVyIGFuZCByZXNldCB0aGUgY29uZmlybWF0aW9uIHN0YXR1cy4NCiAgICBpZiAocGVuZGluZy55ZXROZWVkZWQgPT0gMCkgew0KICAgICAgLy8gcmVzZXQgY291bnQgb2YgY29uZmlybWF0aW9ucyBuZWVkZWQuDQogICAgICBwZW5kaW5nLnlldE5lZWRlZCA9IHJlcXVpcmVkOw0KICAgICAgLy8gcmVzZXQgd2hpY2ggb3duZXJzIGhhdmUgY29uZmlybWVkIChub25lKSAtIHNldCBvdXIgYml0bWFwIHRvIDAuDQogICAgICBwZW5kaW5nLm93bmVyc0RvbmUgPSAwOw0KICAgICAgcGVuZGluZy5pbmRleCA9IHBlbmRpbmdzSW5kZXgubGVuZ3RoKys7DQogICAgICBwZW5kaW5nc0luZGV4W3BlbmRpbmcuaW5kZXhdID0gX29wZXJhdGlvbjsNCiAgICB9DQogICAgLy8gZGV0ZXJtaW5lIHRoZSBiaXQgdG8gc2V0IGZvciB0aGlzIG93bmVyLg0KICAgIHVpbnQgb3duZXJJbmRleEJpdCA9IDIqKmluZGV4Ow0KICAgIC8vIG1ha2Ugc3VyZSB3ZSAodGhlIG1lc3NhZ2Ugc2VuZGVyKSBoYXZlbid0IGNvbmZpcm1lZCB0aGlzIG9wZXJhdGlvbiBwcmV2aW91c2x5Lg0KICAgIGlmIChwZW5kaW5nLm93bmVyc0RvbmUgJiBvd25lckluZGV4Qml0ID09IDApIHsNCiAgICAgIENvbmZpcm1hdGlvbihtc2cuc2VuZGVyLCBfb3BlcmF0aW9uKTsNCiAgICAgIC8vIG9rIC0gY2hlY2sgaWYgY291bnQgaXMgZW5vdWdoIHRvIGdvIGFoZWFkLg0KICAgICAgaWYgKHBlbmRpbmcueWV0TmVlZGVkIDw9IDEpIHsNCiAgICAgICAgLy8gZW5vdWdoIGNvbmZpcm1hdGlvbnM6IHJlc2V0IGFuZCBydW4gaW50ZXJpb3IuDQogICAgICAgIGRlbGV0ZSBwZW5kaW5nc0luZGV4W3BlbmRpbmdzW19vcGVyYXRpb25dLmluZGV4XTsNCiAgICAgICAgZGVsZXRlIHBlbmRpbmdzW19vcGVyYXRpb25dOw0KICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIC8vIG5vdCBlbm91Z2g6IHJlY29yZCB0aGF0IHRoaXMgb3duZXIgaW4gcGFydGljdWxhciBjb25maXJtZWQuDQogICAgICAgIHBlbmRpbmcueWV0TmVlZGVkLS07DQogICAgICAgIHBlbmRpbmcub3duZXJzRG9uZSB8PSBvd25lckluZGV4Qml0Ow0KICAgICAgfQ0KICAgIH0NCiAgICByZXR1cm4gZmFsc2U7DQogIH0NCg0KDQogIC8qKg0KICAgKiBAZGV2IENsZWFyIHRoZSBwZW5kaW5nIGxpc3QuDQogICAqLw0KICBmdW5jdGlvbiBjbGVhclBlbmRpbmcoKSBpbnRlcm5hbCB7DQogICAgdWludCBsZW5ndGggPSBwZW5kaW5nc0luZGV4Lmxlbmd0aDsNCiAgICBmb3IgKHVpbnQgaSA9IDA7IGkgPCBsZW5ndGg7ICsraSkgew0KICAgICAgaWYgKHBlbmRpbmdzSW5kZXhbaV0gIT0gMCkgew0KICAgICAgICBkZWxldGUgcGVuZGluZ3NbcGVuZGluZ3NJbmRleFtpXV07DQogICAgICB9DQogICAgfQ0KICAgIGRlbGV0ZSBwZW5kaW5nc0luZGV4Ow0KICB9DQoNCn0NCg0KLyoqDQogKiBAdGl0bGUgRVJDMjBCYXNpYw0KICogQGRldiBTaW1wbGVyIHZlcnNpb24gb2YgRVJDMjAgaW50ZXJmYWNlDQogKiBAZGV2IHNlZSBodHRwczovL2dpdGh1Yi5jb20vZXRoZXJldW0vRUlQcy9pc3N1ZXMvMjANCiAqLw0KY29udHJhY3QgRVJDMjBCYXNpYyB7DQogIHVpbnQgcHVibGljIHRvdGFsU3VwcGx5Ow0KICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyB3aG8pIGNvbnN0YW50IHJldHVybnMgKHVpbnQpOw0KICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIHRvLCB1aW50IHZhbHVlKTsNCiAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIGZyb20sIGFkZHJlc3MgaW5kZXhlZCB0bywgdWludCB2YWx1ZSk7DQp9DQoNCg0KLyoqDQogKiBAdGl0bGUgRVJDMjAgaW50ZXJmYWNlDQogKiBAZGV2IHNlZSBodHRwczovL2dpdGh1Yi5jb20vZXRoZXJldW0vRUlQcy9pc3N1ZXMvMjANCiAqLw0KY29udHJhY3QgRVJDMjAgaXMgRVJDMjBCYXNpYyB7DQogIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIG93bmVyLCBhZGRyZXNzIHNwZW5kZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQpOw0KICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBmcm9tLCBhZGRyZXNzIHRvLCB1aW50IHZhbHVlKTsNCiAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIHNwZW5kZXIsIHVpbnQgdmFsdWUpOw0KICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBzcGVuZGVyLCB1aW50IHZhbHVlKTsNCn0NCg0KLyoqDQogKiBAdGl0bGUgQmFzaWMgdG9rZW4NCiAqIEBkZXYgQmFzaWMgdmVyc2lvbiBvZiBTdGFuZGFyZFRva2VuLCB3aXRoIG5vIGFsbG93YW5jZXMuDQogKi8NCmNvbnRyYWN0IEJhc2ljVG9rZW4gaXMgRVJDMjBCYXNpYyB7DQogIHVzaW5nIFNhZmVNYXRoIGZvciB1aW50Ow0KDQogIG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50KSBiYWxhbmNlczsNCg0KICAvKioNCiAgICogQGRldiBGaXggZm9yIHRoZSBFUkMyMCBzaG9ydCBhZGRyZXNzIGF0dGFjay4NCiAgICovDQogIG1vZGlmaWVyIG9ubHlQYXlsb2FkU2l6ZSh1aW50IHNpemUpIHsNCiAgICAgaWYobXNnLmRhdGEubGVuZ3RoIDwgc2l6ZSArIDQpIHsNCiAgICAgICB0aHJvdzsNCiAgICAgfQ0KICAgICBfOw0KICB9DQoNCiAgLyoqDQogICogQGRldiB0cmFuc2ZlciB0b2tlbiBmb3IgYSBzcGVjaWZpZWQgYWRkcmVzcw0KICAqIEBwYXJhbSBfdG8gVGhlIGFkZHJlc3MgdG8gdHJhbnNmZXIgdG8uDQogICogQHBhcmFtIF92YWx1ZSBUaGUgYW1vdW50IHRvIGJlIHRyYW5zZmVycmVkLg0KICAqLw0KICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludCBfdmFsdWUpIG9ubHlQYXlsb2FkU2l6ZSgyICogMzIpIHsNCiAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IGJhbGFuY2VzW21zZy5zZW5kZXJdLnN1YihfdmFsdWUpOw0KICAgIGJhbGFuY2VzW190b10gPSBiYWxhbmNlc1tfdG9dLmFkZChfdmFsdWUpOw0KICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsNCiAgfQ0KDQogIC8qKg0KICAqIEBkZXYgR2V0cyB0aGUgYmFsYW5jZSBvZiB0aGUgc3BlY2lmaWVkIGFkZHJlc3MuDQogICogQHBhcmFtIF9vd25lciBUaGUgYWRkcmVzcyB0byBxdWVyeSB0aGUgdGhlIGJhbGFuY2Ugb2YuDQogICogQHJldHVybiBBbiB1aW50IHJlcHJlc2VudGluZyB0aGUgYW1vdW50IG93bmVkIGJ5IHRoZSBwYXNzZWQgYWRkcmVzcy4NCiAgKi8NCiAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50IGJhbGFuY2UpIHsNCiAgICByZXR1cm4gYmFsYW5jZXNbX293bmVyXTsNCiAgfQ0KDQp9DQoNCi8qKg0KICogQHRpdGxlIFN0YW5kYXJkIEVSQzIwIHRva2VuDQogKg0KICogQGRldiBJbXBsZW1hbnRhdGlvbiBvZiB0aGUgYmFzaWMgc3RhbmRhcnQgdG9rZW4uDQogKiBAZGV2IGh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bS9FSVBzL2lzc3Vlcy8yMA0KICogQGRldiBCYXNlZCBvbiBjb2RlIGJ5IEZpcnN0Qmxvb2Q6IGh0dHBzOi8vZ2l0aHViLmNvbS9GaXJzdGJsb29kaW8vdG9rZW4vYmxvYi9tYXN0ZXIvc21hcnRfY29udHJhY3QvRmlyc3RCbG9vZFRva2VuLnNvbA0KICovDQpjb250cmFjdCBTdGFuZGFyZFRva2VuIGlzIEJhc2ljVG9rZW4sIEVSQzIwIHsNCg0KICBtYXBwaW5nIChhZGRyZXNzID0+IG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludCkpIGFsbG93ZWQ7DQoNCg0KICAvKioNCiAgICogQGRldiBUcmFuc2ZlciB0b2tlbnMgZnJvbSBvbmUgYWRkcmVzcyB0byBhbm90aGVyDQogICAqIEBwYXJhbSBfZnJvbSBhZGRyZXNzIFRoZSBhZGRyZXNzIHdoaWNoIHlvdSB3YW50IHRvIHNlbmQgdG9rZW5zIGZyb20NCiAgICogQHBhcmFtIF90byBhZGRyZXNzIFRoZSBhZGRyZXNzIHdoaWNoIHlvdSB3YW50IHRvIHRyYW5zZmVyIHRvDQogICAqIEBwYXJhbSBfdmFsdWUgdWludCB0aGUgYW1vdXQgb2YgdG9rZW5zIHRvIGJlIHRyYW5zZmVyZWQNCiAgICovDQogIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludCBfdmFsdWUpIG9ubHlQYXlsb2FkU2l6ZSgzICogMzIpIHsNCiAgICB2YXIgX2FsbG93YW5jZSA9IGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdOw0KDQogICAgLy8gQ2hlY2sgaXMgbm90IG5lZWRlZCBiZWNhdXNlIHN1YihfYWxsb3dhbmNlLCBfdmFsdWUpIHdpbGwgYWxyZWFkeSB0aHJvdyBpZiB0aGlzIGNvbmRpdGlvbiBpcyBub3QgbWV0DQogICAgLy8gaWYgKF92YWx1ZSA+IF9hbGxvd2FuY2UpIHRocm93Ow0KDQogICAgYmFsYW5jZXNbX3RvXSA9IGJhbGFuY2VzW190b10uYWRkKF92YWx1ZSk7DQogICAgYmFsYW5jZXNbX2Zyb21dID0gYmFsYW5jZXNbX2Zyb21dLnN1YihfdmFsdWUpOw0KICAgIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdID0gX2FsbG93YW5jZS5zdWIoX3ZhbHVlKTsNCiAgICBUcmFuc2ZlcihfZnJvbSwgX3RvLCBfdmFsdWUpOw0KICB9DQoNCiAgLyoqDQogICAqIEBkZXYgQXByb3ZlIHRoZSBwYXNzZWQgYWRkcmVzcyB0byBzcGVuZCB0aGUgc3BlY2lmaWVkIGFtb3VudCBvZiB0b2tlbnMgb24gYmVhaGxmIG9mIG1zZy5zZW5kZXIuDQogICAqIEBwYXJhbSBfc3BlbmRlciBUaGUgYWRkcmVzcyB3aGljaCB3aWxsIHNwZW5kIHRoZSBmdW5kcy4NCiAgICogQHBhcmFtIF92YWx1ZSBUaGUgYW1vdW50IG9mIHRva2VucyB0byBiZSBzcGVudC4NCiAgICovDQogIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludCBfdmFsdWUpIHsNCg0KICAgIC8vIFRvIGNoYW5nZSB0aGUgYXBwcm92ZSBhbW91bnQgeW91IGZpcnN0IGhhdmUgdG8gcmVkdWNlIHRoZSBhZGRyZXNzZXNgDQogICAgLy8gIGFsbG93YW5jZSB0byB6ZXJvIGJ5IGNhbGxpbmcgYGFwcHJvdmUoX3NwZW5kZXIsIDApYCBpZiBpdCBpcyBub3QNCiAgICAvLyAgYWxyZWFkeSAwIHRvIG1pdGlnYXRlIHRoZSByYWNlIGNvbmRpdGlvbiBkZXNjcmliZWQgaGVyZToNCiAgICAvLyAgaHR0cHM6Ly9naXRodWIuY29tL2V0aGVyZXVtL0VJUHMvaXNzdWVzLzIwI2lzc3VlY29tbWVudC0yNjM1MjQ3MjkNCiAgICBpZiAoKF92YWx1ZSAhPSAwKSAmJiAoYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gIT0gMCkpIHRocm93Ow0KDQogICAgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBfdmFsdWU7DQogICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF92YWx1ZSk7DQogIH0NCg0KICAvKioNCiAgICogQGRldiBGdW5jdGlvbiB0byBjaGVjayB0aGUgYW1vdW50IG9mIHRva2VucyB0aGFuIGFuIG93bmVyIGFsbG93ZWQgdG8gYSBzcGVuZGVyLg0KICAgKiBAcGFyYW0gX293bmVyIGFkZHJlc3MgVGhlIGFkZHJlc3Mgd2hpY2ggb3ducyB0aGUgZnVuZHMuDQogICAqIEBwYXJhbSBfc3BlbmRlciBhZGRyZXNzIFRoZSBhZGRyZXNzIHdoaWNoIHdpbGwgc3BlbmQgdGhlIGZ1bmRzLg0KICAgKiBAcmV0dXJuIEEgdWludCBzcGVjaWZpbmcgdGhlIGFtb3VudCBvZiB0b2tlbnMgc3RpbGwgYXZhaWJsZSBmb3IgdGhlIHNwZW5kZXIuDQogICAqLw0KICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQgcmVtYWluaW5nKSB7DQogICAgcmV0dXJuIGFsbG93ZWRbX293bmVyXVtfc3BlbmRlcl07DQogIH0NCg0KfQ0KDQovKioNCiAqIEB0aXRsZSBCVEgNCiAqIEBub3RpY2UgQlRDICsgRVRIID0gQlRIDQogKi8NCg0KY29udHJhY3QgQlRIIGlzIFN0YW5kYXJkVG9rZW4sIFNoYXJlYWJsZSB7DQogIHVzaW5nIFNhZmVNYXRoIGZvciB1aW50MjU2Ow0KDQogIC8qDQogICAqIENvbnN0YW50cw0KICAgKi8NCiAgc3RyaW5nIHB1YmxpYyBjb25zdGFudCBuYW1lID0gIkJldGhlciI7DQogIHN0cmluZyBwdWJsaWMgY29uc3RhbnQgc3ltYm9sID0gIkJUSCI7DQogIHVpbnQyNTYgcHVibGljIGNvbnN0YW50IGRlY2ltYWxzID0gMTg7DQogIHN0cmluZyBwdWJsaWMgdmVyc2lvbiA9ICIxLjAiOw0KDQogIHVpbnQyNTYgcHVibGljIGNvbnN0YW50IElOSVRJQUxfU1VCU0lEWSA9IDUwICogMTAqKmRlY2ltYWxzOw0KICB1aW50MjU2IHB1YmxpYyBjb25zdGFudCBIQVNIX1JBVEVfTVVMVElQTElFUiA9IDE7DQoNCiAgLyoNCiAgICogRXZlbnRzDQogICAqLw0KICBldmVudCBMb2dDb250cmlidXRpb24oYWRkcmVzcyBpbmRleGVkIF9taW5lciwgdWludDI1NiBfdmFsdWUsIHVpbnQyNTYgX2hhc2hSYXRlLCB1aW50MjU2IF9ibG9jaywgdWludDI1NiBfaGFsdmluZyk7DQogIGV2ZW50IExvZ0NsYWltSGFsdmluZ1N1YnNpZHkoYWRkcmVzcyBpbmRleGVkIF9taW5lciwgdWludDI1NiBfYmxvY2ssIHVpbnQyNTYgX2hhbHZpbmcsIHVpbnQyNTYgX3ZhbHVlKTsNCiAgZXZlbnQgTG9nUmVtYWluaW5nSGFsdmluZ1N1YnNpZHkodWludDI1NiBfaGFsdmluZywgdWludDI1NiBfdmFsdWUpOw0KICBldmVudCBMb2dQYXVzZShieXRlczMyIGluZGV4ZWQgX2hhc2gpOw0KICBldmVudCBMb2dVblBhdXNlKGJ5dGVzMzIgaW5kZXhlZCBfaGFzaCk7DQogIGV2ZW50IExvZ0JUSEZvdW5kYXRpb25XYWxsZXRDaGFuZ2VkKGFkZHJlc3MgaW5kZXhlZCBfd2FsbGV0KTsNCiAgZXZlbnQgTG9nUG9sbENyZWF0ZWQoYnl0ZXMzMiBpbmRleGVkIF9oYXNoKTsNCiAgZXZlbnQgTG9nUG9sbERlbGV0ZWQoYnl0ZXMzMiBpbmRleGVkIF9oYXNoKTsNCiAgZXZlbnQgTG9nUG9sbFZvdGVkKGJ5dGVzMzIgaW5kZXhlZCBfaGFzaCwgYWRkcmVzcyBpbmRleGVkIF9taW5lciwgdWludDI1NiBfaGFzaFJhdGUpOw0KICBldmVudCBMb2dQb2xsQXBwcm92ZWQoYnl0ZXMzMiBpbmRleGVkIF9oYXNoKTsNCg0KICAvKg0KICAgKiBTdG9yYWdlIHZhcnMNCiAgICovDQogIG1hcHBpbmcgKHVpbnQyNTYgPT4gSGFsdmluZ0hhc2hSYXRlKSBoYWx2aW5nc0hhc2hSYXRlOyAvLyBIb2xkcyB0aGUgYWNjdW11bGF0ZWQgaGFzaCByYXRlIHBlciBoYWx2aW5nDQogIG1hcHBpbmcgKHVpbnQyNTYgPT4gU3Vic2lkeSkgaGFsdmluZ3NTdWJzaWRpZXM7IC8vIFN0b3JlcyB0aGUgcmVtYWluaW5nIHN1YnNpZHkgcGVyIGhhbHZpbmcNCiAgbWFwcGluZyAoYWRkcmVzcyA9PiBNaW5lcikgbWluZXJzOyAvLyBNaW5lcnMgZGF0YQ0KICBtYXBwaW5nIChieXRlczMyID0+IFBvbGwpIHBvbGxzOyAvLyBDb250cmFjdCBwb2xscw0KDQogIGFkZHJlc3MgcHVibGljIGJ0aEZvdW5kYXRpb25XYWxsZXQ7DQogIHVpbnQyNTYgcHVibGljIHN1YnNpZHlIYWx2aW5nSW50ZXJ2YWw7DQogIHVpbnQyNTYgcHVibGljIG1heEhhbHZpbmdzOw0KICB1aW50MjU2IHB1YmxpYyBnZW5lc2lzOw0KICB1aW50MjU2IHB1YmxpYyB0b3RhbEhhc2hSYXRlOw0KICBib29sIHB1YmxpYyBwYXVzZWQ7DQoNCiAgc3RydWN0IEhhbHZpbmdIYXNoUmF0ZSB7DQogICAgYm9vbCBjYXJyaWVkOyAvLyBJbmRpY2F0ZXMgdGhhdCB0aGUgcHJldmlvdXMgaGFzaCByYXRlIGhhdmUgYmVlbiBhZGRlZCB0byB0aGUgaGFsdmluZw0KICAgIHVpbnQyNTYgcmF0ZTsgLy8gSGFzaCByYXRlIG9mIHRoZSBoYWx2aW5nDQogIH0NCg0KICBzdHJ1Y3QgTWluZXIgew0KICAgIHVpbnQyNTYgYmxvY2s7IC8vIE1pbmVyIGJsb2NrLCB1c2VkIHRvIGNhbGN1bGF0ZSBpbiB3aGljaCBoYWx2aW5nIGlzIHRoZSBtaW5lcg0KICAgIHVpbnQyNTYgdG90YWxIYXNoUmF0ZTsgLy8gQWNjdW11bGF0ZWQgbWluZXIgaGFzaCByYXRlDQogICAgbWFwcGluZyAodWludDI1NiA9PiBNaW5lckhhc2hSYXRlKSBoYXNoUmF0ZTsNCiAgfQ0KDQogIHN0cnVjdCBNaW5lckhhc2hSYXRlIHsNCiAgICBib29sIGNhcnJpZWQ7DQogICAgdWludDI1NiByYXRlOw0KICB9DQoNCiAgc3RydWN0IFN1YnNpZHkgew0KICAgIGJvb2wgY2xhaW1lZDsgIC8vIEZsYWcgdGhhdCBpbmRpY2F0ZXMgdGhhdCB0aGUgc3Vic2lkeSBoYXMgYmVlbiBjbGFpbWVkIGF0IGxlYXN0IG9uZSB0aW1lLCBqdXN0IHRvDQogICAgICAgICAgICAgICAgICAgLy8gY29tcHV0ZSB0aGUgaW5pdGlhbCBoYWx2aW5nIHN1YnNpZHkgdmFsdWUNCiAgICB1aW50MjU2IHZhbHVlOyAvLyBSZW1haW5pbmcgc3Vic2lkeSBvZiBhIGhhbHZpbmcNCiAgfQ0KDQogIHN0cnVjdCBQb2xsIHsNCiAgICBib29sIGV4aXN0czsgIC8vIEluZGljYXRlcyB0aGF0IHRoZSBwb2xsIGlzIGNyZWF0ZWQNCiAgICBzdHJpbmcgdGl0bGU7IC8vIFRpdGxlIG9mIHRoZSBwb2xsLCBpdCdzIHRoZSBwb2xsIGluZGVudGlmaWVyIHNvIGl0IG11c3QgYmUgdW5pcXVlDQogICAgbWFwcGluZyAoYWRkcmVzcyA9PiBib29sKSB2b3RlczsgLy8gQ29udHJvbCB3aG8gaGF2ZSB2b3RlZA0KICAgIHVpbnQ4IHBlcmNlbnRhZ2U7IC8vIFBlcmNlbnRhZ2Ugd2hpY2ggZGV0ZXJtaW5lcyBpZiB0aGUgcG9sbCBoYXMgYmVlbiBhcHByb3ZlZA0KICAgIHVpbnQyNTYgaGFzaFJhdGU7IC8vIFN1bW1lZCBoYXNoIHJhdGUgb2YgYWxsIHRoZSB2b3RlcnMNCiAgICBib29sIGFwcHJvdmVkOyAvLyBUcnVlIGlmIHRoZSBwb2xsIGhhcyBiZWVuIGFwcHJvdmVkDQogICAgdWludDI1NiBhcHByb3ZhbEJsb2NrOyAvLyBCbG9jayBpbiB3aGljaCB0aGUgcG9sbCB3YXMgYXBwcm92ZWQNCiAgICB1aW50MjU2IGFwcHJvdmFsSGFzaFJhdGU7IC8vIEhhc2ggcmF0ZSB0aGF0IGNhdXNlZCB0aGUgcG9sbCBhcHByb3ZhbA0KICAgIHVpbnQyNTYgYXBwcm92YWxUb3RhbEhhc2hSYXRlOyAvLyBUb3RhbCBoYXMgcmF0ZSBpbiB3aGVuIHRoZSBwb2xsIHdhcyBhcHByb3ZlZA0KICB9DQoNCiAgLyoNCiAgICogTW9kaWZpZXJzDQogICAqLw0KICBtb2RpZmllciBub3RCZWZvcmVHZW5lc2lzKCkgew0KICAgIHJlcXVpcmUoYmxvY2subnVtYmVyID49IGdlbmVzaXMpOw0KICAgIF87DQogIH0NCg0KICBtb2RpZmllciBub25aZXJvKHVpbnQyNTYgX3ZhbHVlKSB7DQogICAgcmVxdWlyZShfdmFsdWUgPiAwKTsNCiAgICBfOw0KICB9DQoNCiAgbW9kaWZpZXIgbm9uWmVyb0FkZHJlc3MoYWRkcmVzcyBfYWRkcmVzcykgew0KICAgIHJlcXVpcmUoX2FkZHJlc3MgIT0gYWRkcmVzcygwKSk7DQogICAgXzsNCiAgfQ0KDQogIG1vZGlmaWVyIG5vblplcm9WYWx1ZWQoKSB7DQogICAgcmVxdWlyZShtc2cudmFsdWUgIT0gMCk7DQogICAgXzsNCiAgfQ0KDQogIG1vZGlmaWVyIG5vblplcm9MZW5ndGgoYWRkcmVzc1tdIGFycmF5KSB7DQogICAgcmVxdWlyZShhcnJheS5sZW5ndGggIT0gMCk7DQogICAgXzsNCiAgfQ0KDQogIG1vZGlmaWVyIG5vdFBhdXNlZCgpIHsNCiAgICByZXF1aXJlKCFwYXVzZWQpOw0KICAgIF87DQogIH0NCg0KICBtb2RpZmllciBub3RHcmVhdGVyVGhhbkN1cnJlbnRCbG9jayh1aW50MjU2IF9ibG9jaykgew0KICAgIHJlcXVpcmUoX2Jsb2NrIDw9IGN1cnJlbnRCbG9jaygpKTsNCiAgICBfOw0KICB9DQoNCiAgbW9kaWZpZXIgaXNNaW5lcihhZGRyZXNzIF9hZGRyZXNzKSB7DQogICAgcmVxdWlyZShtaW5lcnNbX2FkZHJlc3NdLmJsb2NrICE9IDApOw0KICAgIF87DQogIH0NCg0KICBtb2RpZmllciBwb2xsQXBwcm92ZWQoYnl0ZXMzMiBfaGFzaCkgew0KICAgIHJlcXVpcmUocG9sbHNbX2hhc2hdLmFwcHJvdmVkKTsNCiAgICBfOw0KICB9DQoNCiAgLyoNCiAgICogUHVibGljIGZ1bmN0aW9ucw0KICAgKi8NCg0KICAvKioNCiAgICBAbm90aWNlIENvbnRyYWN0IGNvbnN0cnVjdG9yDQogICAgQHBhcmFtIF9idGhGb3VuZGF0aW9uTWVtYmVycyBhcmUgdGhlIGFkZHJlc3NlcyB0aGF0IGNvbnRyb2wgdGhlIEJUSCBjb250cmFjdA0KICAgIEBwYXJhbSBfcmVxdWlyZWQgbnVtYmVyIG9mIG1lbWVycyBuZWVkZWQgdG8gZXhlY3V0ZSBtYW5hZ2VtZW50IGZ1bmN0aW9ucyBvZiB0aGUgY29udHJhY3QNCiAgICBAcGFyYW0gX2J0aEZvdW5kYXRpb25XYWxsZXQgd2FsbGV0IHRoYXQgaG9sZHMgYWxsIHRoZSBjb250cmFjdCBjb250cmlidXRpb25zDQogICAgQHBhcmFtIF9nZW5lc2lzIGJsb2NrIG51bWJlciBpbiB3aGljaCB0aGUgQlRIIGNvbnRyYWN0IHdpbGwgYmUgYWN0aXZlDQogICAgQHBhcmFtIF9zdWJzaWR5SGFsdmluZ0ludGVydmFsIG51bWJlciBvZiBibG9ja3Mgd2hpY2ggY29tcHJpc2VzIGEgaGFsdmluZw0KICAgIEBwYXJhbSBfbWF4SGFsdmluZ3MgbnVtYmVyIG9mIGhhbHZpbmdzIHRoYXQgd2lsbCBnZW5lcmF0ZSBCVEgNCiAgKiovDQogIGZ1bmN0aW9uIEJUSCgNCiAgICBhZGRyZXNzW10gX2J0aEZvdW5kYXRpb25NZW1iZXJzLA0KICAgIHVpbnQyNTYgX3JlcXVpcmVkLA0KICAgIGFkZHJlc3MgX2J0aEZvdW5kYXRpb25XYWxsZXQsDQogICAgdWludDI1NiBfZ2VuZXNpcywNCiAgICB1aW50MjU2IF9zdWJzaWR5SGFsdmluZ0ludGVydmFsLA0KICAgIHVpbnQyNTYgX21heEhhbHZpbmdzDQogICkgU2hhcmVhYmxlKCBfYnRoRm91bmRhdGlvbk1lbWJlcnMsIF9yZXF1aXJlZCkNCiAgICBub25aZXJvTGVuZ3RoKF9idGhGb3VuZGF0aW9uTWVtYmVycykNCiAgICBub25aZXJvKF9yZXF1aXJlZCkNCiAgICBub25aZXJvQWRkcmVzcyhfYnRoRm91bmRhdGlvbldhbGxldCkNCiAgICBub25aZXJvKF9nZW5lc2lzKQ0KICAgIG5vblplcm8oX3N1YnNpZHlIYWx2aW5nSW50ZXJ2YWwpDQogICAgbm9uWmVybyhfbWF4SGFsdmluZ3MpDQogIHsNCiAgICAvLyBHZW5lc2lzIGJsb2NrIG11c3QgYmUgZ3JlYXRlciBvciBlcXVhbCB0aGFuIHRoZSBjdXJyZW50IGJsb2NrDQogICAgaWYgKF9nZW5lc2lzIDwgYmxvY2subnVtYmVyKSB0aHJvdzsNCg0KICAgIGJ0aEZvdW5kYXRpb25XYWxsZXQgPSBfYnRoRm91bmRhdGlvbldhbGxldDsNCiAgICBzdWJzaWR5SGFsdmluZ0ludGVydmFsID0gX3N1YnNpZHlIYWx2aW5nSW50ZXJ2YWw7DQogICAgbWF4SGFsdmluZ3MgPSBfbWF4SGFsdmluZ3M7DQoNCiAgICBnZW5lc2lzID0gX2dlbmVzaXM7DQogICAgdG90YWxTdXBwbHkgPSAwOw0KICAgIHRvdGFsSGFzaFJhdGUgPSAwOw0KICAgIHBhdXNlZCA9IGZhbHNlOw0KICB9DQoNCiAgLyoqDQogICAgQG5vdGljZSBDb250cmFjdCBkZXNjdHJ1Y3Rpb24gZnVuY3Rpb24NCiAgICBAcGFyYW0gX2hhc2ggcG9sbCBoYXNoIHRoYXQgYXV0aG9yaXplcyB0aGUgZnVuY3Rpb24gY2FsbA0KICAqKi8NCiAgZnVuY3Rpb24ga2lsbChieXRlczMyIF9oYXNoKQ0KICAgIGV4dGVybmFsDQogICAgcG9sbEFwcHJvdmVkKF9oYXNoKQ0KICAgIG9ubHltYW55b3duZXJzKHNoYTMobXNnLmRhdGEpKQ0KICB7DQogICAgc2VsZmRlc3RydWN0KGJ0aEZvdW5kYXRpb25XYWxsZXQpOw0KICB9DQoNCiAgLyoqDQogICAgQG5vdGljZSBDb250cmFjdCBkZXNjdHJ1Y3Rpb24gZnVuY3Rpb24gd2l0aCBldGhlcnMgcmVkaXJlY3Rpb24NCiAgICBAcGFyYW0gX2hhc2ggcG9sbCBoYXNoIHRoYXQgYXV0aG9yaXplcyB0aGUgZnVuY3Rpb24gY2FsbA0KICAqKi8NCiAgZnVuY3Rpb24ga2lsbFRvKGFkZHJlc3MgX3RvLCBieXRlczMyIF9oYXNoKQ0KICAgIGV4dGVybmFsDQogICAgbm9uWmVyb0FkZHJlc3MoX3RvKQ0KICAgIHBvbGxBcHByb3ZlZChfaGFzaCkNCiAgICBvbmx5bWFueW93bmVycyhzaGEzKG1zZy5kYXRhKSkNCiAgew0KICAgIHNlbGZkZXN0cnVjdChfdG8pOw0KICB9DQoNCiAgLyoqDQogICAgQG5vdGljZSBQYXVzZSB0aGUgY29udHJhY3Qgb3BlcmF0aW9ucw0KICAgIEBwYXJhbSBfaGFzaCBwb2xsIGhhc2ggdGhhdCBhdXRob3JpemVzIHRoZSBwYXVzZQ0KICAqKi8NCiAgZnVuY3Rpb24gcGF1c2UoYnl0ZXMzMiBfaGFzaCkNCiAgICBleHRlcm5hbA0KICAgIHBvbGxBcHByb3ZlZChfaGFzaCkNCiAgICBvbmx5bWFueW93bmVycyhzaGEzKG1zZy5kYXRhKSkNCiAgICBub3RCZWZvcmVHZW5lc2lzDQogIHsNCiAgICBpZiAoIXBhdXNlZCkgew0KICAgICAgcGF1c2VkID0gdHJ1ZTsNCiAgICAgIExvZ1BhdXNlKF9oYXNoKTsNCiAgICB9DQogIH0NCg0KICAvKioNCiAgICBAbm90aWNlIFVucGF1c2UgdGhlIGNvbnRyYWN0IG9wZXJhdGlvbnMNCiAgICBAcGFyYW0gX2hhc2ggcG9sbCBoYXNoIHRoYXQgYXV0aG9yaXplcyB0aGUgdW5wYXVzZQ0KICAqKi8NCiAgZnVuY3Rpb24gdW5QYXVzZShieXRlczMyIF9oYXNoKQ0KICAgIGV4dGVybmFsDQogICAgcG9sbEFwcHJvdmVkKF9oYXNoKQ0KICAgIG9ubHltYW55b3duZXJzKHNoYTMobXNnLmRhdGEpKQ0KICAgIG5vdEJlZm9yZUdlbmVzaXMNCiAgew0KICAgIGlmIChwYXVzZWQpIHsNCiAgICAgIHBhdXNlZCA9IGZhbHNlOw0KICAgICAgTG9nVW5QYXVzZShfaGFzaCk7DQogICAgfQ0KICB9DQoNCiAgLyoqDQogICAgQG5vdGljZSBTZXQgdGhlIGJ0aEZvdW5kYXRpb24gd2FsbGV0DQogICAgQHBhcmFtIF93YWxsZXQgbmV3IHdhbGxldCBhZGRyZXNzDQogICoqLw0KICBmdW5jdGlvbiBzZXRCVEhGb3VuZGF0aW9uV2FsbGV0KGFkZHJlc3MgX3dhbGxldCkNCiAgICBleHRlcm5hbA0KICAgIG9ubHltYW55b3duZXJzKHNoYTMobXNnLmRhdGEpKQ0KICAgIG5vblplcm9BZGRyZXNzKF93YWxsZXQpDQogIHsNCiAgICBidGhGb3VuZGF0aW9uV2FsbGV0ID0gX3dhbGxldDsNCiAgICBMb2dCVEhGb3VuZGF0aW9uV2FsbGV0Q2hhbmdlZChfd2FsbGV0KTsNCiAgfQ0KDQogIC8qKg0KICAgIEBub3RpY2UgUmV0dXJucyB0aGUgY3VycmVudCBCVEggYmxvY2sNCiAgICBAcmV0dXJuIGN1cnJlbnQgYnRoIGJsb2NrIG51bWJlcg0KICAqKi8NCiAgZnVuY3Rpb24gY3VycmVudEJsb2NrKCkNCiAgICBwdWJsaWMNCiAgICBjb25zdGFudA0KICAgIG5vdEJlZm9yZUdlbmVzaXMNCiAgICByZXR1cm5zKHVpbnQyNTYpDQogIHsNCiAgICByZXR1cm4gYmxvY2subnVtYmVyLnN1YihnZW5lc2lzKTsNCiAgfQ0KDQogICAvKioNCiAgICBAbm90aWNlIENhbGN1bGF0ZXMgdGhlIGhhbHZpbmcgbnVtYmVyIG9mIGEgZ2l2ZW4gYmxvY2sNCiAgICBAcGFyYW0gX2Jsb2NrIGJsb2NrIG51bWJlcg0KICAgIEByZXR1cm4gdGhlIGhhbHZpbmcgb2YgdGhlIGJsb2NrDQogICoqLw0KICBmdW5jdGlvbiBibG9ja0hhbHZpbmcodWludDI1NiBfYmxvY2spDQogICAgcHVibGljDQogICAgY29uc3RhbnQNCiAgICBub3RCZWZvcmVHZW5lc2lzDQogICAgcmV0dXJucyh1aW50MjU2KQ0KICB7DQogICAgcmV0dXJuIF9ibG9jay5kaXYoc3Vic2lkeUhhbHZpbmdJbnRlcnZhbCk7DQogIH0NCg0KICAvKioNCiAgICBAbm90aWNlIENhbGN1bGF0ZSB0aGUgb2Zmc2V0IG9mIGEgZ2l2ZW4gYmxvY2sNCiAgICBAcmV0dXJuIHRoZSBvZmZzZXQgb2YgdGhlIGJsb2NrIGluIGEgaGFsdmluZw0KICAqKi8NCiAgZnVuY3Rpb24gYmxvY2tPZmZzZXQodWludDI1NiBfYmxvY2spDQogICAgcHVibGljDQogICAgY29uc3RhbnQNCiAgICBub3RCZWZvcmVHZW5lc2lzDQogICAgcmV0dXJucyh1aW50MjU2KQ0KICB7DQogICAgcmV0dXJuIF9ibG9jayAlIHN1YnNpZHlIYWx2aW5nSW50ZXJ2YWw7DQogIH0NCg0KICAvKioNCiAgICBAbm90aWNlIERldGVybWluZSB0aGUgY3VycmVudCBoYWx2aW5nIG51bWJlcg0KICAgIEByZXR1cm4gdGhlIGN1cnJlbnQgaGFsdmluZw0KICAqKi8NCiAgZnVuY3Rpb24gY3VycmVudEhhbHZpbmcoKQ0KICAgIHB1YmxpYw0KICAgIGNvbnN0YW50DQogICAgbm90QmVmb3JlR2VuZXNpcw0KICAgIHJldHVybnModWludDI1NikNCiAgew0KICAgIHJldHVybiBibG9ja0hhbHZpbmcoY3VycmVudEJsb2NrKCkpOw0KICB9DQoNCiAgLyoqDQogICAgQG5vdGljZSBDb21wdXRlIHRoZSBzdGFydGluZyBibG9jayBvZiBhIGhhbHZpbmcNCiAgICBAcmV0dXJuIHRoZSBpbml0aWFsIGhhbHZpbmcgYmxvY2sNCiAgKiovDQogIGZ1bmN0aW9uIGhhbHZpbmdTdGFydEJsb2NrKHVpbnQyNTYgX2hhbHZpbmcpDQogICAgcHVibGljDQogICAgY29uc3RhbnQNCiAgICBub3RCZWZvcmVHZW5lc2lzDQogICAgcmV0dXJucyh1aW50MjU2KQ0KICB7DQogICAgcmV0dXJuIF9oYWx2aW5nLm11bChzdWJzaWR5SGFsdmluZ0ludGVydmFsKTsNCiAgfQ0KDQogIC8qKg0KICAgIEBub3RpY2UgQ2FsY3VsYXRlIHRoZSB0b3RhbCBzdWJzaWR5IG9mIGEgYmxvY2sNCiAgICBAcGFyYW0gX2Jsb2NrIGJsb2NrIG51bWJlcg0KICAgIEByZXR1cm4gdGhlIHRvdGFsIGFtb3VudCB0aGF0IHdpbGwgYmUgc2hhcmVkIHdpdGggdGhlIG1pbmVycw0KICAqKi8NCiAgZnVuY3Rpb24gYmxvY2tTdWJzaWR5KHVpbnQyNTYgX2Jsb2NrKQ0KICAgIHB1YmxpYw0KICAgIGNvbnN0YW50DQogICAgbm90QmVmb3JlR2VuZXNpcw0KICAgIHJldHVybnModWludDI1NikNCiAgew0KICAgIHVpbnQyNTYgaGFsdmluZ3MgPSBfYmxvY2suZGl2KHN1YnNpZHlIYWx2aW5nSW50ZXJ2YWwpOw0KDQogICAgaWYgKGhhbHZpbmdzID49IG1heEhhbHZpbmdzKSByZXR1cm4gMDsNCg0KICAgIHVpbnQyNTYgc3Vic2lkeSA9IElOSVRJQUxfU1VCU0lEWSA+PiBoYWx2aW5nczsNCg0KICAgIHJldHVybiBzdWJzaWR5Ow0KICB9DQoNCiAgLyoqDQogICAgQG5vdGljZSBDb21wdXRlcyB0aGUgc3Vic2lkeSBvZiBhIGZ1bGwgaGFsdmluZw0KICAgIEBwYXJhbSBfaGFsdmluZyBoYWx2aW5nDQogICAgQHJldHVybiB0aGUgdG90YWwgYW1vdW50IHRoYXQgd2lsbCBiZSBzaGFyZWQgd2l0aCB0aGUgbWluZXJzIGluIHRoaXMgaGFsdmluZw0KICAqKi8NCiAgZnVuY3Rpb24gaGFsdmluZ1N1YnNpZHkodWludDI1NiBfaGFsdmluZykNCiAgICBwdWJsaWMNCiAgICBjb25zdGFudA0KICAgIG5vdEJlZm9yZUdlbmVzaXMNCiAgICByZXR1cm5zKHVpbnQyNTYpDQogIHsNCiAgICB1aW50MjU2IHN0YXJ0QmxvY2sgPSBoYWx2aW5nU3RhcnRCbG9jayhfaGFsdmluZyk7DQoNCiAgICByZXR1cm4gYmxvY2tTdWJzaWR5KHN0YXJ0QmxvY2spLm11bChzdWJzaWR5SGFsdmluZ0ludGVydmFsKTsNCiAgfQ0KDQogIC8vLyBAbm90aWNlIEZhbGxiYWNrIGZ1bmN0aW9uIHdoaWNoIGltcGxlbWVudHMgaG93IG1pbmVycyBwYXJ0aWNpcGF0ZSBpbiBCVEgNCiAgZnVuY3Rpb24oKQ0KICAgIHBheWFibGUNCiAgew0KICAgIGNvbnRyaWJ1dGUobXNnLnNlbmRlcik7DQogIH0NCg0KICAvKioNCiAgICBAbm90aWNlIENvbnRyaWJ1dGUgdG8gdGhlIG1pbmluZyBvZiBCVEggb24gYmVoYWxmIG9mIGFub3RoZXIgbWluZXINCiAgICBAcGFyYW0gX21pbmVyIGFkZHJlc3MgdGhhdCB3aWxsIHJlY2VpdmUgdGhlIHN1YnNpZGllcw0KICAgIEByZXR1cm4gdHJ1ZSBpZiBzdWNjZXNzDQogICoqLw0KICBmdW5jdGlvbiBwcm94aWVkQ29udHJpYnV0aW9uKGFkZHJlc3MgX21pbmVyKQ0KICAgIHB1YmxpYw0KICAgIHBheWFibGUNCiAgICByZXR1cm5zIChib29sKQ0KICB7DQogICAgaWYgKF9taW5lciA9PSBhZGRyZXNzKDApKSB7DQogICAgICAvLyBJbiBjYXNlIHRoZSBfbWluZXIgcGFyYW1ldGVyIGlzIGludmFsaWQsIHJlZGlyZWN0IHRoZSBhc2lnbm1lbnQNCiAgICAgIC8vIHRvIHRoZSB0cmFuc2FjdGlvbiBzZW5kZXINCiAgICAgIHJldHVybiBjb250cmlidXRlKG1zZy5zZW5kZXIpOw0KICAgIH0gZWxzZSB7DQogICAgICByZXR1cm4gY29udHJpYnV0ZShfbWluZXIpOw0KICAgIH0NCiAgfQ0KDQogIC8qKg0KICAgIEBub3RpY2UgQ29udHJpYnV0ZSB0byB0aGUgbWluaW5nIG9mIEJUSA0KICAgIEBwYXJhbSBfbWluZXIgYWRkcmVzcyB0aGF0IHdpbGwgcmVjZWl2ZSB0aGUgc3Vic2lkaWVzDQogICAgQHJldHVybiB0cnVlIGlmIHN1Y2Nlc3MNCiAgKiovDQogIGZ1bmN0aW9uIGNvbnRyaWJ1dGUoYWRkcmVzcyBfbWluZXIpDQogICAgaW50ZXJuYWwNCiAgICBub3RCZWZvcmVHZW5lc2lzDQogICAgbm9uWmVyb1ZhbHVlZA0KICAgIG5vdFBhdXNlZA0KICAgIHJldHVybnMgKGJvb2wpDQogIHsNCiAgICB1aW50MjU2IGJsb2NrID0gY3VycmVudEJsb2NrKCk7DQogICAgdWludDI1NiBoYWx2aW5nID0gY3VycmVudEhhbHZpbmcoKTsNCiAgICB1aW50MjU2IGhhc2hSYXRlID0gSEFTSF9SQVRFX01VTFRJUExJRVIubXVsKG1zZy52YWx1ZSk7DQogICAgTWluZXIgbWluZXIgPSBtaW5lcnNbX21pbmVyXTsNCg0KICAgIC8vIEZpcnN0IG9mIGFsbCB1c2UgdGhlIGNvbnRyaWJ1dGUgdG8gc3luY2hyb25pemUgdGhlIGhhc2ggcmF0ZSBvZiB0aGUgcHJldmlvdXMgaGFsdmluZ3MNCiAgICBpZiAoaGFsdmluZyAhPSAwICYmIGhhbHZpbmcgPCBtYXhIYWx2aW5ncykgew0KICAgICAgdWludDI1NiBJOw0KICAgICAgdWludDI1NiBuID0gMDsNCiAgICAgIGZvciAoSSA9IGhhbHZpbmcgLSAxOyBJID4gMDsgSS0tKSB7DQogICAgICAgIGlmICghaGFsdmluZ3NIYXNoUmF0ZVtJXS5jYXJyaWVkKSB7DQogICAgICAgICAgbiA9IG4uYWRkKDEpOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgIGJyZWFrOw0KICAgICAgICB9DQogICAgICB9DQoNCiAgICAgIGZvciAoSSA9IGhhbHZpbmcgLSBuOyBJIDwgaGFsdmluZzsgSSsrKSB7DQogICAgICAgIGlmICghaGFsdmluZ3NIYXNoUmF0ZVtJXS5jYXJyaWVkKSB7DQogICAgICAgICAgaGFsdmluZ3NIYXNoUmF0ZVtJXS5jYXJyaWVkID0gdHJ1ZTsNCiAgICAgICAgICBoYWx2aW5nc0hhc2hSYXRlW0ldLnJhdGUgPSBoYWx2aW5nc0hhc2hSYXRlW0ldLnJhdGUuYWRkKGhhbHZpbmdzSGFzaFJhdGVbSSAtIDFdLnJhdGUpOw0KICAgICAgICB9DQogICAgICB9DQogICAgfQ0KDQogICAgLy8gSW5jcmVhc2UgdGhlIGhhbHZpbmcgaGFzaCByYXRlIGFjY29yZGluZ2x5LCBhZnRlciBtYXhIYWx2aW5ncyB0aGUgaGFsdmluZ3MgaGFzaCByYXRlIGFyZSBub3QgbmVlZGVkIGFuZCB0aGVyZWZvcmUgbm90IHVwZGF0ZWQNCiAgICBpZiAoaGFsdmluZyA8IG1heEhhbHZpbmdzKSB7DQogICAgICBoYWx2aW5nc0hhc2hSYXRlW2hhbHZpbmddLnJhdGUgPSBoYWx2aW5nc0hhc2hSYXRlW2hhbHZpbmddLnJhdGUuYWRkKGhhc2hSYXRlKTsNCiAgICB9DQoNCiAgICAvLyBBZnRlciB1cGRhdGluZyB0aGUgaGFsdmluZyBoYXNoIHJhdGUsIGRvIHRoZSBtaW5lciBjb250cmlidXRpb24NCg0KICAgIC8vIElmIGl0J3MgdGhlIHZlcnkgZmlyc3QgdGltZSB0aGUgbWluZXIgcGFydGljaXBhdGVzIGluIHRoZSBCVEggdG9rZW4sIGFzc2lnbiBhbiBpbml0aWFsIGJsb2NrDQogICAgLy8gVGhpcyBibG9jayBpcyB1c2VkIHdpdGggdHdvIHBvcnBvdXNlczoNCiAgICAvLyAgICAtIFRvIGFjY291bnQgaW4gd2hpY2ggaGFsdmluZyB0aGUgbWluZXIgaXMNCiAgICAvLyAgICAtIFRvIGtub3cgdGhlIG9mZnNldCBpbnNpZGUgdGhlIGhhbHZpbmcgYW5kIGFsbG93IG9ubHkgY2xhaW1pbmdzIGFmdGVyIHRoZSBtaW5lciBvZmZzZXQNCiAgICBpZiAobWluZXIuYmxvY2sgPT0gMCkgew0KICAgICAgbWluZXIuYmxvY2sgPSBibG9jazsNCiAgICB9DQoNCiAgICAvLyBBZGQgdGhpcyBoYXNoIHJhdGUgdG8gdGhlIG1pbmVyIGF0IHRoZSBjdXJyZW50IGhhbHZpbmcNCiAgICBtaW5lci5oYXNoUmF0ZVtoYWx2aW5nXS5yYXRlID0gbWluZXIuaGFzaFJhdGVbaGFsdmluZ10ucmF0ZS5hZGQoaGFzaFJhdGUpOw0KICAgIG1pbmVyLnRvdGFsSGFzaFJhdGUgPSBtaW5lci50b3RhbEhhc2hSYXRlLmFkZChoYXNoUmF0ZSk7DQoNCiAgICAvLyBJbmNyZWFzZSB0aGUgdG90YWwgaGFzaCByYXRlDQogICAgdG90YWxIYXNoUmF0ZSA9IHRvdGFsSGFzaFJhdGUuYWRkKGhhc2hSYXRlKTsNCg0KICAgIC8vIFNlbmQgY29udHJpYnV0aW9uIHRvIHRoZSBCVEggZm91bmRhdGlvbiBtdWx0aXNpZyB3YWxsZXQNCiAgICBpZiAoIWJ0aEZvdW5kYXRpb25XYWxsZXQuc2VuZChtc2cudmFsdWUpKSB7DQogICAgICB0aHJvdzsNCiAgICB9DQoNCiAgICAvLyBMb2cgdGhlIGNvbnRyaWJ1dGUgY2FsbA0KICAgIExvZ0NvbnRyaWJ1dGlvbihfbWluZXIsIG1zZy52YWx1ZSwgaGFzaFJhdGUsIGJsb2NrLCBoYWx2aW5nKTsNCg0KICAgIHJldHVybiB0cnVlOw0KICB9DQoNCiAgLyoqDQogICAgQG5vdGljZSBNaW5lcnMgc3Vic2lkaWVzIG11c3QgYmUgY2xhaW1lZCBieSB0aGUgbWluZXJzIGNhbGxpbmcgY2xhaW1IYWx2aW5nc1N1YnNpZGllcyhfbikNCiAgICBAcGFyYW0gX24gbnVtYmVyIG9mIGhhbHZpbmdzIHRvIGNsYWltDQogICAgQHJldHVybiB0aGUgdG90YWwgYW1vdW50IGNsYWltZWQgYW5kIHN1Y2Nlc3NmdWxseSBhc3NpZ25lZCBhcyBCVEggdG8gdGhlIG1pbmVyDQogICoqLw0KICBmdW5jdGlvbiBjbGFpbUhhbHZpbmdzU3Vic2lkaWVzKHVpbnQyNTYgX24pDQogICAgcHVibGljDQogICAgbm90QmVmb3JlR2VuZXNpcw0KICAgIG5vdFBhdXNlZA0KICAgIGlzTWluZXIobXNnLnNlbmRlcikNCiAgICByZXR1cm5zKHVpbnQyNTYpDQogIHsNCiAgICBNaW5lciBtaW5lciA9IG1pbmVyc1ttc2cuc2VuZGVyXTsNCiAgICB1aW50MjU2IHN0YXJ0ID0gYmxvY2tIYWx2aW5nKG1pbmVyLmJsb2NrKTsNCiAgICB1aW50MjU2IGVuZCA9IHN0YXJ0LmFkZChfbik7DQoNCiAgICBpZiAoZW5kID4gY3VycmVudEhhbHZpbmcoKSkgew0KICAgICAgcmV0dXJuIDA7DQogICAgfQ0KDQogICAgdWludDI1NiBzdWJzaWR5ID0gMDsNCiAgICB1aW50MjU2IHRvdGFsU3Vic2lkeSA9IDA7DQogICAgdWludDI1NiB1bmNsYWltZWQgPSAwOw0KICAgIHVpbnQyNTYgaGFzaFJhdGUgPSAwOw0KICAgIHVpbnQyNTYgSzsNCg0KICAgIC8vIENsYWltIGVhY2ggdW5jbGFpbWVkIGhhbHZpbmcgc3Vic2lkeQ0KICAgIGZvcihLID0gc3RhcnQ7IEsgPCBlbmQgJiYgSyA8IG1heEhhbHZpbmdzOyBLKyspIHsNCiAgICAgIC8vIENoZWNrIGlmIHRoZSB0b3RhbCBoYXNoIHJhdGUgaGFzIGJlZW4gY2FycmllZCwgb3RoZXJ3aXNlIHRoZSBjdXJyZW50IGhhbHZpbmcNCiAgICAgIC8vIGhhc2ggcmF0ZSBuZWVkcyB0byBiZSB1cGRhdGVkIGNhcnJ5aW5nIHRoZSB0b3RhbCBmcm9tIHRoZSBsYXN0IGNhcnJpZWQNCiAgICAgIEhhbHZpbmdIYXNoUmF0ZSBoYWx2aW5nSGFzaFJhdGUgPSBoYWx2aW5nc0hhc2hSYXRlW0tdOw0KDQogICAgICBpZiAoIWhhbHZpbmdIYXNoUmF0ZS5jYXJyaWVkKSB7DQogICAgICAgIGhhbHZpbmdIYXNoUmF0ZS5jYXJyaWVkID0gdHJ1ZTsNCiAgICAgICAgaGFsdmluZ0hhc2hSYXRlLnJhdGUgPSBoYWx2aW5nSGFzaFJhdGUucmF0ZS5hZGQoaGFsdmluZ3NIYXNoUmF0ZVtLLTFdLnJhdGUpOw0KICAgICAgfQ0KDQogICAgICAvLyBBY2N1bXVsYXRlIHRoZSBtaW5lciBoYXNoIHJhdGUgYXMgYWxsIHRoZSBjb250cmlidXRpb25zIGFyZSBhY2NvdW50ZWQgaW4gdGhlIGNvbnRyaWJ1dGlvbg0KICAgICAgLy8gYW5kIG5lZWRzIHRvIGJlIHN1bW1lZCB1cCB0byByZWZsZWN0IHRoZSBhY2N1bXVsYXRlZCB2YWx1ZQ0KICAgICAgTWluZXJIYXNoUmF0ZSBtaW5lckhhc2hSYXRlID0gbWluZXIuaGFzaFJhdGVbS107DQogICAgICBpZiAoIW1pbmVySGFzaFJhdGUuY2FycmllZCkgew0KICAgICAgICBtaW5lckhhc2hSYXRlLmNhcnJpZWQgPSB0cnVlOw0KICAgICAgICBtaW5lckhhc2hSYXRlLnJhdGUgPSBtaW5lckhhc2hSYXRlLnJhdGUuYWRkKG1pbmVyLmhhc2hSYXRlW0stMV0ucmF0ZSk7DQogICAgICB9DQoNCiAgICAgIGhhc2hSYXRlID0gbWluZXJIYXNoUmF0ZS5yYXRlOw0KDQogICAgICBpZiAoaGFzaFJhdGUgIT0gMCl7DQogICAgICAgIC8vIElmIHRoZSBoYWx2aW5nIHRvIGNsYWltIGlzIHRoZSBsYXN0IGNsYWltYWJsZSwgY2hlY2sgdGhlIG9mZnNldHMNCiAgICAgICAgaWYgKEsgPT0gY3VycmVudEhhbHZpbmcoKS5zdWIoMSkpIHsNCiAgICAgICAgICBpZiAoY3VycmVudEJsb2NrKCkgJSBzdWJzaWR5SGFsdmluZ0ludGVydmFsIDwgbWluZXIuYmxvY2sgJSBzdWJzaWR5SGFsdmluZ0ludGVydmFsKSB7DQogICAgICAgICAgICAvLyBGaW5pc2ggdGhlIGxvb3ANCiAgICAgICAgICAgIGNvbnRpbnVlOw0KICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQogICAgICAgIFN1YnNpZHkgc3ViID0gaGFsdmluZ3NTdWJzaWRpZXNbS107DQoNCiAgICAgICAgaWYgKCFzdWIuY2xhaW1lZCkgew0KICAgICAgICAgIHN1Yi5jbGFpbWVkID0gdHJ1ZTsNCiAgICAgICAgICBzdWIudmFsdWUgPSBoYWx2aW5nU3Vic2lkeShLKTsNCiAgICAgICAgfQ0KDQogICAgICAgIHVuY2xhaW1lZCA9IHN1Yi52YWx1ZTsNCiAgICAgICAgc3Vic2lkeSA9IGhhbHZpbmdTdWJzaWR5KEspLm11bChoYXNoUmF0ZSkuZGl2KGhhbHZpbmdIYXNoUmF0ZS5yYXRlKTsNCg0KICAgICAgICBpZiAoc3Vic2lkeSA+IHVuY2xhaW1lZCkgew0KICAgICAgICAgIHN1YnNpZHkgPSB1bmNsYWltZWQ7DQogICAgICAgIH0NCg0KICAgICAgICB0b3RhbFN1YnNpZHkgPSB0b3RhbFN1YnNpZHkuYWRkKHN1YnNpZHkpOw0KICAgICAgICBzdWIudmFsdWUgPSBzdWIudmFsdWUuc3ViKHN1YnNpZHkpOw0KDQogICAgICAgIExvZ0NsYWltSGFsdmluZ1N1YnNpZHkobXNnLnNlbmRlciwgbWluZXIuYmxvY2ssIEssIHN1YnNpZHkpOw0KICAgICAgICBMb2dSZW1haW5pbmdIYWx2aW5nU3Vic2lkeShLLCBzdWIudmFsdWUpOw0KICAgICAgfQ0KDQogICAgICAvLyBNb3ZlIHRoZSBtaW5lciB0byB0aGUgbmV4dCBoYWx2aW5nDQogICAgICBtaW5lci5ibG9jayA9IG1pbmVyLmJsb2NrLmFkZChzdWJzaWR5SGFsdmluZ0ludGVydmFsKTsNCiAgICB9DQoNCiAgICAvLyBJZiBLIGlzIGxlc3MgdGhhbiBlbmQsIHRoZSBsb29wIGV4aXRlZCBiZWNhdXNlIEsgPCBtYXhIYWx2aW5ncywgc28NCiAgICAvLyBtb3ZlIHRoZSBtaW5lciBlbmQgLSBLIGhhbHZpbmdzDQogICAgaWYgKEsgPCBlbmQpIHsNCiAgICAgIG1pbmVyLmJsb2NrID0gbWluZXIuYmxvY2suYWRkKHN1YnNpZHlIYWx2aW5nSW50ZXJ2YWwubXVsKGVuZC5zdWIoSykpKTsNCiAgICB9DQoNCiAgICBpZiAodG90YWxTdWJzaWR5ICE9IDApew0KICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSBiYWxhbmNlc1ttc2cuc2VuZGVyXS5hZGQodG90YWxTdWJzaWR5KTsNCiAgICAgIHRvdGFsU3VwcGx5ID0gdG90YWxTdXBwbHkuYWRkKHRvdGFsU3Vic2lkeSk7DQogICAgfQ0KDQogICAgcmV0dXJuIHRvdGFsU3Vic2lkeTsNCiAgfQ0KDQogIC8qKg0KICAgIEBub3RpY2UgQ29tcHV0ZSB0aGUgbnVtYmVyIG9mIGhhbHZpbmdzIGNsYWltYWJsZSBieSB0aGUgbWluZXIgY2FsbGVyDQogICAgQHJldHVybiBudW1iZXIgb2YgaGFsdmluZ3MgdGhhdCBhIG1pbmVyIGlzIGFsbG93ZWQgdG8gY2xhaW0NCiAgKiovDQogIGZ1bmN0aW9uIGNsYWltYWJsZUhhbHZpbmdzKCkNCiAgICBwdWJsaWMNCiAgICBjb25zdGFudA0KICAgIHJldHVybnModWludDI1NikNCiAgew0KICAgIHJldHVybiBjbGFpbWFibGVIYWx2aW5nc09mKG1zZy5zZW5kZXIpOw0KICB9DQoNCg0KICAvKioNCiAgICBAbm90aWNlIENvbXB1dGVzIHRoZSBudW1iZXIgb2YgaGFsdmluZ3MgY2xhaW1hYmxlIGJ5IHRoZSBtaW5lcg0KICAgIEByZXR1cm4gbnVtYmVyIG9mIGhhbHZpbmdzIHRoYXQgYSBtaW5lciBpcyBlbnRpdGxlZCBjbGFpbQ0KICAqKi8NCiAgZnVuY3Rpb24gY2xhaW1hYmxlSGFsdmluZ3NPZihhZGRyZXNzIF9taW5lcikNCiAgICBwdWJsaWMNCiAgICBjb25zdGFudA0KICAgIG5vdEJlZm9yZUdlbmVzaXMNCiAgICBpc01pbmVyKF9taW5lcikNCiAgICByZXR1cm5zKHVpbnQyNTYpDQogIHsNCiAgICBNaW5lciBtaW5lciA9IG1pbmVyc1tfbWluZXJdOw0KICAgIHVpbnQyNTYgaGFsdmluZyA9IGN1cnJlbnRIYWx2aW5nKCk7DQogICAgdWludDI1NiBtaW5lckhhbHZpbmcgPSBibG9ja0hhbHZpbmcobWluZXIuYmxvY2spOw0KDQogICAgLy8gSGFsdmluZ3MgY2FuIGJlIGNsYWltZWQgd2hlbiB0aGV5IGFyZSBmaW5pc2hlZA0KICAgIGlmIChtaW5lckhhbHZpbmcgPT0gaGFsdmluZykgew0KICAgICAgcmV0dXJuIDA7DQogICAgfSBlbHNlIHsNCiAgICAgIC8vIENoZWNrIHRoZSBtaW5lciBvZmZzZXQNCiAgICAgIGlmIChjdXJyZW50QmxvY2soKSAlIHN1YnNpZHlIYWx2aW5nSW50ZXJ2YWwgPCBtaW5lci5ibG9jayAlIHN1YnNpZHlIYWx2aW5nSW50ZXJ2YWwpIHsNCiAgICAgICAgLy8gSW4gdGhpcyBjYXNlIHRoZSBtaW5lciBvZmZzZXQgaXMgYmVoaW5kIHRoZSBjdXJyZW50IGJsb2NrIG9mZnNldCwgc28gaXQgbXVzdCB3YWl0DQogICAgICAgIC8vIHRpbGwgdGhlIGJsb2NrIG9mZnNldCBpcyBncmVhdGVyIG9yIGVxdWFsIHRoYW4gaGlzIG9mZnNldA0KICAgICAgICByZXR1cm4gaGFsdmluZy5zdWIobWluZXJIYWx2aW5nKS5zdWIoMSk7DQogICAgICB9IGVsc2Ugew0KICAgICAgICByZXR1cm4gaGFsdmluZy5zdWIobWluZXJIYWx2aW5nKTsNCiAgICAgIH0NCiAgICB9DQogIH0NCg0KICAvKioNCiAgICBAbm90aWNlIENsYWltIGFsbCB0aGUgdW5jbGFpbWVkIGhhbHZpbmcgc3Vic2lkaWVzIG9mIGEgbWluZXINCiAgICBAcmV0dXJuIHRvdGFsIGFtb3VudCBvZiBCVEggYXNzaWduZWQgdG8gdGhlIG1pbmVyDQogICoqLw0KICBmdW5jdGlvbiBjbGFpbSgpDQogICAgcHVibGljDQogICAgbm90QmVmb3JlR2VuZXNpcw0KICAgIG5vdFBhdXNlZA0KICAgIGlzTWluZXIobXNnLnNlbmRlcikNCiAgICByZXR1cm5zKHVpbnQyNTYpDQogIHsNCiAgICByZXR1cm4gY2xhaW1IYWx2aW5nc1N1YnNpZGllcyhjbGFpbWFibGVIYWx2aW5ncygpKTsNCiAgfQ0KDQogIC8qKg0KICAgIEBub3RpY2UgRVJDMjAgdHJhbnNmZXIgZnVuY3Rpb24gb3ZlcnJpZGRlbiB0byBkaXNhYmxlIHRyYW5zZmVycyB3aGVuIHBhdXNlZA0KICAqKi8NCiAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQgX3ZhbHVlKQ0KICAgIHB1YmxpYw0KICAgIG5vdFBhdXNlZA0KICB7DQogICAgc3VwZXIudHJhbnNmZXIoX3RvLCBfdmFsdWUpOw0KICB9DQoNCiAgLyoqDQogICAgQG5vdGljZSBFUkMyMCB0cmFuc2ZlckZyb20gZnVuY3Rpb24gb3ZlcnJpZGRlbiB0byBkaXNhYmxlIHRyYW5zZmVycyB3aGVuIHBhdXNlZA0KICAqKi8NCiAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50IF92YWx1ZSkNCiAgICBwdWJsaWMNCiAgICBub3RQYXVzZWQNCiAgew0KICAgIHN1cGVyLnRyYW5zZmVyRnJvbShfZnJvbSwgX3RvLCBfdmFsdWUpOw0KICB9DQoNCiAgLy8gUG9sbCBmdW5jdGlvbnMNCg0KICAvKioNCiAgICBAbm90aWNlIENyZWF0ZSBhIG5ldyBwb2xsDQogICAgQHBhcmFtIF90aXRsZSBwb2xsIHRpdGxlDQogICAgQHBhcmFtIF9wZXJjZW50YWdlIHBlcmNlbnRhZ2Ugb2YgaGFzaCByYXRlIHRoYXQgbXVzdCB2b3RlIHRvIGFwcHJvdmUgdGhlIHBvbGwNCiAgKiovDQogIGZ1bmN0aW9uIGNyZWF0ZVBvbGwoc3RyaW5nIF90aXRsZSwgdWludDggX3BlcmNlbnRhZ2UpDQogICAgZXh0ZXJuYWwNCiAgICBvbmx5bWFueW93bmVycyhzaGEzKG1zZy5kYXRhKSkNCiAgew0KICAgIGJ5dGVzMzIgaGFzaCA9IHNoYTMoX3RpdGxlKTsNCiAgICBQb2xsIHBvbGwgPSBwb2xsc1toYXNoXTsNCg0KICAgIGlmIChwb2xsLmV4aXN0cykgew0KICAgICAgdGhyb3c7DQogICAgfQ0KDQogICAgaWYgKF9wZXJjZW50YWdlIDwgMSB8fCBfcGVyY2VudGFnZSA+IDEwMCkgew0KICAgICAgdGhyb3c7DQogICAgfQ0KDQogICAgcG9sbC5leGlzdHMgPSB0cnVlOw0KICAgIHBvbGwudGl0bGUgPSBfdGl0bGU7DQogICAgcG9sbC5wZXJjZW50YWdlID0gX3BlcmNlbnRhZ2U7DQogICAgcG9sbC5oYXNoUmF0ZSA9IDA7DQogICAgcG9sbC5hcHByb3ZlZCA9IGZhbHNlOw0KICAgIHBvbGwuYXBwcm92YWxCbG9jayA9IDA7DQogICAgcG9sbC5hcHByb3ZhbEhhc2hSYXRlID0gMDsNCiAgICBwb2xsLmFwcHJvdmFsVG90YWxIYXNoUmF0ZSA9IDA7DQoNCiAgICBMb2dQb2xsQ3JlYXRlZChoYXNoKTsNCiAgfQ0KDQogIC8qKg0KICAgIEBub3RpY2UgRGVsZXRlIGEgcG9sbA0KICAgIEBwYXJhbSBfaGFzaCBzaGEzIG9mIHRoZSBwb2xsIHRpdGxlLCBhbHNvIGFyZyBvZiBMb2dQb2xsQ3JlYXRlZCBldmVudA0KICAqKi8NCiAgZnVuY3Rpb24gZGVsZXRlUG9sbChieXRlczMyIF9oYXNoKQ0KICAgIGV4dGVybmFsDQogICAgb25seW1hbnlvd25lcnMoc2hhMyhtc2cuZGF0YSkpDQogIHsNCiAgICBQb2xsIHBvbGwgPSBwb2xsc1tfaGFzaF07DQoNCiAgICBpZiAocG9sbC5leGlzdHMpIHsNCiAgICAgIGRlbGV0ZSBwb2xsc1tfaGFzaF07DQoNCiAgICAgIExvZ1BvbGxEZWxldGVkKF9oYXNoKTsNCiAgICB9DQogIH0NCg0KICAvKioNCiAgICBAbm90aWNlIFJldHJlaXZlIHRoZSBwb2xsIGRhdGENCiAgICBAcGFyYW0gX2hhc2ggc2hhMyBvZiB0aGUgcG9sbCB0aXRsZSwgYWxzbyBhcmcgb2YgTG9nUG9sbENyZWF0ZWQgZXZlbnQNCiAgICBAcmV0dXJuIGFuIGFycmF5IHdpdGggdGhlIHBvbGwgZGF0YQ0KICAqKi8NCiAgZnVuY3Rpb24gZ2V0UG9sbChieXRlczMyIF9oYXNoKQ0KICAgIGV4dGVybmFsDQogICAgY29uc3RhbnQNCiAgICByZXR1cm5zKGJvb2wsIHN0cmluZywgdWludDgsIHVpbnQyNTYsIHVpbnQyNTYsIGJvb2wsIHVpbnQyNTYsIHVpbnQyNTYsIHVpbnQyNTYpDQogIHsNCiAgICBQb2xsIHBvbGwgPSBwb2xsc1tfaGFzaF07DQoNCiAgICByZXR1cm4gKHBvbGwuZXhpc3RzLCBwb2xsLnRpdGxlLCBwb2xsLnBlcmNlbnRhZ2UsIHBvbGwuaGFzaFJhdGUsIHRvdGFsSGFzaFJhdGUsDQogICAgICBwb2xsLmFwcHJvdmVkLCBwb2xsLmFwcHJvdmFsQmxvY2ssIHBvbGwuYXBwcm92YWxIYXNoUmF0ZSwgcG9sbC5hcHByb3ZhbFRvdGFsSGFzaFJhdGUpOw0KICB9DQoNCiAgZnVuY3Rpb24gdm90ZShieXRlczMyIF9oYXNoKQ0KICAgIGV4dGVybmFsDQogICAgaXNNaW5lcihtc2cuc2VuZGVyKQ0KICB7DQogICAgUG9sbCBwb2xsID0gcG9sbHNbX2hhc2hdOw0KDQogICAgaWYgKHBvbGwuZXhpc3RzKSB7DQogICAgICBpZiAoIXBvbGwudm90ZXNbbXNnLnNlbmRlcl0pIHsNCiAgICAgICAgLy8gbXNnLnNlbmRlciBoYXMgbm90IHlldCB2b3RlZA0KICAgICAgICBNaW5lciBtaW5lciA9IG1pbmVyc1ttc2cuc2VuZGVyXTsNCg0KICAgICAgICBwb2xsLnZvdGVzW21zZy5zZW5kZXJdID0gdHJ1ZTsNCiAgICAgICAgcG9sbC5oYXNoUmF0ZSA9IHBvbGwuaGFzaFJhdGUuYWRkKG1pbmVyLnRvdGFsSGFzaFJhdGUpOw0KDQogICAgICAgIC8vIExvZyB0aGUgdm90ZQ0KICAgICAgICBMb2dQb2xsVm90ZWQoX2hhc2gsIG1zZy5zZW5kZXIsIG1pbmVyLnRvdGFsSGFzaFJhdGUpOw0KDQogICAgICAgIC8vIENoZWNrIGlmIHRoZSBwb2xsIGhhcyBzdWNjZWVkZWQNCiAgICAgICAgaWYgKCFwb2xsLmFwcHJvdmVkKSB7DQogICAgICAgICAgaWYgKHBvbGwuaGFzaFJhdGUubXVsKDEwMCkuZGl2KHRvdGFsSGFzaFJhdGUpID49IHBvbGwucGVyY2VudGFnZSkgew0KICAgICAgICAgICAgcG9sbC5hcHByb3ZlZCA9IHRydWU7DQoNCiAgICAgICAgICAgIHBvbGwuYXBwcm92YWxCbG9jayA9IGJsb2NrLm51bWJlcjsNCiAgICAgICAgICAgIHBvbGwuYXBwcm92YWxIYXNoUmF0ZSA9IHBvbGwuaGFzaFJhdGU7DQogICAgICAgICAgICBwb2xsLmFwcHJvdmFsVG90YWxIYXNoUmF0ZSA9IHRvdGFsSGFzaFJhdGU7DQoNCiAgICAgICAgICAgIExvZ1BvbGxBcHByb3ZlZChfaGFzaCk7DQogICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICB9DQogICAgfQ0KICB9DQoNCiAgLyoNCiAgICogSW50ZXJuYWwgZnVuY3Rpb25zDQogICAqLw0KDQoNCiAgLyoNCiAgICogV2ViMyBjYWxsIGZ1bmN0aW9ucw0KICAgKi8NCg0KICAvKioNCiAgICBAbm90aWNlIFJldHVybiB0aGUgYmxvY2tzIHBlciBoYWx2aW5nDQogICAgQHJldHVybiBibG9ja3MgcGVyIGhhbHZpbmcNCiAgKiovDQogIGZ1bmN0aW9uIGdldEhhbHZpbmdCbG9ja3MoKQ0KICAgIHB1YmxpYw0KICAgIGNvbnN0YW50DQogICAgbm90QmVmb3JlR2VuZXNpcw0KICAgIHJldHVybnModWludDI1NikNCiAgew0KICAgIHJldHVybiBzdWJzaWR5SGFsdmluZ0ludGVydmFsOw0KICB9DQoNCiAgLyoqDQogICAgQG5vdGljZSBSZXR1cm4gdGhlIGJsb2NrIGluIHdoaWNoIHRoZSBtaW5lciBpcw0KICAgIEByZXR1cm4gdGhlIGxhc3QgYmxvY2sgbnVtYmVyIG1pbmVkIGJ5IHRoZSBtaW5lcg0KICAqKi8NCiAgZnVuY3Rpb24gZ2V0TWluZXJCbG9jaygpDQogICAgcHVibGljDQogICAgY29uc3RhbnQNCiAgICByZXR1cm5zKHVpbnQyNTYpDQogIHsNCiAgICByZXR1cm4gZ2V0QmxvY2tPZihtc2cuc2VuZGVyKTsNCiAgfQ0KDQogIC8qKg0KICAgIEBub3RpY2UgUmV0dXJuIHRoZSBibG9jayBpbiB3aGljaCB0aGUgbWluZXIgaXMNCiAgICBAcmV0dXJuIHRoZSBsYXN0IGJsb2NrIG51bWJlciBtaW5lZCBieSB0aGUgbWluZXINCiAgKiovDQogIGZ1bmN0aW9uIGdldEJsb2NrT2YoYWRkcmVzcyBfbWluZXIpDQogICAgcHVibGljDQogICAgY29uc3RhbnQNCiAgICBub3RCZWZvcmVHZW5lc2lzDQogICAgaXNNaW5lcihfbWluZXIpDQogICAgcmV0dXJucyh1aW50MjU2KQ0KICB7DQogICAgcmV0dXJuIG1pbmVyc1tfbWluZXJdLmJsb2NrOw0KICB9DQoNCiAgLyoqDQogICAgQG5vdGljZSBSZXR1cm4gdGhlIG1pbmVyIGhhbHZpbmcgKHN0YXJ0aW5nIGhhbHZpbmcgb3IgbGFzdCBjbGFpbWVkKQ0KICAgIEByZXR1cm4gbGFzdCBjbGFpbWVkIG9yIHN0YXJ0aW5nIGhhbHZpbmcgb2YgdGhlIG1pbmVyDQogICoqLw0KICBmdW5jdGlvbiBnZXRIYWx2aW5nT2YoYWRkcmVzcyBfbWluZXIpDQogICAgcHVibGljDQogICAgY29uc3RhbnQNCiAgICBub3RCZWZvcmVHZW5lc2lzDQogICAgaXNNaW5lcihfbWluZXIpDQogICAgcmV0dXJucyh1aW50MjU2KQ0KICB7DQogICAgcmV0dXJuIGJsb2NrSGFsdmluZyhtaW5lcnNbX21pbmVyXS5ibG9jayk7DQogIH0NCg0KICAvKioNCiAgICBAbm90aWNlIFJldHVybiB0aGUgbWluZXIgaGFsdmluZyAoc3RhcnRpbmcgaGFsdmluZyBvciBsYXN0IGNsYWltZWQpDQogICAgQHJldHVybiBsYXN0IGNsYWltZWQgb3Igc3RhcnRpbmcgaGFsdmluZyBvZiB0aGUgbWluZXINCiAgKiovDQogIGZ1bmN0aW9uIGdldE1pbmVySGFsdmluZygpDQogICAgcHVibGljDQogICAgY29uc3RhbnQNCiAgICByZXR1cm5zKHVpbnQyNTYpDQogIHsNCiAgICByZXR1cm4gZ2V0SGFsdmluZ09mKG1zZy5zZW5kZXIpOw0KICB9DQoNCiAgLyoqDQogICAgQG5vdGljZSBUb3RhbCBoYXNoIHJhdGUgb2YgYSBtaW5lciBpbiBhIGhhbHZpbmcNCiAgICBAcGFyYW0gX21pbmVyIGFkZHJlc3Mgb2YgdGhlIG1pbmVyDQogICAgQHJldHVybiBtaW5lciB0b3RhbCBhY2N1bXVsYXRlZCBoYXNoIHJhdGUNCiAgKiovDQogIGZ1bmN0aW9uIGdldE1pbmVySGFsdmluZ0hhc2hSYXRlT2YoYWRkcmVzcyBfbWluZXIpDQogICAgcHVibGljDQogICAgY29uc3RhbnQNCiAgICBub3RCZWZvcmVHZW5lc2lzDQogICAgaXNNaW5lcihfbWluZXIpDQogICAgcmV0dXJucyh1aW50MjU2KQ0KICB7DQogICAgTWluZXIgbWluZXIgPSBtaW5lcnNbX21pbmVyXTsNCiAgICB1aW50MjU2IGhhbHZpbmcgPSBnZXRNaW5lckhhbHZpbmcoKTsNCiAgICBNaW5lckhhc2hSYXRlIGhhc2hSYXRlID0gbWluZXIuaGFzaFJhdGVbaGFsdmluZ107DQoNCiAgICBpZiAoaGFsdmluZyA9PSAwKSB7DQogICAgICByZXR1cm4gIGhhc2hSYXRlLnJhdGU7DQogICAgfSBlbHNlIHsNCiAgICAgIGlmICghaGFzaFJhdGUuY2FycmllZCkgew0KICAgICAgICByZXR1cm4gaGFzaFJhdGUucmF0ZS5hZGQobWluZXIuaGFzaFJhdGVbaGFsdmluZyAtIDFdLnJhdGUpOw0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgcmV0dXJuIGhhc2hSYXRlLnJhdGU7DQogICAgICB9DQogICAgfQ0KICB9DQoNCiAgLyoqDQogICAgQG5vdGljZSBUb3RhbCBoYXNoIHJhdGUgb2YgYSBtaW5lciBpbiBhIGhhbHZpbmcNCiAgICBAcmV0dXJuIG1pbmVyIHRvdGFsIGFjY3VtdWxhdGVkIGhhc2ggcmF0ZQ0KICAqKi8NCiAgZnVuY3Rpb24gZ2V0TWluZXJIYWx2aW5nSGFzaFJhdGUoKQ0KICAgIHB1YmxpYw0KICAgIGNvbnN0YW50DQogICAgcmV0dXJucyh1aW50MjU2KQ0KICB7DQogICAgcmV0dXJuIGdldE1pbmVySGFsdmluZ0hhc2hSYXRlT2YobXNnLnNlbmRlcik7DQogIH0NCg0KICAvKioNCiAgICBAbm90aWNlIENvbXB1dGUgdGhlIG1pbmVyIGhhbHZpbmdzIG9mZnNldA0KICAgIEBwYXJhbSBfbWluZXIgYWRkcmVzcyBvZiB0aGUgbWluZXINCiAgICBAcmV0dXJuIG1pbmVyIGhhbHZpbmcgb2Zmc2V0DQogICoqLw0KICBmdW5jdGlvbiBnZXRNaW5lck9mZnNldE9mKGFkZHJlc3MgX21pbmVyKQ0KICAgIHB1YmxpYw0KICAgIGNvbnN0YW50DQogICAgbm90QmVmb3JlR2VuZXNpcw0KICAgIGlzTWluZXIoX21pbmVyKQ0KICAgIHJldHVybnModWludDI1NikNCiAgew0KICAgIHJldHVybiBibG9ja09mZnNldChtaW5lcnNbX21pbmVyXS5ibG9jayk7DQogIH0NCg0KICAvKioNCiAgICBAbm90aWNlIENvbXB1dGUgdGhlIG1pbmVyIGhhbHZpbmdzIG9mZnNldA0KICAgIEByZXR1cm4gbWluZXIgaGFsdmluZyBvZmZzZXQNCiAgKiovDQogIGZ1bmN0aW9uIGdldE1pbmVyT2Zmc2V0KCkNCiAgICBwdWJsaWMNCiAgICBjb25zdGFudA0KICAgIHJldHVybnModWludDI1NikNCiAgew0KICAgIHJldHVybiBnZXRNaW5lck9mZnNldE9mKG1zZy5zZW5kZXIpOw0KICB9DQoNCiAgLyoqDQogICAgQG5vdGljZSBDYWxjdWxhdGUgdGhlIGhhc2ggcmF0ZSBvZiBhIG1pbmVyIGluIGEgaGFsdmluZw0KICAgIEBkZXYgVGFrZSBpbnRvIGFjY291bnQgdGhhdCB0aGUgcmF0ZSBjYW4gYmUgdW5jYXJyaWVkDQogICAgQHBhcmFtIF9oYWx2aW5nIG51bWJlciBvZiBoYWx2aW5nDQogICAgQHJldHVybiAoY2FycmllZCwgcmF0ZSkgYSB0dXBsZSB3aXRoIHRoZSByYXRlIGFuZCBpZiB0aGUgdmFsdWUgaGFzIGJlZW4gY2FycmllZCBmcm9tIHByZXZpb3VzIGhhbHZpbmdzDQogICoqLw0KICBmdW5jdGlvbiBnZXRIYXNoUmF0ZU9mKGFkZHJlc3MgX21pbmVyLCB1aW50MjU2IF9oYWx2aW5nKQ0KICAgIHB1YmxpYw0KICAgIGNvbnN0YW50DQogICAgbm90QmVmb3JlR2VuZXNpcw0KICAgIGlzTWluZXIoX21pbmVyKQ0KICAgIHJldHVybnMoYm9vbCwgdWludDI1NikNCiAgew0KICAgIHJlcXVpcmUoX2hhbHZpbmcgPD0gY3VycmVudEhhbHZpbmcoKSk7DQoNCiAgICBNaW5lciBtaW5lciA9IG1pbmVyc1tfbWluZXJdOw0KICAgIE1pbmVySGFzaFJhdGUgaGFzaFJhdGUgPSBtaW5lci5oYXNoUmF0ZVtfaGFsdmluZ107DQoNCiAgICByZXR1cm4gKGhhc2hSYXRlLmNhcnJpZWQsIGhhc2hSYXRlLnJhdGUpOw0KICB9DQoNCiAgLyoqDQogICAgQG5vdGljZSBDYWxjdWxhdGUgdGhlIGhhbHZpbmcgaGFzaCByYXRlIG9mIGEgbWluZXINCiAgICBAZGV2IFRha2UgaW50byBhY2NvdW50IHRoYXQgdGhlIHJhdGUgY2FuIGJlIHVuY2FycmllZA0KICAgIEBwYXJhbSBfbWluZXIgYWRkcmVzcyBvZiB0aGUgbWluZXINCiAgICBAcmV0dXJuIChjYXJyaWVkLCByYXRlKSBhIHR1cGxlIHdpdGggdGhlIHJhdGUgYW5kIGlmIHRoZSB2YWx1ZSBoYXMgYmVlbiBjYXJyaWVkIGZyb20gcHJldmlvdXMgaGFsdmluZ3MNCiAgKiovDQogIGZ1bmN0aW9uIGdldEhhc2hSYXRlT2ZDdXJyZW50SGFsdmluZyhhZGRyZXNzIF9taW5lcikNCiAgICBwdWJsaWMNCiAgICBjb25zdGFudA0KICAgIHJldHVybnMoYm9vbCwgdWludDI1NikNCiAgew0KICAgIHJldHVybiBnZXRIYXNoUmF0ZU9mKF9taW5lciwgY3VycmVudEhhbHZpbmcoKSk7DQogIH0NCg0KICAvKioNCiAgICBAbm90aWNlIENhbGN1bGF0ZSB0aGUgaGFsdmluZyBoYXNoIHJhdGUgb2YgYSBtaW5lcg0KICAgIEBkZXYgVGFrZSBpbnRvIGFjY291bnQgdGhhdCB0aGUgcmF0ZSBjYW4gYmUgdW5jYXJyaWVkDQogICAgQHBhcmFtIF9oYWx2aW5nIG51bWVyIG9mIHRoZSBtaW5lciBoYWx2aW5nDQogICAgQHJldHVybiAoY2FycmllZCwgcmF0ZSkgYSB0dXBsZSB3aXRoIHRoZSByYXRlIGFuZCBpZiB0aGUgdmFsdWUgaGFzIGJlZW4gY2FycmllZCBmcm9tIHByZXZpb3VzIGhhbHZpbmdzDQogICoqLw0KICBmdW5jdGlvbiBnZXRNaW5lckhhc2hSYXRlKHVpbnQyNTYgX2hhbHZpbmcpDQogICAgcHVibGljDQogICAgY29uc3RhbnQNCiAgICByZXR1cm5zKGJvb2wsIHVpbnQyNTYpDQogIHsNCiAgICByZXR1cm4gZ2V0SGFzaFJhdGVPZihtc2cuc2VuZGVyLCBfaGFsdmluZyk7DQogIH0NCg0KICAvKioNCiAgICBAbm90aWNlIENhbGN1bGF0ZSB0aGUgaGFsdmluZyBoYXNoIHJhdGUgb2YgYSBtaW5lcg0KICAgIEBkZXYgVGFrZSBpbnRvIGFjY291bnQgdGhhdCB0aGUgcmF0ZSBjYW4gYmUgdW5jYXJyaWVkDQogICAgQHJldHVybiAoY2FycmllZCwgcmF0ZSkgYSB0dXBsZSB3aXRoIHRoZSByYXRlIGFuZCBpZiB0aGUgdmFsdWUgaGFzIGJlZW4gY2FycmllZCBmcm9tIHByZXZpb3VzIGhhbHZpbmdzDQogICoqLw0KICBmdW5jdGlvbiBnZXRNaW5lckhhc2hSYXRlQ3VycmVudEhhbHZpbmcoKQ0KICAgIHB1YmxpYw0KICAgIGNvbnN0YW50DQogICAgcmV0dXJucyhib29sLCB1aW50MjU2KQ0KICB7DQogICAgcmV0dXJuIGdldEhhc2hSYXRlT2YobXNnLnNlbmRlciwgY3VycmVudEhhbHZpbmcoKSk7DQogIH0NCg0KICAvKioNCiAgICBAbm90aWNlIFRvdGFsIGhhc2ggcmF0ZSBvZiBhIG1pbmVyDQogICAgQHJldHVybiBtaW5lciB0b3RhbCBhY2N1bXVsYXRlZCBoYXNoIHJhdGUNCiAgKiovDQogIGZ1bmN0aW9uIGdldFRvdGFsSGFzaFJhdGVPZihhZGRyZXNzIF9taW5lcikNCiAgICBwdWJsaWMNCiAgICBjb25zdGFudA0KICAgIG5vdEJlZm9yZUdlbmVzaXMNCiAgICBpc01pbmVyKF9taW5lcikNCiAgICByZXR1cm5zKHVpbnQyNTYpDQogIHsNCiAgICByZXR1cm4gbWluZXJzW19taW5lcl0udG90YWxIYXNoUmF0ZTsNCiAgfQ0KDQogIC8qKg0KICAgIEBub3RpY2UgVG90YWwgaGFzaCByYXRlIG9mIGEgbWluZXINCiAgICBAcmV0dXJuIG1pbmVyIHRvdGFsIGFjY3VtdWxhdGVkIGhhc2ggcmF0ZQ0KICAqKi8NCiAgZnVuY3Rpb24gZ2V0VG90YWxIYXNoUmF0ZSgpDQogICAgcHVibGljDQogICAgY29uc3RhbnQNCiAgICByZXR1cm5zKHVpbnQyNTYpDQogIHsNCiAgICByZXR1cm4gZ2V0VG90YWxIYXNoUmF0ZU9mKG1zZy5zZW5kZXIpOw0KICB9DQoNCiAgLyoqDQogICAgQG5vdGljZSBDb21wdXRlcyB0aGUgcmVtYWluaW5nIHN1YnNpZHkgcGVuZGluZyBvZiBiZWluZyBjbGFpbWVkIGZvciBhIGdpdmVuIGhhbHZpbmcNCiAgICBAcGFyYW0gX2hhbHZpbmcgbnVtYmVyIG9mIGhhbHZpbmcNCiAgICBAcmV0dXJuIHRoZSByZW1haW5pbmcgc3Vic2lkeSBvZiBhIGhhbHZpbmcNCiAgKiovDQogIGZ1bmN0aW9uIGdldFVuY2xhaW1lZEhhbHZpbmdTdWJzaWR5KHVpbnQyNTYgX2hhbHZpbmcpDQogICAgcHVibGljDQogICAgY29uc3RhbnQNCiAgICBub3RCZWZvcmVHZW5lc2lzDQogICAgcmV0dXJucyh1aW50MjU2KQ0KICB7DQogICAgcmVxdWlyZShfaGFsdmluZyA8IGN1cnJlbnRIYWx2aW5nKCkpOw0KDQogICAgaWYgKCFoYWx2aW5nc1N1YnNpZGllc1tfaGFsdmluZ10uY2xhaW1lZCkgew0KICAgICAgLy8gSW4gdGhlIGNhc2UgdGhhdCB0aGUgaGFsdmluZyBzdWJzaWR5IGhhc24ndCBiZWVuIGluc3RhbnRpYXRlZA0KICAgICAgLy8gKC5jbGFpbWVkIGlzIGZhbHNlKSByZXR1cm4gdGhlIGZ1bGwgaGFsdmluZyBzdWJzaWR5DQogICAgICByZXR1cm4gaGFsdmluZ1N1YnNpZHkoX2hhbHZpbmcpOw0KICAgIH0gZWxzZSB7DQogICAgICAvLyBPdGhlcndpc2UgcmV0dXJuIHRoZSByZW1haW5pbmcgaGFsdmluZyBzdWJzaWR5DQogICAgICBoYWx2aW5nc1N1YnNpZGllc1tfaGFsdmluZ10udmFsdWU7DQogICAgfQ0KICB9DQp9'