base 64 content
base64beerCoin
	^'LyoqDQogKiBBdXRob3I6IE5pY2sgSm9obnNvbiAoYXJhY2huaWQgYXQgbm90ZG90Lm5ldCkNCiAqIENvcHlyaWdodCAyMDE2OyBsaWNlbnNlZCBDQy1CWS1TQS4NCiAqIA0KICogQmVlckNvaW4gaXMgYSBuZXcgY3J5cHRvY3VycmVuY3kgaW50ZW5kZWQgdG8gZW5jYXBzdWxhdGUgYW5kIHJlY29yZCB0aGUNCiAqIGNvbmNlcHQgb2YgIkkgb3dlIHlvdSBhIGJlZXIiLiBEaWQgc29tZW9uZSBhbnN3ZXIgYSBkaWZmaWN1bHQgcXVlc3Rpb24geW91DQogKiBoYWQ/IFNlbmQgdGhlbSBhIEJlZXJDb2luLiBEaWQgdGhleSBoZWxwIHlvdSBjYXJyeSBzb21ldGhpbmcgaGVhdnk/IFNlbmQNCiAqIHRoZW0gYSBCZWVyQ29pbi4gU29tZW9uZSBidXkgeW91IGEgYmVlcj8gU2VuZCB0aGVtIGEgQmVlckNvaW4uDQogKiANCiAqIFVubGlrZSB0cmFkaXRpb25hbCBjdXJyZW5jeSwgYW55b25lIGNhbiBpc3N1ZSBCZWVyQ29pbiBzaW1wbHkgYnkgc2VuZGluZyBpdA0KICogdG8gc29tZW9uZSBlbHNlLiBBIHBlcnNvbidzIEJlZXJDb2luIGlzIG9ubHkgYXMgdmFsdWFibGUgYXMgdGhlIHJlY2lwaWVudCdzDQogKiBiZWxpZWYgdGhhdCB0aGV5J3JlIGdvb2QgZm9yIHRoZSBiZWVyLCBzaG91bGQgaXQgZXZlciBiZSByZWRlZW1lZDsgYSBiZWVyDQogKiBvd2VkIHRvIHlvdSBieSBWaXRhbGlrIEJ1dGVyaW4gaXMgcHJvYmFibHkgd29ydGggbW9yZSB0aGFuIGEgYmVlciBvd2VkIHRvIHlvdQ0KICogYnkgdGhlIERBTyBoYWNrZXIgKGJ1dCB5b3VyIG9waW5pb25zIG1heSBkaWZmZXIgb24gdGhhdCBwb2ludCkuDQogKiANCiAqIEJlZXJDb2luIGlzIGltcGxlbWVudGVkIGFzIGFuIEVSQzIwIGNvbXBhdGlibGUgdG9rZW4sIHdpdGggYSBmZXcgZXh0ZW5zaW9ucy4NCiAqIFJlZ3VsYXIgRVJDMjAgdHJhbnNmZXJzIHdpbGwgY3JlYXRlIG9yIHJlc29sdmUgb2JsaWdhdGlvbnMgYmV0d2VlbiB0aGUgdHdvDQogKiBwYXJ0aWVzOyB0aGV5IHdpbGwgbmV2ZXIgdHJhbnNmZXIgdGhpcmQtcGFydHkgQmVlckNvaW5zLiBBZGRpdGlvbmFsIG1ldGhvZHMNCiAqIGFyZSBwcm92aWRlZCB0byBhbGxvdyB5b3UgdHJhbnNmZXIgYmVlcnMgc29tZW9uZSBvd2VzIHlvdSB0byBhIHRoaXJkIHBhcnR5Ow0KICogaWYgU2F0b3NoaSBOYWthbW90byBvd2VzIHlvdSBhIGJlZXIsIHlvdSBjYW4gdHJhbnNmZXIgdGhhdCBvYmxpZ2F0aW9uIHRvIHlvdXINCiAqIGZyaWVuZCB3aG8ganVzdCBib3VnaHQgeW91IG9uZSBkb3duIGF0IHRoZSBwdWIuIE1ldGhvZHMgYXJlIGFsc28gcHJvdmlkZWQgZm9yDQogKiBkZXRlcm1pbmluZyB0aGUgdG90YWwgbnVtYmVyIG9mIGJlZXJzIGEgcGVyc29uIG93ZXMsIHRvIGhlbHAgZGV0ZXJtaW5lIGlmDQogKiB0aGV5J3JlIGdvb2QgZm9yIGl0LCBhbmQgZm9yIGdldHRpbmcgYSBsaXN0IG9mIGFjY291bnRzIHRoYXQgb3dlIHNvbWVvbmUgYQ0KICogYmVlci4NCiAqIA0KICogQmVlckNvaW4gbWF5IGNvbmZ1c2Ugc29tZSB3YWxsZXRzLCBzdWNoIGFzIE1pc3QsIHRoYXQgZXhwZWN0IHlvdSBjYW4gb25seQ0KICogc2VuZCBjdXJyZW5jeSB1cCB0byB5b3VyIGN1cnJlbnQgdG90YWwgYmFsYW5jZTsgc2luY2UgQmVlckNvaW4gb3BlcmF0ZXMgYXMNCiAqIGluZGl2aWR1YWwgSU9VcywgdGhhdCByZXN0cmljdGlvbiBkb2Vzbid0IGFwcGx5LiBBcyBhIHJlc3VsdCwgeW91IHdpbGwNCiAqIHNvbWV0aW1lcyBuZWVkIHRvIGNhbGwgdGhlICd0cmFuc2ZlcicgZnVuY3Rpb24gb24gdGhlIGNvbnRyYWN0IGl0c2VsZg0KICogaW5zdGVhZCBvZiB1c2luZyB0aGUgd2FsbGV0J3MgYnVpbHQgaW4gdG9rZW4gc3VwcG9ydC4NCiAqIA0KICogSWYgYW55b25lIGZpbmRzIGEgYnVnIGluIHRoZSBjb250cmFjdCwgSSdsbCBidXkgeW91IGEgYmVlci4gSWYgeW91IGZpbmQgYSBidWcNCiAqIHlvdSBjYW4gZXhwbG9pdCB0byBhZGp1c3QgYmFsYW5jZXMgd2l0aG91dCB1c2VycycgY29uc2VudCwgSSdsbCBidXkgeW91IHR3bw0KICogKG9yIG1vcmUpLg0KICogDQogKiBJZiB5b3UgZmVlbCBvYmxpZ2VkIHRvIG1lIGZvciBjcmVhdGluZyB0aGlzLCBzZW5kIG1lIGEgPyBhdA0KICogMHg1ZkM4QTYxZTA5N2MxMThjRTQzRDIwMGIzYzRkY2Y3MjZDZjc4M2E5LiBEb24ndCBkbyBpdCB1bmxlc3MgeW91IG1lYW4gaXQ7DQogKiBpZiB3ZSBtZWV0IEknbGwgc3VyZWx5IHJlZGVlbSBpdC4NCiAqLw0KY29udHJhY3QgQmVlckNvaW4gew0KICAgIHVzaW5nIEl0bWFwIGZvciBJdG1hcC5BZGRyZXNzVWludE1hcDsNCiAgICANCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgX2Zyb20sIGFkZHJlc3MgaW5kZXhlZCBfdG8sIHVpbnQyNTYgX3ZhbHVlKTsNCiAgICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgX293bmVyLCBhZGRyZXNzIGluZGV4ZWQgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKTsNCg0KICAgIHN0cnVjdCBVc2VyQWNjb3VudCB7DQogICAgICAgIGJvb2wgZXhpc3RzOw0KICAgICAgICBJdG1hcC5BZGRyZXNzVWludE1hcCBkZWJ0b3JzOyAvLyBQZW9wbGUgd2hvIG93ZSB5b3UgYSBiZWVyDQogICAgICAgIG1hcHBpbmcoYWRkcmVzcz0+dWludCkgYWxsb3dhbmNlczsNCiAgICAgICAgdWludCBtYXhDcmVkaXQ7IC8vIE1vc3QgYmVlcnMgYW55IGluZGl2aWR1YWwgbWF5IG93ZSB5b3UNCiAgICAgICAgdWludCBiZWVyc093ZWQ7IC8vIEJlZXJzIG93ZWQgYnkgdGhpcyBwZXJzb24NCiAgICAgICAgdWludCBiZWVyc093aW5nOyAvLyBCZWVycyBvd2VkIHRvIHRoaXMgcGVyc29uDQogICAgfQ0KICAgIHVpbnQgYmVlcnNPd2luZzsNCiAgICB1aW50IGRlZmF1bHRNYXhDcmVkaXQ7DQogICAgDQogICAgZnVuY3Rpb24oKSB7DQogICAgICAgIHRocm93Ow0KICAgIH0NCiAgICANCiAgICBmdW5jdGlvbiBCZWVyQ29pbih1aW50IF9kZWZhdWx0TWF4Q3JlZGl0KSB7DQogICAgICAgIGRlZmF1bHRNYXhDcmVkaXQgPSBfZGVmYXVsdE1heENyZWRpdDsNCiAgICB9DQogICAgDQogICAgbWFwcGluZyhhZGRyZXNzPT5Vc2VyQWNjb3VudCkgYWNjb3VudHM7DQoNCiAgICBmdW5jdGlvbiBtYXhpbXVtQ3JlZGl0KGFkZHJlc3Mgb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQpIHsNCiAgICAgICAgaWYoYWNjb3VudHNbb3duZXJdLmV4aXN0cykgew0KICAgICAgICAgICAgcmV0dXJuIGFjY291bnRzW293bmVyXS5tYXhDcmVkaXQ7DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICByZXR1cm4gZGVmYXVsdE1heENyZWRpdDsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIGZ1bmN0aW9uIHNldE1heGltdW1DcmVkaXQodWludCBjcmVkaXQpIHsNCiAgICAgICAgLy82NDBrIG91Z2h0IHRvIGJlIGVub3VnaCBmb3IgYW55b25lDQogICAgICAgIGlmKGNyZWRpdCA+IDY1NTM2MCkNCiAgICAgICAgICAgIHJldHVybjsNCg0KICAgICAgICBpZighYWNjb3VudHNbbXNnLnNlbmRlcl0uZXhpc3RzKQ0KICAgICAgICAgICAgYWNjb3VudHNbbXNnLnNlbmRlcl0uZXhpc3RzID0gdHJ1ZTsNCiAgICAgICAgYWNjb3VudHNbbXNnLnNlbmRlcl0ubWF4Q3JlZGl0ID0gY3JlZGl0Ow0KICAgIH0NCiAgICANCiAgICBmdW5jdGlvbiBudW1EZWJ0b3JzKGFkZHJlc3Mgb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQpIHsNCiAgICAgICAgcmV0dXJuIGFjY291bnRzW293bmVyXS5kZWJ0b3JzLnNpemUoKTsNCiAgICB9DQogICAgDQogICAgZnVuY3Rpb24gZGVidG9yKGFkZHJlc3Mgb3duZXIsIHVpbnQgaWR4KSBjb25zdGFudCByZXR1cm5zIChhZGRyZXNzKSB7DQogICAgICAgIHJldHVybiBhY2NvdW50c1tvd25lcl0uZGVidG9ycy5pbmRleChpZHgpOw0KICAgIH0NCiAgICANCiAgICBmdW5jdGlvbiBkZWJ0b3JzKGFkZHJlc3Mgb3duZXIpIGNvbnN0YW50IHJldHVybnMgKGFkZHJlc3NbXSkgew0KICAgICAgICByZXR1cm4gYWNjb3VudHNbb3duZXJdLmRlYnRvcnMua2V5czsNCiAgICB9DQoNCiAgICBmdW5jdGlvbiB0b3RhbFN1cHBseSgpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgc3VwcGx5KSB7DQogICAgICAgIHJldHVybiBiZWVyc093aW5nOyAgIA0KICAgIH0NCiAgICANCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBvd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKSB7DQogICAgICAgIHJldHVybiBhY2NvdW50c1tvd25lcl0uYmVlcnNPd2luZzsNCiAgICB9DQogICAgDQogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3Mgb3duZXIsIGFkZHJlc3MgZGVidG9yKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpIHsNCiAgICAgICAgcmV0dXJuIGFjY291bnRzW293bmVyXS5kZWJ0b3JzLmdldChkZWJ0b3IpOw0KICAgIH0NCiAgICANCiAgICBmdW5jdGlvbiB0b3RhbERlYnQoYWRkcmVzcyBvd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKSB7DQogICAgICAgIHJldHVybiBhY2NvdW50c1tvd25lcl0uYmVlcnNPd2VkOw0KICAgIH0NCiAgICANCiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIHRvLCB1aW50MjU2IHZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsNCiAgICAgICAgcmV0dXJuIGRvVHJhbnNmZXIobXNnLnNlbmRlciwgdG8sIHZhbHVlKTsNCiAgICB9DQogICAgDQogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgZnJvbSwgYWRkcmVzcyB0bywgdWludDI1NiB2YWx1ZSkgcmV0dXJucyAoYm9vbCkgew0KICAgICAgICBpZihhY2NvdW50c1tmcm9tXS5hbGxvd2FuY2VzW21zZy5zZW5kZXJdID49IHZhbHVlICYmIGRvVHJhbnNmZXIoZnJvbSwgdG8sIHZhbHVlKSkgew0KICAgICAgICAgICAgYWNjb3VudHNbZnJvbV0uYWxsb3dhbmNlc1ttc2cuc2VuZGVyXSAtPSB2YWx1ZTsNCiAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICB9DQogICAgICAgIHJldHVybiBmYWxzZTsNCiAgICB9DQogICAgDQogICAgZnVuY3Rpb24gZG9UcmFuc2ZlcihhZGRyZXNzIGZyb20sIGFkZHJlc3MgdG8sIHVpbnQgdmFsdWUpIGludGVybmFsIHJldHVybnMgKGJvb2wpIHsNCiAgICAgICAgaWYoZnJvbSA9PSB0bykNCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIA0KICAgICAgICBpZighYWNjb3VudHNbdG9dLmV4aXN0cykgew0KICAgICAgICAgICAgYWNjb3VudHNbdG9dLmV4aXN0cyA9IHRydWU7DQogICAgICAgICAgICBhY2NvdW50c1t0b10ubWF4Q3JlZGl0ID0gZGVmYXVsdE1heENyZWRpdDsNCiAgICAgICAgfQ0KICAgICAgICANCiAgICAgICAgLy8gRG9uJ3QgYWxsb3cgdHJhbnNmZXJzIHRoYXQgd291bGQgZXhjZWVkIHRoZSByZWNpcGllbnQncyBjcmVkaXQgbGltaXQuDQogICAgICAgIGlmKHZhbHVlID4gYWNjb3VudHNbdG9dLm1heENyZWRpdCArIGFjY291bnRzW2Zyb21dLmRlYnRvcnMuZ2V0KHRvKSkNCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgDQogICAgICAgIFRyYW5zZmVyKGZyb20sIHRvLCB2YWx1ZSk7DQoNCiAgICAgICAgdmFsdWUgLT0gcmVkdWNlRGVidCh0bywgZnJvbSwgdmFsdWUpOw0KICAgICAgICBjcmVhdGVEZWJ0KGZyb20sIHRvLCB2YWx1ZSk7DQoNCiAgICAgICAgcmV0dXJuIHRydWU7DQogICAgfQ0KICAgIA0KICAgIC8vIFRyYW5zZmVycyBiZWVycyBvd2VkIHRvIHlvdSBieSBgZGVidG9yYCB0byBgdG9gLg0KICAgIGZ1bmN0aW9uIHRyYW5zZmVyT3RoZXIoYWRkcmVzcyB0bywgYWRkcmVzcyBkZWJ0b3IsIHVpbnQgdmFsdWUpIHJldHVybnMgKGJvb2wpIHsNCiAgICAgICAgcmV0dXJuIGRvVHJhbnNmZXJPdGhlcihtc2cuc2VuZGVyLCB0bywgZGVidG9yLCB2YWx1ZSk7DQogICAgfQ0KDQogICAgLy8gQWxsb3dzIGEgdGhpcmQgcGFydHkgdG8gdHJhbnNmZXIgZGVidCBvd2VkIHRvIHlvdSBieSBgZGVidG9yYCB0byBgdG9gLiAgICANCiAgICBmdW5jdGlvbiB0cmFuc2Zlck90aGVyRnJvbShhZGRyZXNzIGZyb20sIGFkZHJlc3MgdG8sIGFkZHJlc3MgZGVidG9yLCB1aW50IHZhbHVlKSByZXR1cm5zIChib29sKSB7DQogICAgICAgIGlmKGFjY291bnRzW2Zyb21dLmFsbG93YW5jZXNbbXNnLnNlbmRlcl0gPj0gdmFsdWUgJiYgZG9UcmFuc2Zlck90aGVyKGZyb20sIHRvLCBkZWJ0b3IsIHZhbHVlKSkgew0KICAgICAgICAgICAgYWNjb3VudHNbZnJvbV0uYWxsb3dhbmNlc1ttc2cuc2VuZGVyXSAtPSB2YWx1ZTsNCiAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICB9DQogICAgICAgIHJldHVybiBmYWxzZTsNCiAgICB9DQogICAgDQogICAgZnVuY3Rpb24gZG9UcmFuc2Zlck90aGVyKGFkZHJlc3MgZnJvbSwgYWRkcmVzcyB0bywgYWRkcmVzcyBkZWJ0b3IsIHVpbnQgdmFsdWUpIGludGVybmFsIHJldHVybnMgKGJvb2wpIHsNCiAgICAgICAgaWYoZnJvbSA9PSB0byB8fCB0byA9PSBkZWJ0b3IpDQogICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICANCiAgICAgICAgaWYoIWFjY291bnRzW3RvXS5leGlzdHMpIHsNCiAgICAgICAgICAgIGFjY291bnRzW3RvXS5leGlzdHMgPSB0cnVlOw0KICAgICAgICAgICAgYWNjb3VudHNbdG9dLm1heENyZWRpdCA9IGRlZmF1bHRNYXhDcmVkaXQ7DQogICAgICAgIH0NCiAgICAgICAgDQogICAgICAgIGlmKHRyYW5zZmVyRGVidChmcm9tLCB0bywgZGVidG9yLCB2YWx1ZSkpIHsNCiAgICAgICAgICAgIFRyYW5zZmVyKGZyb20sIHRvLCB2YWx1ZSk7DQogICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgfQ0KICAgIH0NCiAgICANCiAgICAvLyBDcmVhdGVzIGRlYnQgb3dlZCBieSBgZGVidG9yYCB0byBgY3JlZGl0b3JgIG9mIGFtb3VudCBgdmFsdWVgLg0KICAgIC8vIFJldHVybnMgZmFsc2Ugd2l0aG91dCBtYWtpbmcgY2hhbmdlcyBpZiB0aGlzIHdvdWxkIGV4Y2VlZCBgY3JlZGl0b3JgJ3MNCiAgICAvLyBjcmVkaXQgbGltaXQuDQogICAgZnVuY3Rpb24gY3JlYXRlRGVidChhZGRyZXNzIGRlYnRvciwgYWRkcmVzcyBjcmVkaXRvciwgdWludCB2YWx1ZSkgaW50ZXJuYWwgcmV0dXJucyAoYm9vbCkgew0KICAgICAgICBpZih2YWx1ZSA9PSAwKQ0KICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgIA0KICAgICAgICBpZih2YWx1ZSA+IGFjY291bnRzW2NyZWRpdG9yXS5tYXhDcmVkaXQpDQogICAgICAgICAgICByZXR1cm4gZmFsc2U7DQoNCiAgICAgICAgYWNjb3VudHNbY3JlZGl0b3JdLmRlYnRvcnMuc2V0KA0KICAgICAgICAgICAgZGVidG9yLCBhY2NvdW50c1tjcmVkaXRvcl0uZGVidG9ycy5nZXQoZGVidG9yKSArIHZhbHVlKTsNCiAgICAgICAgYWNjb3VudHNbZGVidG9yXS5iZWVyc093ZWQgKz0gdmFsdWU7DQogICAgICAgIGFjY291bnRzW2NyZWRpdG9yXS5iZWVyc093aW5nICs9IHZhbHVlOw0KICAgICAgICBiZWVyc093aW5nICs9IHZhbHVlOw0KICAgICAgICANCiAgICAgICAgcmV0dXJuIHRydWU7DQogICAgfQ0KICAgIA0KICAgIC8vIFJlZHVjZXMgZGVidCBvd2VkIGJ5IGBkZWJ0b3JgIHRvIGBjcmVkaXRvcmAgYnkgYHZhbHVlYCBvciB0aGUgdG90YWwgYW1vdW50LA0KICAgIC8vIHdoaWNoZXZlciBpcyBsZXNzLiBSZXR1cm5zIHRoZSBhbW91bnQgb2YgZGVidCBlcmFzZWQuDQogICAgZnVuY3Rpb24gcmVkdWNlRGVidChhZGRyZXNzIGRlYnRvciwgYWRkcmVzcyBjcmVkaXRvciwgdWludCB2YWx1ZSkgaW50ZXJuYWwgcmV0dXJucyAodWludCkgew0KICAgICAgICB2YXIgb3dlZCA9IGFjY291bnRzW2NyZWRpdG9yXS5kZWJ0b3JzLmdldChkZWJ0b3IpOw0KICAgICAgICBpZih2YWx1ZSA+PSBvd2VkKSB7DQogICAgICAgICAgICB2YWx1ZSA9IG93ZWQ7DQogICAgICAgICAgICANCiAgICAgICAgICAgIGFjY291bnRzW2NyZWRpdG9yXS5kZWJ0b3JzLnJlbW92ZShkZWJ0b3IpOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgYWNjb3VudHNbY3JlZGl0b3JdLmRlYnRvcnMuc2V0KGRlYnRvciwgb3dlZCAtIHZhbHVlKTsNCiAgICAgICAgfQ0KICAgICAgICANCiAgICAgICAgYWNjb3VudHNbZGVidG9yXS5iZWVyc093ZWQgLT0gdmFsdWU7DQogICAgICAgIGFjY291bnRzW2NyZWRpdG9yXS5iZWVyc093aW5nIC09IHZhbHVlOw0KICAgICAgICBiZWVyc093aW5nIC09IHZhbHVlOw0KICAgICAgICANCiAgICAgICAgcmV0dXJuIHZhbHVlOw0KICAgIH0NCiAgICANCiAgICAvLyBUcmFuc2ZlcnMgZGVidCBvd2VkIGJ5IGBkZWJ0b3JgIGZyb20gYG9sZENyZWRpdG9yYCB0byBgbmV3Q3JlZGl0b3JgLg0KICAgIC8vIFJldHVybnMgZmFsc2Ugd2l0aG91dCBtYWtpbmcgYW55IGNoYW5nZXMgaWYgYHZhbHVlYCBleGNlZWRzIHRoZSBhbW91bnQNCiAgICAvLyBvd2VkIG9yIGlmIHRoZSB0cmFuc2ZlciB3b3VsZCBleGNlZWQgYG5ld0NyZWRpdG9yYCdzIGNyZWRpdCBsaW1pdC4NCiAgICBmdW5jdGlvbiB0cmFuc2ZlckRlYnQoYWRkcmVzcyBvbGRDcmVkaXRvciwgYWRkcmVzcyBuZXdDcmVkaXRvciwgYWRkcmVzcyBkZWJ0b3IsIHVpbnQgdmFsdWUpIGludGVybmFsIHJldHVybnMgKGJvb2wpIHsNCiAgICAgICAgdmFyIG93ZWRPbGQgPSBhY2NvdW50c1tvbGRDcmVkaXRvcl0uZGVidG9ycy5nZXQoZGVidG9yKTsNCiAgICAgICAgaWYob3dlZE9sZCA8IHZhbHVlKQ0KICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICANCiAgICAgICAgdmFyIG93ZWROZXcgPSBhY2NvdW50c1tuZXdDcmVkaXRvcl0uZGVidG9ycy5nZXQoZGVidG9yKTsNCiAgICAgICAgaWYodmFsdWUgKyBvd2VkTmV3ID4gYWNjb3VudHNbbmV3Q3JlZGl0b3JdLm1heENyZWRpdCkNCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgDQogICAgICAgIA0KICAgICAgICBpZihvd2VkT2xkID09IHZhbHVlKSB7DQogICAgICAgICAgICBhY2NvdW50c1tvbGRDcmVkaXRvcl0uZGVidG9ycy5yZW1vdmUoZGVidG9yKTsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIGFjY291bnRzW29sZENyZWRpdG9yXS5kZWJ0b3JzLnNldChkZWJ0b3IsIG93ZWRPbGQgLSB2YWx1ZSk7DQogICAgICAgIH0NCiAgICAgICAgYWNjb3VudHNbb2xkQ3JlZGl0b3JdLmJlZXJzT3dpbmcgLT0gdmFsdWU7DQogICAgICAgIA0KICAgICAgICBhY2NvdW50c1tuZXdDcmVkaXRvcl0uZGVidG9ycy5zZXQoZGVidG9yLCBvd2VkTmV3ICsgdmFsdWUpOw0KICAgICAgICBhY2NvdW50c1tuZXdDcmVkaXRvcl0uYmVlcnNPd2luZyArPSB2YWx1ZTsNCiAgICAgICAgDQogICAgICAgIHJldHVybiB0cnVlOw0KICAgIH0NCg0KICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBzcGVuZGVyLCB1aW50MjU2IHZhbHVlKSByZXR1cm5zIChib29sKSB7DQogICAgICAgIGFjY291bnRzW21zZy5zZW5kZXJdLmFsbG93YW5jZXNbc3BlbmRlcl0gPSB2YWx1ZTsNCiAgICAgICAgQXBwcm92YWwobXNnLnNlbmRlciwgc3BlbmRlciwgdmFsdWUpOw0KICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICB9DQogICAgDQogICAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3Mgb3duZXIsIGFkZHJlc3Mgc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1Nikgew0KICAgICAgICByZXR1cm4gYWNjb3VudHNbb3duZXJdLmFsbG93YW5jZXNbc3BlbmRlcl07DQogICAgfQ0KfQ0KDQoNCmxpYnJhcnkgSXRtYXAgew0KICAgIHN0cnVjdCBBZGRyZXNzVWludE1hcEVudHJ5IHsNCiAgICAgICAgdWludCB2YWx1ZTsNCiAgICAgICAgdWludCBpZHg7DQogICAgfQ0KICAgIA0KICAgIHN0cnVjdCBBZGRyZXNzVWludE1hcCB7DQogICAgICAgIG1hcHBpbmcoYWRkcmVzcz0+QWRkcmVzc1VpbnRNYXBFbnRyeSkgZW50cmllczsNCiAgICAgICAgYWRkcmVzc1tdIGtleXM7DQogICAgfQ0KICAgIA0KICAgIGZ1bmN0aW9uIHNldChBZGRyZXNzVWludE1hcCBzdG9yYWdlIHNlbGYsIGFkZHJlc3MgaywgdWludCB2KSBpbnRlcm5hbCB7DQogICAgICAgIHZhciBlbnRyeSA9IHNlbGYuZW50cmllc1trXTsNCiAgICAgICAgaWYoZW50cnkuaWR4ID09IDApIHsNCiAgICAgICAgICAgIGVudHJ5LmlkeCA9IHNlbGYua2V5cy5sZW5ndGggKyAxOw0KICAgICAgICAgICAgc2VsZi5rZXlzLnB1c2goayk7DQogICAgICAgIH0NCiAgICAgICAgZW50cnkudmFsdWUgPSB2Ow0KICAgIH0NCiAgICANCiAgICBmdW5jdGlvbiBnZXQoQWRkcmVzc1VpbnRNYXAgc3RvcmFnZSBzZWxmLCBhZGRyZXNzIGspIGludGVybmFsIHJldHVybnMgKHVpbnQpIHsNCiAgICAgICAgcmV0dXJuIHNlbGYuZW50cmllc1trXS52YWx1ZTsNCiAgICB9DQogICAgDQogICAgZnVuY3Rpb24gY29udGFpbnMoQWRkcmVzc1VpbnRNYXAgc3RvcmFnZSBzZWxmLCBhZGRyZXNzIGspIGludGVybmFsIHJldHVybnMgKGJvb2wpIHsNCiAgICAgICAgcmV0dXJuIHNlbGYuZW50cmllc1trXS5pZHggPiAwOw0KICAgIH0NCiAgICANCiAgICBmdW5jdGlvbiByZW1vdmUoQWRkcmVzc1VpbnRNYXAgc3RvcmFnZSBzZWxmLCBhZGRyZXNzIGspIGludGVybmFsIHsNCiAgICAgICAgdmFyIGVudHJ5ID0gc2VsZi5lbnRyaWVzW2tdOw0KICAgICAgICBpZihlbnRyeS5pZHggPiAwKSB7DQogICAgICAgICAgICB2YXIgb3RoZXJrZXkgPSBzZWxmLmtleXNbc2VsZi5rZXlzLmxlbmd0aCAtIDFdOw0KICAgICAgICAgICAgc2VsZi5rZXlzW2VudHJ5LmlkeCAtIDFdID0gb3RoZXJrZXk7DQogICAgICAgICAgICBzZWxmLmtleXMubGVuZ3RoIC09IDE7DQogICAgICAgICAgICANCiAgICAgICAgICAgIHNlbGYuZW50cmllc1tvdGhlcmtleV0uaWR4ID0gZW50cnkuaWR4Ow0KICAgICAgICAgICAgZW50cnkuaWR4ID0gMDsNCiAgICAgICAgICAgIGVudHJ5LnZhbHVlID0gMDsNCiAgICAgICAgfQ0KICAgIH0NCiAgICANCiAgICBmdW5jdGlvbiBzaXplKEFkZHJlc3NVaW50TWFwIHN0b3JhZ2Ugc2VsZikgaW50ZXJuYWwgcmV0dXJucyAodWludCkgew0KICAgICAgICByZXR1cm4gc2VsZi5rZXlzLmxlbmd0aDsNCiAgICB9DQogICAgDQogICAgZnVuY3Rpb24gaW5kZXgoQWRkcmVzc1VpbnRNYXAgc3RvcmFnZSBzZWxmLCB1aW50IGlkeCkgaW50ZXJuYWwgcmV0dXJucyAoYWRkcmVzcykgew0KICAgICAgICByZXR1cm4gc2VsZi5rZXlzW2lkeF07DQogICAgfQ0KfQ=='