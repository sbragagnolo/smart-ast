base 64 content
base64builderComission
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC40Ow0KLyoqDQogKiBAdGl0bGUgQ29udHJhY3QgZm9yIG9iamVjdCB0aGF0IGhhdmUgYW4gb3duZXINCiAqLw0KY29udHJhY3QgT3duZWQgew0KICAgIC8qKg0KICAgICAqIENvbnRyYWN0IG93bmVyIGFkZHJlc3MNCiAgICAgKi8NCiAgICBhZGRyZXNzIHB1YmxpYyBvd25lcjsNCg0KICAgIC8qKg0KICAgICAqIEBkZXYgU3RvcmUgb3duZXIgb24gY3JlYXRpb24NCiAgICAgKi8NCiAgICBmdW5jdGlvbiBPd25lZCgpIHsgb3duZXIgPSBtc2cuc2VuZGVyOyB9DQoNCiAgICAvKioNCiAgICAgKiBAZGV2IERlbGVnYXRlIGNvbnRyYWN0IHRvIGFub3RoZXIgcGVyc29uDQogICAgICogQHBhcmFtIF9vd25lciBpcyBhbm90aGVyIHBlcnNvbiBhZGRyZXNzDQogICAgICovDQogICAgZnVuY3Rpb24gZGVsZWdhdGUoYWRkcmVzcyBfb3duZXIpIG9ubHlPd25lcg0KICAgIHsgb3duZXIgPSBfb3duZXI7IH0NCg0KICAgIC8qKg0KICAgICAqIEBkZXYgT3duZXIgY2hlY2sgbW9kaWZpZXINCiAgICAgKi8NCiAgICBtb2RpZmllciBvbmx5T3duZXIgeyBpZiAobXNnLnNlbmRlciAhPSBvd25lcikgdGhyb3c7IF87IH0NCn0NCg0KDQovKioNCiAqIEB0aXRsZSBDb250cmFjdCBmb3Igb2JqZWN0cyB0aGF0IGNhbiBiZSBtb3JkZXINCiAqLw0KY29udHJhY3QgTW9ydGFsIGlzIE93bmVkIHsNCiAgICAvKioNCiAgICAgKiBAZGV2IERlc3Ryb3kgY29udHJhY3QgYW5kIHNjcnViIGEgZGF0YQ0KICAgICAqIEBub3RpY2UgT25seSBvd25lciBjYW4ga2lsbCBtZQ0KICAgICAqLw0KICAgIGZ1bmN0aW9uIGtpbGwoKSBvbmx5T3duZXINCiAgICB7IHN1aWNpZGUob3duZXIpOyB9DQp9DQoNCg0KY29udHJhY3QgQ29taXNzaW9uIGlzIE1vcnRhbCB7DQogICAgYWRkcmVzcyBwdWJsaWMgbGVkZ2VyOw0KICAgIGJ5dGVzMzIgcHVibGljIHRheG1hbjsNCiAgICB1aW50ICAgIHB1YmxpYyB0YXhQZXJjOw0KDQogICAgLyoqDQogICAgICogQGRldiBDb21pc3Npb24gY29udHJhY3QgY29uc3RydWN0b3INCiAgICAgKiBAcGFyYW0gX2xlZGdlciBQcm9jZXNzaW5nIGxlZGdlciBjb250cmFjdA0KICAgICAqIEBwYXJhbSBfdGF4bWFuIFRheCByZWNlaXZlciBhY2NvdW50DQogICAgICogQHBhcmFtIF90YXhQZXJjIFByb2Nlc3NpbmcgdGF4IGluIHBlcmNlbnQNCiAgICAgKi8NCiAgICBmdW5jdGlvbiBDb21pc3Npb24oYWRkcmVzcyBfbGVkZ2VyLCBieXRlczMyIF90YXhtYW4sIHVpbnQgX3RheFBlcmMpIHsNCiAgICAgICAgbGVkZ2VyICA9IF9sZWRnZXI7DQogICAgICAgIHRheG1hbiAgPSBfdGF4bWFuOw0KICAgICAgICB0YXhQZXJjID0gX3RheFBlcmM7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQGRldiBSZWZpbGwgbGVkZ2VyIHdpdGggY29taXNzaW9uDQogICAgICogQHBhcmFtIF9kZXN0aW5hdGlvbiBEZXN0aW5hdGlvbiBhY2NvdW50DQogICAgICovDQogICAgZnVuY3Rpb24gcHJvY2VzcyhieXRlczMyIF9kZXN0aW5hdGlvbikgcGF5YWJsZSByZXR1cm5zIChib29sKSB7DQogICAgICAgIC8vIEhhbmRsZSB2YWx1ZSBiZWxvdyAxMDAgaXNuJ3QgcG9zc2libGUNCiAgICAgICAgaWYgKG1zZy52YWx1ZSA8IDEwMCkgdGhyb3c7DQoNCiAgICAgICAgdmFyIHRheCA9IG1zZy52YWx1ZSAqIHRheFBlcmMgLyAxMDA7IA0KICAgICAgICB2YXIgcmVmaWxsID0gYnl0ZXM0KHNoYTMoInJlZmlsbChieXRlczMyKSIpKTsgDQogICAgICAgIGlmICggIWxlZGdlci5jYWxsLnZhbHVlKHRheCkocmVmaWxsLCB0YXhtYW4pDQogICAgICAgICAgfHwgIWxlZGdlci5jYWxsLnZhbHVlKG1zZy52YWx1ZSAtIHRheCkocmVmaWxsLCBfZGVzdGluYXRpb24pDQogICAgICAgICAgICkgdGhyb3c7DQogICAgICAgIHJldHVybiB0cnVlOw0KICAgIH0NCn0NCg0KDQpsaWJyYXJ5IENyZWF0b3JDb21pc3Npb24gew0KICAgIGZ1bmN0aW9uIGNyZWF0ZShhZGRyZXNzIF9sZWRnZXIsIGJ5dGVzMzIgX3RheG1hbiwgdWludDI1NiBfdGF4UGVyYykgcmV0dXJucyAoQ29taXNzaW9uKQ0KICAgIHsgcmV0dXJuIG5ldyBDb21pc3Npb24oX2xlZGdlciwgX3RheG1hbiwgX3RheFBlcmMpOyB9DQoNCiAgICBmdW5jdGlvbiB2ZXJzaW9uKCkgY29uc3RhbnQgcmV0dXJucyAoc3RyaW5nKQ0KICAgIHsgcmV0dXJuICJ2MC41LjAgKGE5ZWE0YzZjKSI7IH0NCg0KICAgIGZ1bmN0aW9uIGFiaSgpIGNvbnN0YW50IHJldHVybnMgKHN0cmluZykNCiAgICB7IHJldHVybiAnW3siY29uc3RhbnQiOmZhbHNlLCJpbnB1dHMiOlt7Im5hbWUiOiJfZGVzdGluYXRpb24iLCJ0eXBlIjoiYnl0ZXMzMiJ9XSwibmFtZSI6InByb2Nlc3MiLCJvdXRwdXRzIjpbeyJuYW1lIjoiIiwidHlwZSI6ImJvb2wifV0sInBheWFibGUiOnRydWUsInR5cGUiOiJmdW5jdGlvbiJ9LHsiY29uc3RhbnQiOmZhbHNlLCJpbnB1dHMiOltdLCJuYW1lIjoia2lsbCIsIm91dHB1dHMiOltdLCJwYXlhYmxlIjpmYWxzZSwidHlwZSI6ImZ1bmN0aW9uIn0seyJjb25zdGFudCI6dHJ1ZSwiaW5wdXRzIjpbXSwibmFtZSI6InRheG1hbiIsIm91dHB1dHMiOlt7Im5hbWUiOiIiLCJ0eXBlIjoiYnl0ZXMzMiJ9XSwicGF5YWJsZSI6ZmFsc2UsInR5cGUiOiJmdW5jdGlvbiJ9LHsiY29uc3RhbnQiOnRydWUsImlucHV0cyI6W10sIm5hbWUiOiJsZWRnZXIiLCJvdXRwdXRzIjpbeyJuYW1lIjoiIiwidHlwZSI6ImFkZHJlc3MifV0sInBheWFibGUiOmZhbHNlLCJ0eXBlIjoiZnVuY3Rpb24ifSx7ImNvbnN0YW50IjpmYWxzZSwiaW5wdXRzIjpbeyJuYW1lIjoiX293bmVyIiwidHlwZSI6ImFkZHJlc3MifV0sIm5hbWUiOiJkZWxlZ2F0ZSIsIm91dHB1dHMiOltdLCJwYXlhYmxlIjpmYWxzZSwidHlwZSI6ImZ1bmN0aW9uIn0seyJjb25zdGFudCI6dHJ1ZSwiaW5wdXRzIjpbXSwibmFtZSI6Im93bmVyIiwib3V0cHV0cyI6W3sibmFtZSI6IiIsInR5cGUiOiJhZGRyZXNzIn1dLCJwYXlhYmxlIjpmYWxzZSwidHlwZSI6ImZ1bmN0aW9uIn0seyJjb25zdGFudCI6dHJ1ZSwiaW5wdXRzIjpbXSwibmFtZSI6InRheFBlcmMiLCJvdXRwdXRzIjpbeyJuYW1lIjoiIiwidHlwZSI6InVpbnQyNTYifV0sInBheWFibGUiOmZhbHNlLCJ0eXBlIjoiZnVuY3Rpb24ifSx7ImlucHV0cyI6W3sibmFtZSI6Il9sZWRnZXIiLCJ0eXBlIjoiYWRkcmVzcyJ9LHsibmFtZSI6Il90YXhtYW4iLCJ0eXBlIjoiYnl0ZXMzMiJ9LHsibmFtZSI6Il90YXhQZXJjIiwidHlwZSI6InVpbnQyNTYifV0sInR5cGUiOiJjb25zdHJ1Y3RvciJ9XSc7IH0NCn0NCg0KDQovKioNCiAqIEB0aXRsZSBCdWlsZGVyIGJhc2VkIGNvbnRyYWN0DQogKi8NCmNvbnRyYWN0IEJ1aWxkZXIgaXMgTW9ydGFsIHsNCiAgICAvKioNCiAgICAgKiBAZGV2IHRoaXMgZXZlbnQgZW1pdHRlZCBmb3IgZXZlcnkgYnVpbGRlZCBjb250cmFjdA0KICAgICAqLw0KICAgIGV2ZW50IEJ1aWxkZWQoYWRkcmVzcyBpbmRleGVkIGNsaWVudCwgYWRkcmVzcyBpbmRleGVkIGluc3RhbmNlKTsNCiANCiAgICAvKiBBZGRyZXNzZXMgYnVpbGRlZCBjb250cmFjdHMgYXQgc2VuZGVyICovDQogICAgbWFwcGluZyhhZGRyZXNzID0+IGFkZHJlc3NbXSkgcHVibGljIGdldENvbnRyYWN0c09mOw0KIA0KICAgIC8qKg0KICAgICAqIEBkZXYgR2V0IGxhc3QgYWRkcmVzcw0KICAgICAqIEByZXR1cm4gbGFzdCBhZGRyZXNzIGNvbnRyYWN0DQogICAgICovDQogICAgZnVuY3Rpb24gZ2V0TGFzdENvbnRyYWN0KCkgY29uc3RhbnQgcmV0dXJucyAoYWRkcmVzcykgew0KICAgICAgICB2YXIgc2VuZGVyX2NvbnRyYWN0cyA9IGdldENvbnRyYWN0c09mW21zZy5zZW5kZXJdOw0KICAgICAgICByZXR1cm4gc2VuZGVyX2NvbnRyYWN0c1tzZW5kZXJfY29udHJhY3RzLmxlbmd0aCAtIDFdOw0KICAgIH0NCg0KICAgIC8qIEJ1aWxkaW5nIGJlbmVmaWNpYXJ5ICovDQogICAgYWRkcmVzcyBwdWJsaWMgYmVuZWZpY2lhcnk7DQoNCiAgICAvKioNCiAgICAgKiBAZGV2IFNldCBiZW5lZmljaWFyeQ0KICAgICAqIEBwYXJhbSBfYmVuZWZpY2lhcnkgaXMgYWRkcmVzcyBvZiBiZW5lZmljaWFyeQ0KICAgICAqLw0KICAgIGZ1bmN0aW9uIHNldEJlbmVmaWNpYXJ5KGFkZHJlc3MgX2JlbmVmaWNpYXJ5KSBvbmx5T3duZXINCiAgICB7IGJlbmVmaWNpYXJ5ID0gX2JlbmVmaWNpYXJ5OyB9DQoNCiAgICAvKiBCdWlsZGluZyBjb3N0ICAqLw0KICAgIHVpbnQgcHVibGljIGJ1aWxkaW5nQ29zdFdlaTsNCg0KICAgIC8qKg0KICAgICAqIEBkZXYgU2V0IGJ1aWxkaW5nIGNvc3QNCiAgICAgKiBAcGFyYW0gX2J1aWxkaW5nQ29zdFdlaSBpcyBjb3N0DQogICAgICovDQogICAgZnVuY3Rpb24gc2V0Q29zdCh1aW50IF9idWlsZGluZ0Nvc3RXZWkpIG9ubHlPd25lcg0KICAgIHsgYnVpbGRpbmdDb3N0V2VpID0gX2J1aWxkaW5nQ29zdFdlaTsgfQ0KDQogICAgLyogU2VjdXJpdHkgY2hlY2sgcmVwb3J0ICovDQogICAgc3RyaW5nIHB1YmxpYyBzZWN1cml0eUNoZWNrVVJJOw0KDQogICAgLyoqDQogICAgICogQGRldiBTZXQgc2VjdXJpdHkgY2hlY2sgcmVwb3J0IFVSSQ0KICAgICAqIEBwYXJhbSBfdXJpIGlzIGFuIFVSSSB0byByZXBvcnQNCiAgICAgKi8NCiAgICBmdW5jdGlvbiBzZXRTZWN1cml0eUNoZWNrKHN0cmluZyBfdXJpKSBvbmx5T3duZXINCiAgICB7IHNlY3VyaXR5Q2hlY2tVUkkgPSBfdXJpOyB9DQp9DQoNCi8vDQovLyBBSVJBIEJ1aWxkZXIgZm9yIENvbWlzc2lvbiBjb250cmFjdA0KLy8NCg0KLyoqDQogKiBAdGl0bGUgQnVpbGRlckNvbWlzc2lvbiBjb250cmFjdA0KICovDQpjb250cmFjdCBCdWlsZGVyQ29taXNzaW9uIGlzIEJ1aWxkZXIgew0KICAgIC8qKg0KICAgICAqIEBkZXYgUnVuIHNjcmlwdCBjcmVhdGlvbiBjb250cmFjdA0KICAgICAqIEByZXR1cm4gYWRkcmVzcyBuZXcgY29udHJhY3QNCiAgICAgKi8NCiAgICBmdW5jdGlvbiBjcmVhdGUoYWRkcmVzcyBfbGVkZ2VyLCBieXRlczMyIF90YXhtYW4sIHVpbnQgX3RheFBlcmMsDQogICAgICAgICAgICAgICAgICAgIGFkZHJlc3MgX2NsaWVudCkgcGF5YWJsZSByZXR1cm5zIChhZGRyZXNzKSB7DQogICAgICAgIGlmIChidWlsZGluZ0Nvc3RXZWkgPiAwICYmIGJlbmVmaWNpYXJ5ICE9IDApIHsNCiAgICAgICAgICAgIC8vIFRvbyBsb3cgdmFsdWUNCiAgICAgICAgICAgIGlmIChtc2cudmFsdWUgPCBidWlsZGluZ0Nvc3RXZWkpIHRocm93Ow0KICAgICAgICAgICAgLy8gQmVuZWZpY2lhcnkgc2VuZA0KICAgICAgICAgICAgaWYgKCFiZW5lZmljaWFyeS5zZW5kKGJ1aWxkaW5nQ29zdFdlaSkpIHRocm93Ow0KICAgICAgICAgICAgLy8gUmVmdW5kDQogICAgICAgICAgICBpZiAobXNnLnZhbHVlID4gYnVpbGRpbmdDb3N0V2VpKSB7DQogICAgICAgICAgICAgICAgaWYgKCFtc2cuc2VuZGVyLnNlbmQobXNnLnZhbHVlIC0gYnVpbGRpbmdDb3N0V2VpKSkgdGhyb3c7DQogICAgICAgICAgICB9DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAvLyBSZWZ1bmQgYWxsDQogICAgICAgICAgICBpZiAobXNnLnZhbHVlID4gMCkgew0KICAgICAgICAgICAgICAgIGlmICghbXNnLnNlbmRlci5zZW5kKG1zZy52YWx1ZSkpIHRocm93Ow0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQoNCiAgICAgICAgaWYgKF9jbGllbnQgPT0gMCkNCiAgICAgICAgICAgIF9jbGllbnQgPSBtc2cuc2VuZGVyOw0KIA0KICAgICAgICB2YXIgaW5zdCA9IENyZWF0b3JDb21pc3Npb24uY3JlYXRlKF9sZWRnZXIsIF90YXhtYW4sIF90YXhQZXJjKTsNCiAgICAgICAgaW5zdC5kZWxlZ2F0ZShfY2xpZW50KTsNCiAgICAgICAgQnVpbGRlZChfY2xpZW50LCBpbnN0KTsNCiAgICAgICAgZ2V0Q29udHJhY3RzT2ZbX2NsaWVudF0ucHVzaChpbnN0KTsNCiAgICAgICAgcmV0dXJuIGluc3Q7DQogICAgfQ0KfQ=='