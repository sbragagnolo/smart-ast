base 64 content
base64crowdsale19
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC42Ow0KDQpjb250cmFjdCB0b2tlbiB7DQoJZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3Mgc2VuZGVyLCBhZGRyZXNzIHJlY2VpdmVyLCB1aW50IGFtb3VudCkgcmV0dXJucyhib29sIHN1Y2Nlc3Mpe30NCglmdW5jdGlvbiBidXJuKCkge30NCn0NCg0KY29udHJhY3QgQ3Jvd2RzYWxlIHsNCiAgICAvKiB0b2tlbnMgd2lsbCBiZSB0cmFuc2ZlcmVkIGZyb20gdGhpcyBhZGRyZXNzICovDQoJYWRkcmVzcyBwdWJsaWMgYmVuZWZpY2lhcnkgPSAweDAwMzIzMGJiZTY0ZWNjZDY2ZjYyOTEzNjc5Yzg5NjZjZjlmNDExNjY7DQoJLyogaWYgdGhlIGZ1bmRpbmcgZ29hbCBpcyBub3QgcmVhY2hlZCwgaW52ZXN0b3JzIG1heSB3aXRoZHJhdyB0aGVpciBmdW5kcyAqLw0KCXVpbnQgcHVibGljIGZ1bmRpbmdHb2FsID0gNTAwMDAwMDA7DQoJLyogdGhlIG1heGltdW0gYW1vdW50IG9mIHRva2VucyB0byBiZSBzb2xkICovDQoJdWludCBwdWJsaWMgbWF4R29hbCA9IDQ0MDAwMDAwMDsNCgkvKiBob3cgbXVjaCBoYXMgYmVlbiByYWlzZWQgYnkgY3Jvd2RhbGUgKGluIEVUSCkgKi8NCgl1aW50IHB1YmxpYyBhbW91bnRSYWlzZWQ7DQoJLyogdGhlIHN0YXJ0IGRhdGUgb2YgdGhlIGNyb3dkc2FsZSAqLw0KCXVpbnQgcHVibGljIHN0YXJ0ID0gMTQ4ODI5NDAwMDsNCgkvKiB0aGUgbnVtYmVyIG9mIHRva2VucyBhbHJlYWR5IHNvbGQgKi8NCgl1aW50IHB1YmxpYyB0b2tlbnNTb2xkOw0KCS8qIHRoZXJlIGFyZSBkaWZmZXJlbnQgcHJpY2VzIGluIGRpZmZlcmVudCB0aW1lIGludGVydmFscyAqLw0KCXVpbnRbNF0gcHVibGljIGRlYWRsaW5lcyA9IFsxNDg4Mjk3NjAwLCAxNDg4OTAyNDAwLCAxNDg5NTA3MjAwLDE0OTAxMTIwMDBdOw0KCXVpbnRbNF0gcHVibGljIHByaWNlcyA9IFs4MzMzMzMzMzMzMzMzMzMsIDkwOTA5MDkwOTA5MDkwOSw5NTIzODA5NTIzODA5NTIsIDEwMDAwMDAwMDAwMDAwMDBdOw0KCS8qIHRoZSBhZGRyZXNzIG9mIHRoZSB0b2tlbiBjb250cmFjdCAqLw0KCXRva2VuIHB1YmxpYyB0b2tlblJld2FyZDsNCgkvKiB0aGUgYmFsYW5jZXMgKGluIEVUSCkgb2YgYWxsIGludmVzdG9ycyAqLw0KCW1hcHBpbmcoYWRkcmVzcyA9PiB1aW50MjU2KSBwdWJsaWMgYmFsYW5jZU9mOw0KCS8qIGluZGljYXRlZCBpZiB0aGUgZnVuZGluZyBnb2FsIGhhcyBiZWVuIHJlYWNoZWQuICovDQoJYm9vbCBmdW5kaW5nR29hbFJlYWNoZWQgPSBmYWxzZTsNCgkvKiBpbmRpY2F0ZXMgaWYgdGhlIGNyb3dkc2FsZSBoYXMgYmVlbiBjbG9zZWQgYWxyZWFkeSAqLw0KCWJvb2wgY3Jvd2RzYWxlQ2xvc2VkID0gZmFsc2U7DQoJLyogdGhlIG11bHRpc2lnbmF0dXJlIHdhbGxldCBvbiB3aGljaCB0aGUgZnVuZHMgd2lsbCBiZSBzdG9yZWQgKi8NCglhZGRyZXNzIG1zV2FsbGV0ID0gMHg5MWVmZmZiOWM2Y2QzYTY2NDc0Njg4ZDBhNDhhYTZlY2ZlNTE1YWE1Ow0KCS8qIG5vdGlmeWluZyB0cmFuc2ZlcnMgYW5kIHRoZSBzdWNjZXNzIG9mIHRoZSBjcm93ZHNhbGUqLw0KCWV2ZW50IEdvYWxSZWFjaGVkKGFkZHJlc3MgYmVuZWZpY2lhcnksIHVpbnQgYW1vdW50UmFpc2VkKTsNCglldmVudCBGdW5kVHJhbnNmZXIoYWRkcmVzcyBiYWNrZXIsIHVpbnQgYW1vdW50LCBib29sIGlzQ29udHJpYnV0aW9uLCB1aW50IGFtb3VudFJhaXNlZCk7DQoNCg0KDQogICAgLyogIGluaXRpYWxpemF0aW9uLCBzZXQgdGhlIHRva2VuIGFkZHJlc3MgKi8NCiAgICBmdW5jdGlvbiBDcm93ZHNhbGUoICkgew0KICAgICAgICB0b2tlblJld2FyZCA9IHRva2VuKDB4YmU4N2U4Nzk2NWI5NmQ4MTc0ZWFlNGUzNzI0YTZkNzQxN2M0ODhiMCk7DQogICAgfQ0KDQogICAgLyogaW52ZXN0IGJ5IHNlbmRpbmcgZXRoZXIgdG8gdGhlIGNvbnRyYWN0LiAqLw0KICAgIGZ1bmN0aW9uICgpIHBheWFibGV7DQoJCWlmKG1zZy5zZW5kZXIgIT0gbXNXYWxsZXQpIC8vZG8gbm90IHRyaWdnZXIgaW52ZXN0bWVudCBpZiB0aGUgbXVsdGlzaWcgd2FsbGV0IGlzIHJldHVybmluZyB0aGUgZnVuZHMNCiAgICAgICAgCWludmVzdChtc2cuc2VuZGVyKTsNCiAgICB9DQoNCiAgICAvKiBtYWtlIGFuIGludmVzdG1lbnQNCiAgICAqICBvbmx5IGNhbGxhYmxlIGlmIHRoZSBjcm93ZHNhbGUgc3RhcnRlZCBhbmQgaGFzbid0IGJlZW4gY2xvc2VkIGFscmVhZHkgYW5kIHRoZSBtYXhHb2FsIHdhc24ndCByZWFjaGVkIHlldC4NCiAgICAqICB0aGUgY3VycmVudCB0b2tlbiBwcmljZSBpcyBsb29rZWQgdXAgYW5kIHRoZSBjb3JyZXNwb25kaW5nIG51bWJlciBvZiB0b2tlbnMgaXMgdHJhbnNmZXJlZCB0byB0aGUgcmVjZWl2ZXIuDQogICAgKiAgdGhlIHNlbnQgdmFsdWUgaXMgZGlyZWN0bHkgZm9yd2FyZGVkIHRvIGEgc2FmZSBtdWx0aXNpZyB3YWxsZXQuDQogICAgKiAgdGhpcyBtZXRob2QgYWxsb3dzIHRvIHB1cmNoYXNlIHRva2VucyBpbiBiZWhhbGYgb2YgYW5vdGhlciBhZGRyZXNzLiovDQogICAgZnVuY3Rpb24gaW52ZXN0KGFkZHJlc3MgcmVjZWl2ZXIpIHBheWFibGV7DQogICAgCXVpbnQgYW1vdW50ID0gbXNnLnZhbHVlOw0KCQl1aW50IG51bVRva2VucyA9IGFtb3VudCAvIGdldFByaWNlKCk7DQoJCWlmIChjcm93ZHNhbGVDbG9zZWR8fG5vdzxzdGFydHx8dG9rZW5zU29sZCtudW1Ub2tlbnM+bWF4R29hbCkgdGhyb3c7DQoJCWlmKCFtc1dhbGxldC5zZW5kKGFtb3VudCkpIHRocm93Ow0KCQliYWxhbmNlT2ZbcmVjZWl2ZXJdICs9IGFtb3VudDsNCgkJYW1vdW50UmFpc2VkICs9IGFtb3VudDsNCgkJdG9rZW5zU29sZCs9bnVtVG9rZW5zOw0KCQlpZighdG9rZW5SZXdhcmQudHJhbnNmZXJGcm9tKGJlbmVmaWNpYXJ5LCByZWNlaXZlciwgbnVtVG9rZW5zKSkgdGhyb3c7DQogICAgICAgIEZ1bmRUcmFuc2ZlcihyZWNlaXZlciwgYW1vdW50LCB0cnVlLCBhbW91bnRSYWlzZWQpOw0KICAgIH0NCg0KICAgIC8qIGxvb2tzIHVwIHRoZSBjdXJyZW50IHRva2VuIHByaWNlICovDQogICAgZnVuY3Rpb24gZ2V0UHJpY2UoKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IHByaWNlKXsNCiAgICAgICAgZm9yKHZhciBpID0gMDsgaSA8IGRlYWRsaW5lcy5sZW5ndGg7IGkrKykNCiAgICAgICAgICAgIGlmKG5vdzxkZWFkbGluZXNbaV0pDQogICAgICAgICAgICAgICAgcmV0dXJuIHByaWNlc1tpXTsNCiAgICAgICAgcmV0dXJuIHByaWNlc1twcmljZXMubGVuZ3RoLTFdOy8vc2hvdWxkIG5ldmVyIGJlIHJldHVybmVkLCBidXQgdG8gYmUgc3VyZSB0byBub3QgZGl2aWRlIGJ5IDANCiAgICB9DQoNCiAgICBtb2RpZmllciBhZnRlckRlYWRsaW5lKCkgeyBpZiAobm93ID49IGRlYWRsaW5lc1tkZWFkbGluZXMubGVuZ3RoLTFdKSBfOyB9DQoNCiAgICAvKiBjaGVja3MgaWYgdGhlIGdvYWwgb3IgdGltZSBsaW1pdCBoYXMgYmVlbiByZWFjaGVkIGFuZCBlbmRzIHRoZSBjYW1wYWlnbiAqLw0KICAgIGZ1bmN0aW9uIGNoZWNrR29hbFJlYWNoZWQoKSBhZnRlckRlYWRsaW5lIHsNCiAgICAgICAgaWYgKHRva2Vuc1NvbGQgPj0gZnVuZGluZ0dvYWwpew0KICAgICAgICAgICAgZnVuZGluZ0dvYWxSZWFjaGVkID0gdHJ1ZTsNCiAgICAgICAgICAgIHRva2VuUmV3YXJkLmJ1cm4oKTsgLy9idXJuIHJlbWFpbmluZyB0b2tlbnMgYnV0IDYwIDAwMCAwMDANCiAgICAgICAgICAgIEdvYWxSZWFjaGVkKGJlbmVmaWNpYXJ5LCBhbW91bnRSYWlzZWQpOw0KICAgICAgICB9DQogICAgICAgIGNyb3dkc2FsZUNsb3NlZCA9IHRydWU7DQogICAgfQ0KDQogICAgLyogYWxsb3dzIHRoZSBmdW5kZXJzIHRvIHdpdGhkcmF3IHRoZWlyIGZ1bmRzIGlmIHRoZSBnb2FsIGhhcyBub3QgYmVlbiByZWFjaGVkLg0KCSogIG9ubHkgd29ya3MgYWZ0ZXIgZnVuZHMgaGF2ZSBiZWVuIHJldHVybmVkIGZyb20gdGhlIG11bHRpc2lnIHdhbGxldC4gKi8NCglmdW5jdGlvbiBzYWZlV2l0aGRyYXdhbCgpIGFmdGVyRGVhZGxpbmUgew0KCQl1aW50IGFtb3VudCA9IGJhbGFuY2VPZlttc2cuc2VuZGVyXTsNCgkJaWYoYWRkcmVzcyh0aGlzKS5iYWxhbmNlID49IGFtb3VudCl7DQoJCQliYWxhbmNlT2ZbbXNnLnNlbmRlcl0gPSAwOw0KCQkJaWYgKGFtb3VudCA+IDApIHsNCgkJCQlpZiAobXNnLnNlbmRlci5zZW5kKGFtb3VudCkpIHsNCgkJCQkJRnVuZFRyYW5zZmVyKG1zZy5zZW5kZXIsIGFtb3VudCwgZmFsc2UsIGFtb3VudFJhaXNlZCk7DQoJCQkJfSBlbHNlIHsNCgkJCQkJYmFsYW5jZU9mW21zZy5zZW5kZXJdID0gYW1vdW50Ow0KCQkJCX0NCgkJCX0NCgkJfQ0KICAgIH0NCg0KfQ=='