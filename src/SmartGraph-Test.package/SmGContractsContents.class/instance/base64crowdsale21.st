base 64 content
base64crowdsale21
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC42Ow0KDQpjb250cmFjdCB0b2tlbiB7IGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIHNlbmRlciwgYWRkcmVzcyByZWNlaXZlciwgdWludCBhbW91bnQpIHJldHVybnMoYm9vbCBzdWNjZXNzKXsgIH0gfQ0KDQpjb250cmFjdCBDcm93ZHNhbGUgew0KICAgIC8qIGlmIHN1Y2Nlc3NmdWwsIHRoZSBmdW5kcyB3aWxsIGJlIHJldHJpZXZhYmxlIGJ5IHRoaXMgYWRkcmVzcyAqLw0KICAgIGFkZHJlc3MgcHVibGljIGJlbmVmaWNpYXJ5ID0gMHgwMDMyMzBiYmU2NGVjY2Q2NmY2MjkxMzY3OWM4OTY2Y2Y5ZjQxMTY2OyANCiAgICAvKiBpZiB0aGUgZnVuZGluZyBnb2FsIGlzIG5vdCByZWFjaGVkLCBpbnZlc3RvcnMgbWF5IHdpdGhkcmF3IHRoZWlyIGZ1bmRzICovDQogICAgdWludCBwdWJsaWMgZnVuZGluZ0dvYWwgPSA1MDAwMDAwMDsNCiAgICAvKiB0aGUgbWF4aW11bSBhbW91bnQgb2YgdG9rZW5zIHRvIGJlIHNvbGQgKi8NCiAgICB1aW50IHB1YmxpYyBtYXhHb2FsID0gMzk0MjQwMDAwOyANCiAgICAvKiBob3cgbXVjaCBoYXMgYmVlbiByYWlzZWQgYnkgY3Jvd2RhbGUgKGluIEVUSCkgKi8NCiAgICB1aW50IHB1YmxpYyBhbW91bnRSYWlzZWQ7IA0KICAgIC8qIHRoZSBzdGFydCBkYXRlIG9mIHRoZSBjcm93ZHNhbGUgKi8NCiAgICB1aW50IHB1YmxpYyBzdGFydCA9IDE0ODgyOTQwMDA7IA0KICAgIC8qIHRoZSBudW1iZXIgb2YgdG9rZW5zIGFscmVhZHkgc29sZCAqLw0KICAgIHVpbnQgcHVibGljIHRva2Vuc1NvbGQ7IA0KICAgIC8qIHRoZXJlIGFyZSBkaWZmZXJlbnQgcHJpY2VzIGluIGRpZmZlcmVudCB0aW1lIGludGVydmFscyAqLw0KICAgIHVpbnRbNF0gcHVibGljIGRlYWRsaW5lcyA9IFsxNDg4Mjk3NjAwLCAxNDg4OTAyNDAwLCAxNDg5NTA3MjAwLDE0OTAxMTIwMDBdOw0KICAgIHVpbnRbNF0gcHVibGljIHByaWNlcyA9IFs4MzMzMzMzMzMzMzMzMzMsIDkwOTA5MDkwOTA5MDkwOSw5NTIzODA5NTIzODA5NTIsIDEwMDAwMDAwMDAwMDAwMDBdOw0KICAgIC8qIHRoZSBhZGRyZXNzIG9mIHRoZSB0b2tlbiBjb250cmFjdCAqLw0KICAgIHRva2VuIHB1YmxpYyB0b2tlblJld2FyZDsNCiAgICAvKiB0aGUgYmFsYW5jZXMgKGluIEVUSCkgb2YgYWxsIGludmVzdG9ycyAqLw0KICAgIG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50MjU2KSBwdWJsaWMgYmFsYW5jZU9mOw0KICAgIGJvb2wgZnVuZGluZ0dvYWxSZWFjaGVkID0gZmFsc2U7DQogICAgYm9vbCBjcm93ZHNhbGVDbG9zZWQgPSBmYWxzZTsNCiAgICAvKiBub3RpZnlpbmcgdHJhbnNmZXJzIGFuZCB0aGUgc3VjY2VzcyBvZiB0aGUgY3Jvd2RzYWxlKi8NCiAgICBldmVudCBHb2FsUmVhY2hlZChhZGRyZXNzIGJlbmVmaWNpYXJ5LCB1aW50IGFtb3VudFJhaXNlZCk7DQogICAgZXZlbnQgRnVuZFRyYW5zZmVyKGFkZHJlc3MgYmFja2VyLCB1aW50IGFtb3VudCwgYm9vbCBpc0NvbnRyaWJ1dGlvbik7DQogICAgDQoNCiAgICAvKiAgaW5pdGlhbGl6YXRpb24sIHNldCB0aGUgdG9rZW4gYWRkcmVzcyAqLw0KICAgIGZ1bmN0aW9uIENyb3dkc2FsZSggKSB7DQogICAgICAgIHRva2VuUmV3YXJkID0gdG9rZW4oMHhiNGU3ZmM3ZjU5YzJlYzA3YWVlMDhjNDYyNDFkN2I0N2RlNGNlYzA2KTsNCiAgICB9DQoNCiAgICAvKiB3aGVuZXZlciBhbnlvbmUgc2VuZHMgZnVuZHMgdG8gYSBjb250cmFjdCwgdGhlIGNvcnJlc3BvbmRpbmcgYW1vdW50IG9mIHRva2VucyBpcyB0cmFuc2ZlcmVkIGlmIHRoZSBjcm93ZHNhbGUgc3RhcnRlZCBhbmQgaGFzbid0IGJlZW4NCiAgICAgICAgY2xvc2VkIGFscmVhZHkgYW5kIHRoZSBtYXhHb2FsIHdhc24ndCByZWFjaGVkIHlldC4qLw0KICAgIGZ1bmN0aW9uICgpIHBheWFibGV7DQogICAgICAgIHVpbnQgYW1vdW50ID0gbXNnLnZhbHVlOw0KICAgICAgICB1aW50IG51bVRva2VucyA9IGFtb3VudCAvIGdldFByaWNlKCk7DQogICAgICAgIGlmIChjcm93ZHNhbGVDbG9zZWR8fG5vdzxzdGFydHx8dG9rZW5zU29sZCtudW1Ub2tlbnM+bWF4R29hbCkgdGhyb3c7DQogICAgICAgIGJhbGFuY2VPZlttc2cuc2VuZGVyXSA9IGFtb3VudDsNCiAgICAgICAgYW1vdW50UmFpc2VkICs9IGFtb3VudDsNCiAgICAgICAgdG9rZW5zU29sZCs9bnVtVG9rZW5zOw0KICAgICAgICBpZighdG9rZW5SZXdhcmQudHJhbnNmZXJGcm9tKGJlbmVmaWNpYXJ5LCBtc2cuc2VuZGVyLCBudW1Ub2tlbnMpKSB0aHJvdzsNCiAgICAgICAgRnVuZFRyYW5zZmVyKG1zZy5zZW5kZXIsIGFtb3VudCwgdHJ1ZSk7DQogICAgfQ0KICAgIA0KICAgIC8qIGxvb2tzIHVwIHRoZSBjdXJyZW50IHRva2VuIHByaWNlICovDQogICAgZnVuY3Rpb24gZ2V0UHJpY2UoKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IHByaWNlKXsNCiAgICAgICAgZm9yKHZhciBpID0gMDsgaSA8IGRlYWRsaW5lcy5sZW5ndGg7IGkrKykNCiAgICAgICAgICAgIGlmKG5vdzxkZWFkbGluZXNbaV0pDQogICAgICAgICAgICAgICAgcmV0dXJuIHByaWNlc1tpXTsNCiAgICAgICAgcmV0dXJuIHByaWNlc1twcmljZXMubGVuZ3RoLTFdOy8vc2hvdWxkIG5ldmVyIGJlIHJldHVybmVkLCBidXQgdG8gYmUgc3VyZSB0byBub3QgZGl2aWRlIGJ5IDANCiAgICB9DQoNCiAgICBtb2RpZmllciBhZnRlckRlYWRsaW5lKCkgeyBpZiAobm93ID49IGRlYWRsaW5lc1tkZWFkbGluZXMubGVuZ3RoLTFdKSBfOyB9DQoNCiAgICAvKiBjaGVja3MgaWYgdGhlIGdvYWwgb3IgdGltZSBsaW1pdCBoYXMgYmVlbiByZWFjaGVkIGFuZCBlbmRzIHRoZSBjYW1wYWlnbiAqLw0KICAgIGZ1bmN0aW9uIGNoZWNrR29hbFJlYWNoZWQoKSBhZnRlckRlYWRsaW5lIHsNCiAgICAgICAgaWYgKHRva2Vuc1NvbGQgPj0gZnVuZGluZ0dvYWwpew0KICAgICAgICAgICAgZnVuZGluZ0dvYWxSZWFjaGVkID0gdHJ1ZTsNCiAgICAgICAgICAgIEdvYWxSZWFjaGVkKGJlbmVmaWNpYXJ5LCBhbW91bnRSYWlzZWQpOw0KICAgICAgICB9DQogICAgICAgIGNyb3dkc2FsZUNsb3NlZCA9IHRydWU7DQogICAgfQ0KDQogICAgLyogYWxsb3dzIHRoZSBiZW5lZmljaWFyeSBhbmQvb3IgdGhlIGZ1bmRlcnMgdG8gd2l0aGRyYXcgdGhlaXIgZnVuZHMgKi8NCiAgICBmdW5jdGlvbiBzYWZlV2l0aGRyYXdhbCgpIGFmdGVyRGVhZGxpbmUgew0KICAgICAgICAvLyBpZiB0aGUgZ29hbCBoYXNuJ3QgYmVlbiByZWFjaGVkLCBpbnZlc3RvcnMgbWF5IHdpdGhkcmF3IHRoZWlyIGZ1bmRzDQogICAgICAgIGlmICghZnVuZGluZ0dvYWxSZWFjaGVkKSB7DQogICAgICAgICAgICB1aW50IGFtb3VudCA9IGJhbGFuY2VPZlttc2cuc2VuZGVyXTsNCiAgICAgICAgICAgIGJhbGFuY2VPZlttc2cuc2VuZGVyXSA9IDA7DQogICAgICAgICAgICBpZiAoYW1vdW50ID4gMCkgew0KICAgICAgICAgICAgICAgIGlmIChtc2cuc2VuZGVyLnNlbmQoYW1vdW50KSkgew0KICAgICAgICAgICAgICAgICAgICBGdW5kVHJhbnNmZXIobXNnLnNlbmRlciwgYW1vdW50LCBmYWxzZSk7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgYmFsYW5jZU9mW21zZy5zZW5kZXJdID0gYW1vdW50Ow0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICAvL2lmIHRoZSBnb2FsIGhhcyBiZW5uIHJlYWNoZWQgYW5kIHRoZSBiZW5lZmljaWFyeSBoaW1zZWxmIGlzIHRoZSBzZW5kZXIsIGhlIG1heSB3aXRoZHJhdyBldmVyeXRoaW5nDQogICAgICAgIGlmIChmdW5kaW5nR29hbFJlYWNoZWQgJiYgYmVuZWZpY2lhcnkgPT0gbXNnLnNlbmRlcikgew0KICAgICAgICAgICAgaWYgKGJlbmVmaWNpYXJ5LnNlbmQoYW1vdW50UmFpc2VkKSkgew0KICAgICAgICAgICAgICAgIEZ1bmRUcmFuc2ZlcihiZW5lZmljaWFyeSwgYW1vdW50UmFpc2VkLCBmYWxzZSk7DQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgIC8vSWYgd2UgZmFpbCB0byBzZW5kIHRoZSBmdW5kcyB0byBiZW5lZmljaWFyeSwgdW5sb2NrIGZ1bmRlcnMgYmFsYW5jZQ0KICAgICAgICAgICAgICAgIGZ1bmRpbmdHb2FsUmVhY2hlZCA9IGZhbHNlOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfQ0KfQ=='