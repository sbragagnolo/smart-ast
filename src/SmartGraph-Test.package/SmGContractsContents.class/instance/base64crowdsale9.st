base 64 content
base64crowdsale9
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC44Ow0KDQoNCmNvbnRyYWN0IHRva2VuIHtmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIHJlY2VpdmVyLCB1aW50IGFtb3VudCl7IH19DQoNCmNvbnRyYWN0IENyb3dkc2FsZSB7DQogICAgdWludCBwdWJsaWMgYW1vdW50UmFpc2VkOyB1aW50IHB1YmxpYyByZXNBbW91bnQ7IHVpbnQgcHVibGljIHNvbGRUb2tlbnM7DQogICAgbWFwcGluZyhhZGRyZXNzID0+IHVpbnQyNTYpIHB1YmxpYyBiYWxhbmNlT2Y7DQogICAgZXZlbnQgR29hbFJlYWNoZWQoYWRkcmVzcyBiZW5lZmljaWFyeSwgdWludCBhbW91bnRSYWlzZWQpOw0KICAgIGV2ZW50IEZ1bmRUcmFuc2ZlcihhZGRyZXNzIGJhY2tlciwgdWludCBhbW91bnQsIGJvb2wgaXNDb250cmlidXRpb24pOw0KICAgIGJvb2wgcHVibGljIGNyb3dkc2FsZUNsb3NlZCA9IHRydWU7DQogICAgYm9vbCBwdWJsaWMgbWluaW11bVRhcmdldFJlYWNoZWQgPSBmYWxzZTsNCg0KICAgIC8vIGluaXRpYWxpemF0aW9uDQogICAgYWRkcmVzcyBwdWJsaWMgYmVuZWZpY2lhcnkgPSAweDM1QTlkZDVhNmI1OWVFNWUyOEZDNTE5ODAyQTQ2ODM3OTU3M2FmMzk7LyppZlN1Y2Nlc3NmdWxTZW5kVG8qLw0KICAgIHVpbnQgcHVibGljIHByaWNlID0gMC4wMDE1IGV0aGVyOy8qY29zdE9mRWFjaFRva2VuKi8NCiAgICB1aW50IHB1YmxpYyBtaW5pbXVtVGFyZ2V0ID0gMTAgKiBwcmljZTsvKm1pbmltdW1UYXJnZXRJblRva2VucyovDQogICAgdWludCBwdWJsaWMgbWF4aW11bVRhcmdldCA9IDEwMDAgKiBwcmljZTsvKm1heGltdW1UYXJnZXRJblRva2VucyovDQogICAgdWludCBwdWJsaWMgZGVhZGxpbmUgPSAgbm93ICsgMTQ0MCAqIDEgbWludXRlczsvKmR1cmF0aW9uSW5NaW51dGVzKi8NCiAgICB0b2tlbiBwdWJsaWMgdG9rZW5SZXdhcmQgPSB0b2tlbigweDJGZDgwMTljZTJBQWMzYmY5REIxOEQ4NTFBNTdFRmUxYTYxNTFCQkYpOy8qYWRkcmVzc09mVG9rZW5Vc2VkQXNSZXdhcmQqLw0KDQoNCiAgICAvLyB0aGUgZnVuY3Rpb24gd2l0aG91dCBuYW1lIGlzIHRoZSBkZWZhdWx0IGZ1bmN0aW9uIHRoYXQgaXMgY2FsbGVkIHdoZW5ldmVyIGFueW9uZSBzZW5kcyBmdW5kcyB0byBhIGNvbnRyYWN0DQogICAgZnVuY3Rpb24gKCkgcGF5YWJsZSB7DQogICAgICAgIGlmIChjcm93ZHNhbGVDbG9zZWQgfHwgKG1heGltdW1UYXJnZXQgLSBhbW91bnRSYWlzZWQpIDwgbXNnLnZhbHVlKSB0aHJvdzsNCiAgICAgICAgdWludCBhbW91bnQgPSBtc2cudmFsdWU7DQogICAgICAgIGJhbGFuY2VPZlttc2cuc2VuZGVyXSArPSBhbW91bnQ7DQogICAgICAgIGFtb3VudFJhaXNlZCArPSBhbW91bnQ7DQogICAgICAgIHJlc0Ftb3VudCArPSBhbW91bnQ7DQogICAgICAgIHNvbGRUb2tlbnMgKz0gYW1vdW50IC8gcHJpY2U7DQogICAgICAgIHRva2VuUmV3YXJkLnRyYW5zZmVyKG1zZy5zZW5kZXIsIGFtb3VudCAvIHByaWNlKTsNCiAgICAgICAgRnVuZFRyYW5zZmVyKG1zZy5zZW5kZXIsIGFtb3VudCwgdHJ1ZSk7DQoNCiAgICAgICAgaWYgKGFtb3VudFJhaXNlZCA+PSBtaW5pbXVtVGFyZ2V0ICYmICFtaW5pbXVtVGFyZ2V0UmVhY2hlZCkgew0KICAgICAgICAgICAgbWluaW11bVRhcmdldFJlYWNoZWQgPSB0cnVlOw0KICAgICAgICAgICAgR29hbFJlYWNoZWQoYmVuZWZpY2lhcnksIG1pbmltdW1UYXJnZXQpOw0KICAgICAgICB9DQoNCiAgICAgICAgLy8gZnVuZHMgYXJlIHNlbmRpbmcgdG8gYmVuZWZpY2lhcnkgYWNjb3VudCBhZnRlciBtaW5pbXVtVGFyZ2V0IHdpbGwgYmUgcmVhY2hlZA0KICAgICAgICBpZiAobWluaW11bVRhcmdldFJlYWNoZWQpIHsNCiAgICAgICAgICAgIGlmIChiZW5lZmljaWFyeS5zZW5kKGFtb3VudCkpIHsNCiAgICAgICAgICAgICAgICBGdW5kVHJhbnNmZXIoYmVuZWZpY2lhcnksIGFtb3VudCwgZmFsc2UpOw0KICAgICAgICAgICAgICAgIHJlc0Ftb3VudCAtPSBhbW91bnQ7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQoNCiAgICAvLyBkZXYgZnVuY3Rpb24gZm9yIHdpdGhkcmF3IGFueSBhbW91bnQgZnJvbSByYWlzZWQgZnVuZHMgKGFjdGl2YXRlIG9ubHkgaWYgbWluaW11bVRhcmdldCBpcyByZWFjaGVkKQ0KICAgIGZ1bmN0aW9uIGRldldpdGhkcmF3YWwodWludCBudW0sIHVpbnQgZGVuKSB7DQogICAgICAgIGlmICghbWluaW11bVRhcmdldFJlYWNoZWQgfHwgIShiZW5lZmljaWFyeSA9PSBtc2cuc2VuZGVyKSkgdGhyb3c7DQogICAgICAgIHVpbnQgd0Ftb3VudCA9IG51bSAvIGRlbjsNCiAgICAgICAgaWYgKGJlbmVmaWNpYXJ5LnNlbmQod0Ftb3VudCkpIHsNCiAgICAgICAgICAgIEZ1bmRUcmFuc2ZlcihiZW5lZmljaWFyeSwgd0Ftb3VudCwgZmFsc2UpOw0KICAgICAgICAgICAgcmVzQW1vdW50IC09IHdBbW91bnQ7DQogICAgICAgIH0NCiAgICB9DQoNCiAgICAvLyBkZXYgZnVuY3Rpb24gZm9yIHdpdGhkcmF3IGFtb3VudCwgd2hpY2ggYmUgcmVzZXJ2ZWQgYnkgbWluaW11bVRhcmdldCAoYWN0aXZhdGUgb25seSBpZiBtaW5pbXVtVGFyZ2V0IGlzIHJlYWNoZWQpDQogICAgZnVuY3Rpb24gZGV2UmVzV2l0aGRyYXdhbCgpIHsNCiAgICAgICAgaWYgKCFtaW5pbXVtVGFyZ2V0UmVhY2hlZCB8fCAhKGJlbmVmaWNpYXJ5ID09IG1zZy5zZW5kZXIpKSB0aHJvdzsNCiAgICAgICAgaWYgKGJlbmVmaWNpYXJ5LnNlbmQocmVzQW1vdW50KSkgew0KICAgICAgICAgICAgRnVuZFRyYW5zZmVyKGJlbmVmaWNpYXJ5LCByZXNBbW91bnQsIGZhbHNlKTsNCiAgICAgICAgICAgIHJlc0Ftb3VudCAtPSByZXNBbW91bnQ7DQogICAgICAgIH0NCiAgICB9DQoNCiAgICAvLyBkZXYgZnVuY3Rpb24gZm9yIGNsb3NlIGNyb3dkc2FsZSAgDQogICAgZnVuY3Rpb24gY2xvc2VDcm93ZHNhbGUoYm9vbCBjbG9zZVR5cGUpIHsNCiAgICAgICAgIGlmIChiZW5lZmljaWFyeSA9PSBtc2cuc2VuZGVyKSB7DQogICAgICAgICAgICBjcm93ZHNhbGVDbG9zZWQgPSBjbG9zZVR5cGU7DQogICAgICAgICB9DQogICAgfQ0KDQoNCiAgICBtb2RpZmllciBhZnRlckRlYWRsaW5lKCkgeyBpZiAobm93ID49IGRlYWRsaW5lKSBfOyB9DQoNCiAgICAvLyBjaGVja3MgaWYgdGhlIG1pbmltdW1UYXJnZXQgaGFzIGJlZW4gcmVhY2hlZA0KICAgIGZ1bmN0aW9uIGNoZWNrVGFyZ2V0UmVhY2hlZCgpIGFmdGVyRGVhZGxpbmUgew0KICAgICAgICBpZiAoYW1vdW50UmFpc2VkID49IG1pbmltdW1UYXJnZXQpIHsNCiAgICAgICAgICAgIG1pbmltdW1UYXJnZXRSZWFjaGVkID0gdHJ1ZTsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIC8vIGZ1bmN0aW9uIGZvciByZXR1cm4gbm9uIHNvbGQgdG9rZW5zIHRvIGRldiBhY2NvdW50IGFmdGVyIGNyb3dkc2FsZQ0KICAgIGZ1bmN0aW9uIHJldHVyblRva2Vucyh1aW50IHRva2Vuc0Ftb3VudCkgYWZ0ZXJEZWFkbGluZSB7DQogICAgICAgIGlmICghY3Jvd2RzYWxlQ2xvc2VkKSB0aHJvdzsNCiAgICAgICAgaWYgKGJlbmVmaWNpYXJ5ID09IG1zZy5zZW5kZXIpIHsNCiAgICAgICAgICAgIHRva2VuUmV3YXJkLnRyYW5zZmVyKGJlbmVmaWNpYXJ5LCB0b2tlbnNBbW91bnQpOw0KICAgICAgICB9DQogICAgfQ0KDQogICAgLy8gcmV0dXJuIHlvdXIgZnVuZHMgYWZ0ZXIgZGVhZGxpbmUgaWYgbWluaW11bVRhcmdldCBpcyBub3QgcmVhY2hlZCAoYWN0aXZhdGUgaWYgY3Jvd2RzYWxlIGNsb3NlKQ0KICAgIGZ1bmN0aW9uIHNhZmVXaXRoZHJhd2FsKCkgYWZ0ZXJEZWFkbGluZSB7DQogICAgICAgIGlmICghY3Jvd2RzYWxlQ2xvc2VkKSB0aHJvdzsNCiAgICAgICAgaWYgKCFtaW5pbXVtVGFyZ2V0UmVhY2hlZCAmJiBjcm93ZHNhbGVDbG9zZWQpIHsNCiAgICAgICAgICAgIHVpbnQgYW1vdW50ID0gYmFsYW5jZU9mW21zZy5zZW5kZXJdOw0KICAgICAgICAgICAgYmFsYW5jZU9mW21zZy5zZW5kZXJdID0gMDsNCiAgICAgICAgICAgIGlmIChhbW91bnQgPiAwKSB7DQogICAgICAgICAgICAgICAgaWYgKG1zZy5zZW5kZXIuc2VuZChhbW91bnQpKSB7DQogICAgICAgICAgICAgICAgICAgIEZ1bmRUcmFuc2Zlcihtc2cuc2VuZGVyLCBhbW91bnQsIGZhbHNlKTsNCiAgICAgICAgICAgICAgICAgICAgcmVzQW1vdW50IC09IGFtb3VudDsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBiYWxhbmNlT2ZbbXNnLnNlbmRlcl0gPSBhbW91bnQ7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfQ0KfQ=='