base 64 content
base64dappReg
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC4xOw0KDQpjb250cmFjdCBPd25lZCB7DQogIGV2ZW50IE5ld093bmVyKGFkZHJlc3MgaW5kZXhlZCBvbGQsIGFkZHJlc3MgaW5kZXhlZCBjdXJyZW50KTsNCg0KICBtb2RpZmllciBvbmx5X293bmVyIHsNCiAgICBpZiAobXNnLnNlbmRlciAhPSBvd25lcikgdGhyb3c7DQogICAgXzsNCiAgfQ0KDQogIGFkZHJlc3MgcHVibGljIG93bmVyID0gbXNnLnNlbmRlcjsNCg0KICBmdW5jdGlvbiBzZXRPd25lcihhZGRyZXNzIF9uZXcpIG9ubHlfb3duZXIgew0KICAgIE5ld093bmVyKG93bmVyLCBfbmV3KTsNCiAgICBvd25lciA9IF9uZXc7DQogIH0NCn0NCg0KY29udHJhY3QgRGFwcFJlZyBpcyBPd25lZCB7DQogIC8vIGlkICAgICAgIC0gc2hhcmVkIHRvIGJlIHRoZSBzYW1lIGFjY3Jvc3MgYWxsIGNvbnRyYWN0cyBmb3IgYSBzcGVjaWZpYyBkYXBwIChpbmNsdWRpbmcgR2l0aHVIaW50IGZvciB0aGUgcmVwbykNCiAgLy8gb3duZXIgICAgLSB0aGF0IGd1eQ0KICAvLyBtZXRhICAgICAtIG1ldGEgaW5mb3JtYXRpb24gZm9yIHRoZSBkYXBwDQogIHN0cnVjdCBEYXBwIHsNCiAgICBieXRlczMyIGlkOw0KICAgIGFkZHJlc3Mgb3duZXI7DQogICAgbWFwcGluZyAoYnl0ZXMzMiA9PiBieXRlczMyKSBtZXRhOw0KICB9DQoNCiAgbW9kaWZpZXIgd2hlbl9mZWVfcGFpZCB7DQogICAgaWYgKG1zZy52YWx1ZSA8IGZlZSkgdGhyb3c7DQogICAgXzsNCiAgfQ0KDQogIG1vZGlmaWVyIG9ubHlfZGFwcF9vd25lcihieXRlczMyIF9pZCkgew0KICAgIGlmIChkYXBwc1tfaWRdLm93bmVyICE9IG1zZy5zZW5kZXIpIHRocm93Ow0KICAgIF87DQogIH0NCg0KICBtb2RpZmllciBlaXRoZXJfb3duZXIoYnl0ZXMzMiBfaWQpIHsNCiAgICBpZiAoZGFwcHNbX2lkXS5vd25lciAhPSBtc2cuc2VuZGVyICYmIG93bmVyICE9IG1zZy5zZW5kZXIpIHRocm93Ow0KICAgIF87DQogIH0NCg0KICBtb2RpZmllciB3aGVuX2lkX2ZyZWUoYnl0ZXMzMiBfaWQpIHsNCiAgICBpZiAoZGFwcHNbX2lkXS5pZCAhPSAwKSB0aHJvdzsNCiAgICBfOw0KICB9DQoNCiAgZXZlbnQgTWV0YUNoYW5nZWQoYnl0ZXMzMiBpbmRleGVkIGlkLCBieXRlczMyIGluZGV4ZWQga2V5LCBieXRlczMyIHZhbHVlKTsNCiAgZXZlbnQgT3duZXJDaGFuZ2VkKGJ5dGVzMzIgaW5kZXhlZCBpZCwgYWRkcmVzcyBpbmRleGVkIG93bmVyKTsNCiAgZXZlbnQgUmVnaXN0ZXJlZChieXRlczMyIGluZGV4ZWQgaWQsIGFkZHJlc3MgaW5kZXhlZCBvd25lcik7DQogIGV2ZW50IFVucmVnaXN0ZXJlZChieXRlczMyIGluZGV4ZWQgaWQpOw0KDQogIG1hcHBpbmcgKGJ5dGVzMzIgPT4gRGFwcCkgZGFwcHM7DQogIGJ5dGVzMzJbXSBpZHM7DQoNCiAgdWludCBwdWJsaWMgZmVlID0gMSBldGhlcjsNCg0KICAvLyByZXR1cm5zIHRoZSBjb3VudCBvZiB0aGUgZGFwcHMgd2UgaGF2ZQ0KICBmdW5jdGlvbiBjb3VudCgpIGNvbnN0YW50IHJldHVybnMgKHVpbnQpIHsNCiAgICByZXR1cm4gaWRzLmxlbmd0aDsNCiAgfQ0KDQogIC8vIGEgZGFwcCBmcm9tIHRoZSBsaXN0DQogIGZ1bmN0aW9uIGF0KHVpbnQgX2luZGV4KSBjb25zdGFudCByZXR1cm5zIChieXRlczMyIGlkLCBhZGRyZXNzIG93bmVyKSB7DQogICAgRGFwcCBkID0gZGFwcHNbaWRzW19pbmRleF1dOw0KICAgIGlkID0gZC5pZDsNCiAgICBvd25lciA9IGQub3duZXI7DQogIH0NCg0KICAvLyBnZXQgd2l0aCB0aGUgaWQNCiAgZnVuY3Rpb24gZ2V0KGJ5dGVzMzIgX2lkKSBjb25zdGFudCByZXR1cm5zIChieXRlczMyIGlkLCBhZGRyZXNzIG93bmVyKSB7DQogICAgRGFwcCBkID0gZGFwcHNbX2lkXTsNCiAgICBpZCA9IGQuaWQ7DQogICAgb3duZXIgPSBkLm93bmVyOw0KICB9DQoNCiAgLy8gYWRkIGFwcHMNCiAgZnVuY3Rpb24gcmVnaXN0ZXIoYnl0ZXMzMiBfaWQpIHBheWFibGUgd2hlbl9mZWVfcGFpZCB3aGVuX2lkX2ZyZWUoX2lkKSB7DQogICAgaWRzLnB1c2goX2lkKTsNCiAgICBkYXBwc1tfaWRdID0gRGFwcChfaWQsIG1zZy5zZW5kZXIpOw0KICAgIFJlZ2lzdGVyZWQoX2lkLCBtc2cuc2VuZGVyKTsNCiAgfQ0KDQogIC8vIHJlbW92ZSBhcHBzDQogIGZ1bmN0aW9uIHVucmVnaXN0ZXIoYnl0ZXMzMiBfaWQpIGVpdGhlcl9vd25lcihfaWQpIHsNCiAgICBkZWxldGUgZGFwcHNbX2lkXTsNCiAgICBVbnJlZ2lzdGVyZWQoX2lkKTsNCiAgfQ0KDQogIC8vIGdldCBtZXRhIGluZm9ybWF0aW9uDQogIGZ1bmN0aW9uIG1ldGEoYnl0ZXMzMiBfaWQsIGJ5dGVzMzIgX2tleSkgY29uc3RhbnQgcmV0dXJucyAoYnl0ZXMzMikgew0KICAgIHJldHVybiBkYXBwc1tfaWRdLm1ldGFbX2tleV07DQogIH0NCg0KICAvLyBzZXQgbWV0YSBpbmZvcm1hdGlvbg0KICBmdW5jdGlvbiBzZXRNZXRhKGJ5dGVzMzIgX2lkLCBieXRlczMyIF9rZXksIGJ5dGVzMzIgX3ZhbHVlKSBvbmx5X2RhcHBfb3duZXIoX2lkKSB7DQogICAgZGFwcHNbX2lkXS5tZXRhW19rZXldID0gX3ZhbHVlOw0KICAgIE1ldGFDaGFuZ2VkKF9pZCwgX2tleSwgX3ZhbHVlKTsNCiAgfQ0KDQogIC8vIHNldCB0aGUgZGFwcCBvd25lcg0KICBmdW5jdGlvbiBzZXREYXBwT3duZXIoYnl0ZXMzMiBfaWQsIGFkZHJlc3MgX293bmVyKSBvbmx5X2RhcHBfb3duZXIoX2lkKSB7DQogICAgZGFwcHNbX2lkXS5vd25lciA9IF9vd25lcjsNCiAgICBPd25lckNoYW5nZWQoX2lkLCBfb3duZXIpOw0KICB9DQoNCiAgLy8gc2V0IHRoZSByZWdpc3RyYXRpb24gZmVlDQogIGZ1bmN0aW9uIHNldEZlZSh1aW50IF9mZWUpIG9ubHlfb3duZXIgew0KICAgIGZlZSA9IF9mZWU7DQogIH0NCg0KICAvLyByZXRyaWV2ZSBmdW5kcyBwYWlkDQogIGZ1bmN0aW9uIGRyYWluKCkgb25seV9vd25lciB7DQogICAgaWYgKCFtc2cuc2VuZGVyLnNlbmQodGhpcy5iYWxhbmNlKSkgew0KICAgICAgdGhyb3c7DQogICAgfQ0KICB9DQp9'