base 64 content
base64davidCoin1
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC4xMzsNCg0KY29udHJhY3QgRGF2aWRDb2luIHsNCiAgICANCiAgICAvLyB0b3RhbFN1cHBseSA9IE1heGltdW0gaXMgMTAwMCBDb2lucyB3aXRoIDE4IGRlY2ltYWxzOw0KICAgIC8vIFRoaXMgQ29pbiBpcyBtYWRlIGZvciBNci4gRGF2aWQgQmF5ZXIuDQogICAgLy8gTWFkZSBmcm9tIHd3dy5hcHBzdG9yZXdlYi5uZXQuDQoNCiAgICB1aW50MjU2IHB1YmxpYyB0b3RhbFN1cHBseSA9IDEwMDAwMDAwMDAwMDAwMDAwMDAwMDA7DQogICAgdWludDI1NiBwdWJsaWMgY2lyY3VsYXRpbmdTdXBwbHkgPSAwOyAgCQ0KICAgIHVpbnQ4ICAgcHVibGljIGRlY2ltYWxzID0gMTg7DQogICAgYm9vbCAgICBpbml0aWFsaXplZCA9IGZhbHNlOyAgICANCiAgDQogICAgc3RyaW5nICBwdWJsaWMgc3RhbmRhcmQgPSAnRVJDMjAgVG9rZW4nOw0KICAgIHN0cmluZyAgcHVibGljIG5hbWUgPSAnRGF2aWRDb2luJzsNCiAgICBzdHJpbmcgIHB1YmxpYyBzeW1ib2wgPSAnRGF2aWQnOyAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgYWRkcmVzcyBwdWJsaWMgb3duZXIgPSBtc2cuc2VuZGVyOyANCg0KICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgYmFsYW5jZXM7DQogICAgbWFwcGluZyAoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpKSBhbGxvd2VkOwkNCgkNCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgX2Zyb20sIGFkZHJlc3MgaW5kZXhlZCBfdG8sIHVpbnQyNTYgX3ZhbHVlKTsNCiAgICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgX293bmVyLCBhZGRyZXNzIGluZGV4ZWQgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKTsgICAgDQogICAgDQogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsNCiAgICAgICAgaWYgKGJhbGFuY2VzW21zZy5zZW5kZXJdID49IF92YWx1ZSAmJiBfdmFsdWUgPiAwKSB7DQogICAgICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSAtPSBfdmFsdWU7DQogICAgICAgICAgICBiYWxhbmNlc1tfdG9dICs9IF92YWx1ZTsNCiAgICAgICAgICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsNCiAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICB9IGVsc2UgeyByZXR1cm4gZmFsc2U7IH0NCiAgICB9DQoNCiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsNCiAgICAgICAgaWYgKGJhbGFuY2VzW19mcm9tXSA+PSBfdmFsdWUgJiYgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gPj0gX3ZhbHVlICYmIF92YWx1ZSA+IDApIHsNCiAgICAgICAgICAgIGJhbGFuY2VzW190b10gKz0gX3ZhbHVlOw0KICAgICAgICAgICAgYmFsYW5jZXNbX2Zyb21dIC09IF92YWx1ZTsNCiAgICAgICAgICAgIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdIC09IF92YWx1ZTsNCiAgICAgICAgICAgIFRyYW5zZmVyKF9mcm9tLCBfdG8sIF92YWx1ZSk7DQogICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgfSBlbHNlIHsgcmV0dXJuIGZhbHNlOyB9DQogICAgfQ0KDQogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpIHsNCiAgICAgICAgcmV0dXJuIGJhbGFuY2VzW19vd25lcl07DQogICAgfQ0KDQogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7DQogICAgICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOw0KICAgICAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgX3ZhbHVlKTsNCiAgICAgICAgcmV0dXJuIHRydWU7DQogICAgfQ0KDQogICAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IHJlbWFpbmluZykgew0KICAgICAgcmV0dXJuIGFsbG93ZWRbX293bmVyXVtfc3BlbmRlcl07DQogICAgfQ0KCQ0KICAgIGZ1bmN0aW9uIHRyYW5zZmVyT3duZXJzaGlwKGFkZHJlc3MgbmV3T3duZXIpIHsNCiAgICAgICAgaWYgKG1zZy5zZW5kZXIgPT0gb3duZXIpew0KICAgICAgICAgICAgb3duZXIgPSBuZXdPd25lcjsNCiAgICAgICAgfQ0KICAgIH0JDQogICAgDQogICAgZnVuY3Rpb24gaW5pdGlhbGl6ZUNvaW5zKCkgew0KICAgICAgICBpZiAobXNnLnNlbmRlciA9PSBvd25lcil7DQogICAgICAgICAgICBpZiAoIWluaXRpYWxpemVkKXsNCiAgICAgICAgICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IHRvdGFsU3VwcGx5Ow0KICAgICAgICAgICAgICAgIGluaXRpYWxpemVkID0gdHJ1ZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH0gICAgDQoJDQp9'