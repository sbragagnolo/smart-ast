base 64 content
base64documents
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC4yOw0KDQovKiDQoNC+0LTQuNGC0LXQu9GM0YHQutC40Lkg0LrQvtC90YLRgNCw0LrRgiAqLw0KY29udHJhY3QgT3duZWQgew0KDQogICAgLyog0JDQtNGA0LXRgSDQstC70LDQtNC10LvRjNGG0LAg0LrQvtC90YLRgNCw0LrRgtCwKi8NCiAgICBhZGRyZXNzIG93bmVyOw0KDQogICAgLyog0JrQvtC90YHRgtGA0YPQutGC0L7RgCDQutC+0L3RgtGA0LDQutGC0LAsINCy0YvQt9GL0LLQsNC10YLRgdGPINC/0YDQuCDQv9C10YDQstC+0Lwg0LfQsNC/0YPRgdC60LUgKi8NCiAgICBmdW5jdGlvbiBPd25lZCgpIHsNCiAgICAgICAgb3duZXIgPSBtc2cuc2VuZGVyOw0KICAgIH0NCg0KICAgIC8qINCY0LfQvNC10L3QuNGC0Ywg0LLQu9Cw0LTQtdC70YzRhtCwINC60L7QvdGC0YDQsNC60YLQsCwgbmV3T3duZXIgLSDQsNC00YDQtdGBINC90L7QstC+0LPQviDQstC70LDQtNC10LvRjNGG0LAgKi8NCiAgICBmdW5jdGlvbiBjaGFuZ2VPd25lcihhZGRyZXNzIG5ld093bmVyKSBvbmx5b3duZXIgew0KICAgICAgICBvd25lciA9IG5ld093bmVyOw0KICAgIH0NCg0KICAgIC8qINCc0L7QtNC40YTQuNC60LDRgtC+0YAg0LTQu9GPINC+0LPRgNCw0L3QuNGH0LXQvdC40Y8g0LTQvtGB0YLRg9C/0LAg0Log0YTRg9C90LrRhtC40Y/QvCDRgtC+0LvRjNC60L4g0LTQu9GPINCy0LvQsNC00LXQu9GM0YbQsCAqLw0KICAgIG1vZGlmaWVyIG9ubHlvd25lcigpIHsNCiAgICAgICAgaWYgKG1zZy5zZW5kZXI9PW93bmVyKSBfOw0KICAgIH0NCg0KICAgIC8qINCj0LTQsNC70LjRgtGMINC60L7QvdGC0YDQsNC60YIgKi8NCiAgICBmdW5jdGlvbiBraWxsKCkgb25seW93bmVyIHsNCiAgICAgICAgaWYgKG1zZy5zZW5kZXIgPT0gb3duZXIpIHN1aWNpZGUob3duZXIpOw0KICAgIH0NCn0NCg0KLyog0J7RgdC90L7QstC90L7QuSDQutC+0L3RgtGA0LDQutGCLCDQvdCw0YHQu9C10LTRg9C10YIg0LrQvtC90YLRgNCw0LrRgiBPd25lZCAqLw0KY29udHJhY3QgRG9jdW1lbnRzIGlzIE93bmVkIHsNCg0KICAgIC8qINCh0YLRgNGD0LrRgtGD0YDQsCDQv9GA0LXQtNGB0YLQsNCy0LvRj9GO0YnQsNGPINC00L7QutGD0LzQtdC90YIgKi8NCiAgICBzdHJ1Y3QgRG9jdW1lbnQgew0KICAgICAgICBzdHJpbmcgaGFzaDsNCiAgICAgICAgc3RyaW5nIGxpbms7DQogICAgICAgIHN0cmluZyBkYXRhOw0KICAgICAgICBhZGRyZXNzIGNyZWF0b3I7DQogICAgICAgIHVpbnQgZGF0ZTsNCiAgICAgICAgdWludCBzaWduc0NvdW50Ow0KICAgICAgICBtYXBwaW5nICh1aW50ID0+IFNpZ24pIHNpZ25zOw0KICAgIH0NCg0KICAgIC8qINCh0YLRgNGD0LrRgtGD0YDQsCDQv9GA0LXQtNGB0YLQsNCy0LvRj9GO0YnQsNGPINC/0L7QtNC/0LjRgdGMICovDQogICAgc3RydWN0IFNpZ24gew0KICAgICAgICBhZGRyZXNzIG1lbWJlcjsNCiAgICAgICAgdWludCBkYXRlOw0KICAgIH0NCg0KICAgIC8qINCc0LDQv9C/0LjQvdCzIElEINC00L7QutGD0LzQtdC90YLQsCAtPiDQtNC+0LrRg9C80LXQvdGCICovDQogICAgbWFwcGluZyAodWludCA9PiBEb2N1bWVudCkgcHVibGljIGRvY3VtZW50c0lkczsNCg0KICAgIC8qINCa0L7Quy3QstC+INC00L7QutGD0LzQtdC90YLQvtCyICovDQogICAgdWludCBkb2N1bWVudHNDb3VudCA9IDA7DQoNCiAgICAvKiDQodC+0LHRi9GC0LjQtSDQv9GA0Lgg0L/QvtC00L/QuNGB0Lgg0LTQvtC60YPQvNC10L3RgtCwINGD0YfQsNGB0YLQvdC40LrQvtC8LCDQv9Cw0YDQsNC80LXRgtGA0YsgLSDQsNC00YDQtdGBINGD0YfQsNGB0YLQvdC40LrQsCwgSUQg0LTQvtC60YPQvNC10L3RgtCwICovDQogICAgZXZlbnQgRG9jdW1lbnRTaWduZWQodWludCBpZCwgYWRkcmVzcyBtZW1iZXIpOw0KDQogICAgLyog0KHQvtCx0YvRgtC40LUg0L/RgNC4INGA0LXQs9C40YHRgtGA0LDRhtC40Lgg0LTQvtC60YPQvNC10L3RgtCwLCDQv9Cw0YDQsNC80LXRgtGA0YsgLSBJRCDQtNC+0LrRg9C80LXQvdGC0LAgKi8NCiAgICBldmVudCBEb2N1bWVudFJlZ2lzdGVyZWQodWludCBpZCwgc3RyaW5nIGhhc2gpOw0KDQogICAgIC8qINCa0L7QvdGB0YLRgNGD0LrRgtC+0YAg0LrQvtC90YLRgNCw0LrRgtCwLCDQstGL0LfRi9Cy0LDQtdGC0YHRjyDQv9GA0Lgg0L/QtdGA0LLQvtC8INC30LDQv9GD0YHQutC1ICovDQogICAgZnVuY3Rpb24gRG9jdW1lbnRzKCkgew0KICAgIH0NCg0KICAgIC8qINGE0YPQvdC60YbQuNGPINC00L7QsdCw0LLQu9C10L3QuNGPINC00L7QutGD0LzQtdC90YLQsCwg0L/QsNGA0LDQvNC10YLRgNGLIC0g0YXRjdGILCDRgdGB0YvQu9C60LAsINC00L7Qv9C+0LvQvdC40YLQtdC70YzQvdGL0LUg0LTQsNC90L3Ri9C1LCDRgdC+0LfQtNCw0YLQtdC70YwuDQogICAg0JXRgdC70Lgg0L3QtSDQv9C10YDQtdC00LDRkdGC0YHRjyDQsNC00YDQtdGBINGB0L7Qt9C00LDRgtC10LvRjywg0YLQviDQsdGD0LTQtdGCINGD0LrQsNC30LDQvSDQsNC00YDQtdGBINC+0YLQv9GA0LDQstC40YLQtdC70Y8sINCyINC60L7QvdGG0LUg0LLRi9C30L7QstC10YLRgdGPINGB0L7QsdGL0YLQuNC1IERvY3VtZW50UmVnaXN0ZXJlZA0KICAgINGBINC/0LDRgNCw0LzQtdGC0YDQsNC80LggaWQgLSDQtNC+0LrRg9C80LXQvdGC0LAgKNC/0L7Qt9C40YbQuNGPINCyINC80LDRgdGB0LjQstC1IGRvY3VtZW50cykg0LggaGFzaCAtINGF0Y3RiCDRgdGD0LzQvNCwICovDQogICAgZnVuY3Rpb24gcmVnaXN0ZXJEb2N1bWVudChzdHJpbmcgaGFzaCwNCiAgICAgICAgICAgICAgICAgICAgICAgc3RyaW5nIGxpbmssDQogICAgICAgICAgICAgICAgICAgICAgIHN0cmluZyBkYXRhKSB7DQogICAgICAgIGFkZHJlc3MgY3JlYXRvciA9IG1zZy5zZW5kZXI7DQoNCiAgICAgICAgdWludCBpZCA9IGRvY3VtZW50c0NvdW50ICsgMTsNCiAgICAgICAgZG9jdW1lbnRzSWRzW2lkXSA9IERvY3VtZW50KHsNCiAgICAgICAgICAgaGFzaDogaGFzaCwNCiAgICAgICAgICAgbGluazogbGluaywNCiAgICAgICAgICAgZGF0YTogZGF0YSwNCiAgICAgICAgICAgY3JlYXRvcjogY3JlYXRvciwNCiAgICAgICAgICAgZGF0ZTogbm93LA0KICAgICAgICAgICBzaWduc0NvdW50OiAwDQogICAgICAgIH0pOw0KICAgICAgICBkb2N1bWVudHNDb3VudCA9IGlkOw0KICAgICAgICBEb2N1bWVudFJlZ2lzdGVyZWQoaWQsIGhhc2gpOw0KICAgIH0NCg0KICAgIC8qINGE0YPQvdC60YbQuNGPINC00L7QsdCw0LLQu9C10L3QuNGPINC/0L7QtNC/0LjRgdC4INCyINC00L7QutGD0LzQtdC90YIsINC/0LDRgNCw0LzQtdGC0YDRiyAtIElEINCU0L7QutGD0LzQtdC90YLQsCwg0LDQtNGA0LXRgSDQv9C+0LTQv9C40YHRh9C40LrQsC4NCiAgICDQldGB0LvQuCDQvdC1INC/0LXRgNC10LTQsNGR0YLRgdGPINCw0LTRgNC10YEg0L/QvtC00L/QuNGB0YfQuNC60LAsINGC0L4g0LHRg9C00LXRgiDRg9C60LDQt9Cw0L0g0LDQtNGA0LXRgSDQvtGC0L/RgNCw0LLQuNGC0LXQu9GPLA0KICAgINCyINC60L7QvdGG0LUg0LLRi9C30L7QstC10YLRgdGPINGB0L7QsdGL0YLQuNC1IERvY3VtZW50U2lnbmVkICovDQogICAgZnVuY3Rpb24gYWRkU2lnbmF0dXJlKHVpbnQgaWQpIHsNCiAgICAgICAgYWRkcmVzcyBtZW1iZXIgPSBtc2cuc2VuZGVyOw0KDQogICAgICAgIERvY3VtZW50IGQgPSBkb2N1bWVudHNJZHNbaWRdOw0KICAgICAgICB1aW50IGNvdW50ID0gZC5zaWduc0NvdW50Ow0KICAgICAgICBib29sIHNpZ25lZCA9IGZhbHNlOw0KICAgICAgICBpZiAoY291bnQgIT0gMCkgew0KICAgICAgICAgICAgZm9yICh1aW50IGkgPSAwOyBpIDwgY291bnQ7IGkrKykgew0KICAgICAgICAgICAgICAgIGlmIChkLnNpZ25zW2ldLm1lbWJlciA9PSBtZW1iZXIpIHsNCiAgICAgICAgICAgICAgICAgICAgc2lnbmVkID0gdHJ1ZTsNCiAgICAgICAgICAgICAgICAgICAgYnJlYWs7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQoNCiAgICAgICAgaWYgKCFzaWduZWQpIHsNCiAgICAgICAgICAgIGQuc2lnbnNbY291bnRdID0gU2lnbih7DQogICAgICAgICAgICAgICAgICAgIG1lbWJlcjogbWVtYmVyLA0KICAgICAgICAgICAgICAgICAgICBkYXRlOiBub3cNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIGRvY3VtZW50c0lkc1tpZF0uc2lnbnNDb3VudCA9IGNvdW50ICsgMTsNCiAgICAgICAgICAgIERvY3VtZW50U2lnbmVkKGlkLCBtZW1iZXIpOw0KICAgICAgICB9DQogICAgfQ0KDQogICAgLyog0KTRg9C90LrRhtC40Y8g0L/QvtC70YPRh9C10L3QuNGPINC60L7Qu9C40YfQtdGB0YLQstCwINC00L7QutGD0LzQtdC90YLQvtCyICovDQogICAgZnVuY3Rpb24gZ2V0RG9jdW1lbnRzQ291bnQoKSBjb25zdGFudCByZXR1cm5zICh1aW50KSB7DQogICAgICAgIHJldHVybiBkb2N1bWVudHNDb3VudDsNCiAgICB9DQoNCiAgICAvKiDQpNGD0L3QutGG0LjRjyDQv9C+0LvRg9GH0LXQvdC40Y8g0LTQvtC60YPQvNC10L3RgtCwINC/0L4gSUQgKi8NCiAgICBmdW5jdGlvbiBnZXREb2N1bWVudCh1aW50IGlkKSBjb25zdGFudCByZXR1cm5zIChzdHJpbmcgaGFzaCwNCiAgICAgICAgICAgICAgICAgICAgICAgc3RyaW5nIGxpbmssDQogICAgICAgICAgICAgICAgICAgICAgIHN0cmluZyBkYXRhLA0KICAgICAgICAgICAgICAgICAgICAgICBhZGRyZXNzIGNyZWF0b3IsDQogICAgICAgICAgICAgICAgICAgICAgIHVpbnQgZGF0ZSwNCiAgICAgICAgICAgICAgICAgICAgICAgdWludCBjb3VudCkgew0KICAgICAgICBEb2N1bWVudCBkID0gZG9jdW1lbnRzSWRzW2lkXTsNCiAgICAgICAgaGFzaCA9IGQuaGFzaDsNCiAgICAgICAgbGluayA9IGQubGluazsNCiAgICAgICAgZGF0YSA9IGQuZGF0YTsNCiAgICAgICAgY3JlYXRvciA9IGQuY3JlYXRvcjsNCiAgICAgICAgZGF0ZSA9IGQuZGF0ZTsNCiAgICB9DQoNCiAgICAvKiDQpNGD0L3QutGG0LjRjyDQv9C+0LvRg9GH0LXQvdC40Y8g0LrQvtC70LjRh9C10YHRgtCy0LAg0L/QvtC00L/QuNGB0LXQuSDQv9C+IElEINC00L7QutGD0LzQtdC90YLQsCAqLw0KICAgIGZ1bmN0aW9uIGdldERvY3VtZW50U2lnbnNDb3VudCh1aW50IGlkKSBjb25zdGFudCByZXR1cm5zICh1aW50KSB7DQogICAgICAgIERvY3VtZW50IGQgPSBkb2N1bWVudHNJZHNbaWRdOw0KICAgICAgICByZXR1cm4gZC5zaWduc0NvdW50Ow0KICAgIH0NCg0KICAgIC8qINCk0YPQvdC60YbQuNGPINC/0L7Qu9GD0YfQtdC90LjRjyDQv9C+0LTQv9C40YHQuCDQtNC+0LrRg9C80LXQvdGC0L7Qsiwg0L/QsNGA0LDQvNC10YLRgNGLIC0gSUQg0LTQvtC60YPQvNC10L3RgtCwLCDQv9C+0LfQuNGG0LjRjyDQv9C+0LTQv9C40YHQuCDQsiDQvNCw0YHRgdC40LLQtSAqLw0KICAgIGZ1bmN0aW9uIGdldERvY3VtZW50U2lnbih1aW50IGlkLCB1aW50IGluZGV4KSBjb25zdGFudCByZXR1cm5zICgNCiAgICAgICAgICAgICAgICAgICAgICAgIGFkZHJlc3MgbWVtYmVyLA0KICAgICAgICAgICAgICAgICAgICAgICAgdWludCBkYXRlKSB7DQogICAgICAgIERvY3VtZW50IGQgPSBkb2N1bWVudHNJZHNbaWRdOw0KICAgICAgICBTaWduIHMgPSBkLnNpZ25zW2luZGV4XTsNCiAgICAgICAgbWVtYmVyID0gcy5tZW1iZXI7DQogICAgICAgIGRhdGUgPSBzLmRhdGU7DQoJfQ0KfQ=='