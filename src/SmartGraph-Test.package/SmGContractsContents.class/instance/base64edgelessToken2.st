base 64 content
base64edgelessToken2
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC42Ow0KY29udHJhY3QgdG9rZW5SZWNpcGllbnQgeyBmdW5jdGlvbiByZWNlaXZlQXBwcm92YWwoYWRkcmVzcyBfZnJvbSwgdWludDI1NiBfdmFsdWUsIGFkZHJlc3MgX3Rva2VuLCBieXRlcyBfZXh0cmFEYXRhKTsgfQ0KDQpjb250cmFjdCBFZGdlbGVzc1Rva2VuIHsNCiAgICAvKiBQdWJsaWMgdmFyaWFibGVzIG9mIHRoZSB0b2tlbiAqLw0KICAgIHN0cmluZyBwdWJsaWMgc3RhbmRhcmQgPSAnRVJDMjAnOw0KICAgIHN0cmluZyBwdWJsaWMgbmFtZSA9ICdFZGdlbGVzcyc7DQogICAgc3RyaW5nIHB1YmxpYyBzeW1ib2wgPSAnRURHJzsNCiAgICB1aW50OCBwdWJsaWMgZGVjaW1hbHMgPSAwOw0KICAgIHVpbnQyNTYgcHVibGljIHRvdGFsU3VwcGx5Ow0KICAgIHVpbnQyNTYgcHVibGljIGN1cnJlbnRJbnRlcnZhbCA9IDE7DQogICAgdWludDI1NiBwdWJsaWMgaW50ZXJ2YWxMZW5ndGggPSAzMCBkYXlzOw0KICAgIHVpbnQyNTYgcHVibGljIHN0YXJ0VGltZSA9IDE0OTAxMTIwMDA7Ly9mcm9tIHRoaXMgdGltZSBvbiB0b2tlbnMgbWF5IGJlIHRyYW5zZmVyZWQgKGFmdGVyIElDTykNCiAgICBhZGRyZXNzIHB1YmxpYyBvd25lcjsNCiAgICBib29sIGJ1cm5lZDsvL3RlbGxzIGlmIHRva2VucyBoYXZlIGJlZW4gYnVybmVkIGFscmVhZHkNCg0KICAgIC8qIFRoaXMgY3JlYXRlcyBhbiBhcnJheSB3aXRoIGFsbCBiYWxhbmNlcyAqLw0KICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgcHVibGljIGJhbGFuY2VPZjsNCiAgICBtYXBwaW5nIChhZGRyZXNzID0+IG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikpIHB1YmxpYyBhbGxvd2FuY2U7DQoNCiAgICAvKiBEZWZpbmVzIGhvdyBtYW55IHRva2VucyBvZiB3aGljaCBhZGRyZXNzZXMgYXJlIGxvY2tlZCBpbiB3aGljaCBpbnRlcnZhbCovDQogICAgbWFwcGluZyhhZGRyZXNzID0+IG1hcHBpbmcodWludDI1Nj0+dWludDI1NikpIHB1YmxpYyBsb2NrZWQ7DQoNCiAgICAvKiBUaGlzIGdlbmVyYXRlcyBhIHB1YmxpYyBldmVudCBvbiB0aGUgYmxvY2tjaGFpbiB0aGF0IHdpbGwgbm90aWZ5IGNsaWVudHMgKi8NCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50MjU2IHZhbHVlKTsNCiAgICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBzcGVuZGVyLCB1aW50MjU2IHZhbHVlKTsNCiAgICBldmVudCBMb2NrKGFkZHJlc3MgaW5kZXhlZCBvd25lciwgdWludDI1NiBpbnRlcnZhbCwgdWludDI1NiB2YWx1ZSk7DQoNCiAgICAvKiBJbml0aWFsaXplcyBjb250cmFjdCB3aXRoIGluaXRpYWwgc3VwcGx5IHRva2VucyB0byB0aGUgY3JlYXRvciBvZiB0aGUgY29udHJhY3QgKi8NCiAgICBmdW5jdGlvbiBFZGdlbGVzc1Rva2VuKCkgew0KICAgICAgICBvd25lciA9IDB4MDAzMjMwQkJFNjRlY2NENjZmNjI5MTM2NzlDODk2NkNmOUY0MTE2NjsNCiAgICAgICAgYmFsYW5jZU9mW293bmVyXSA9IDUwMDAwMDAwMDsgICAgICAgICAgICAgIC8vIEdpdmUgdGhlIG93bmVyIGFsbCBpbml0aWFsIHRva2Vucw0KICAgICAgICB0b3RhbFN1cHBseSA9IDUwMDAwMDAwMDsgICAgICAgICAgICAgICAgICAgLy8gVXBkYXRlIHRvdGFsIHN1cHBseQ0KICAgICAgICBmb3IodWludDggaSA9IDE7IGkgPCAxMzsgaSsrKQkJICAgLy8gbG9jayBvd25lcidzIGZpbmFsIHNoYXJlIG9mIHRva2VucyBmb3IgdGhlIGZpcnN0IDEyIG1vbnRocw0KICAgICAgICAJbG9ja2VkW293bmVyXVtpXSA9IDUwMDAwMDAwOw0KICAgIH0NCg0KICAgIC8qIFNlbmQgY29pbnMgKi8NCiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcyl7DQogICAgICAgIGlmIChub3cgPCBzdGFydFRpbWUpIHRocm93OyAvL2NoZWNrIGlmIHRoZSBjcm93ZHNhbGUgaXMgYWxyZWFkeSBvdmVyDQogICAgICAgIGlmIChsb2NrZWRbbXNnLnNlbmRlcl1bZ2V0SW50ZXJ2YWwoKV0gPj0gYmFsYW5jZU9mW21zZy5zZW5kZXJdIHx8IGJhbGFuY2VPZlttc2cuc2VuZGVyXS1sb2NrZWRbbXNnLnNlbmRlcl1bZ2V0SW50ZXJ2YWwoKV0gPCBfdmFsdWUpIHRocm93OyAgIC8vIENoZWNrIGlmIHRoZSBzZW5kZXIgaGFzIGVub3VnaA0KICAgICAgICBpZiAoYmFsYW5jZU9mW190b10gKyBfdmFsdWUgPCBiYWxhbmNlT2ZbX3RvXSkgdGhyb3c7IC8vIENoZWNrIGZvciBvdmVyZmxvd3MNCiAgICAgICAgYmFsYW5jZU9mW21zZy5zZW5kZXJdIC09IF92YWx1ZTsgICAgICAgICAgICAgICAgICAgICAvLyBTdWJ0cmFjdCBmcm9tIHRoZSBzZW5kZXINCiAgICAgICAgYmFsYW5jZU9mW190b10gKz0gX3ZhbHVlOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBBZGQgdGhlIHNhbWUgdG8gdGhlIHJlY2lwaWVudA0KICAgICAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF92YWx1ZSk7ICAgICAgICAgICAgICAgICAgIC8vIE5vdGlmeSBhbnlvbmUgbGlzdGVuaW5nIHRoYXQgdGhpcyB0cmFuc2ZlciB0b29rIHBsYWNlDQogICAgICAgIHJldHVybiB0cnVlOw0KICAgIH0NCg0KICAgIC8qIEFsbG93IGFub3RoZXIgY29udHJhY3QgdG8gc3BlbmQgc29tZSB0b2tlbnMgaW4geW91ciBiZWhhbGYgKi8NCiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsNCiAgICAgICAgYWxsb3dhbmNlW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IF92YWx1ZTsNCiAgICAgICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF92YWx1ZSk7DQogICAgICAgIHJldHVybiB0cnVlOw0KICAgIH0NCg0KICAgIC8qIEFwcHJvdmUgYW5kIHRoZW4gY29tdW5pY2F0ZSB0aGUgYXBwcm92ZWQgY29udHJhY3QgaW4gYSBzaW5nbGUgdHggKi8NCiAgICBmdW5jdGlvbiBhcHByb3ZlQW5kQ2FsbChhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSwgYnl0ZXMgX2V4dHJhRGF0YSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7DQogICAgICAgIHRva2VuUmVjaXBpZW50IHNwZW5kZXIgPSB0b2tlblJlY2lwaWVudChfc3BlbmRlcik7DQogICAgICAgIGlmIChhcHByb3ZlKF9zcGVuZGVyLCBfdmFsdWUpKSB7DQogICAgICAgICAgICBzcGVuZGVyLnJlY2VpdmVBcHByb3ZhbChtc2cuc2VuZGVyLCBfdmFsdWUsIHRoaXMsIF9leHRyYURhdGEpOw0KICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgIH0NCiAgICB9DQoNCiAgICAvKiBBIGNvbnRyYWN0IGF0dGVtcHRzIHRvIGdldCB0aGUgY29pbnMgKi8NCiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsNCiAgICAgICAgaWYgKG5vdyA8IHN0YXJ0VGltZSAmJiBfZnJvbSE9b3duZXIpIHRocm93OyAvL2NoZWNrIGlmIHRoZSBjcm93ZHNhbGUgaXMgYWxyZWFkeSBvdmVyDQogICAgICAgIGlmIChsb2NrZWRbX2Zyb21dW2dldEludGVydmFsKCldID49IGJhbGFuY2VPZltfZnJvbV0gfHwgYmFsYW5jZU9mW19mcm9tXS1sb2NrZWRbX2Zyb21dW2dldEludGVydmFsKCldIDwgX3ZhbHVlKSB0aHJvdzsgICAgIC8vIENoZWNrIGlmIHRoZSBzZW5kZXIgaGFzIGVub3VnaA0KICAgICAgICBpZiAoYmFsYW5jZU9mW190b10gKyBfdmFsdWUgPCBiYWxhbmNlT2ZbX3RvXSkgdGhyb3c7ICAvLyBDaGVjayBmb3Igb3ZlcmZsb3dzDQogICAgICAgIGlmIChfdmFsdWUgPiBhbGxvd2FuY2VbX2Zyb21dW21zZy5zZW5kZXJdKSB0aHJvdzsgICAvLyBDaGVjayBhbGxvd2FuY2UNCiAgICAgICAgYmFsYW5jZU9mW19mcm9tXSAtPSBfdmFsdWU7ICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBTdWJ0cmFjdCBmcm9tIHRoZSBzZW5kZXINCiAgICAgICAgYmFsYW5jZU9mW190b10gKz0gX3ZhbHVlOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBBZGQgdGhlIHNhbWUgdG8gdGhlIHJlY2lwaWVudA0KICAgICAgICBhbGxvd2FuY2VbX2Zyb21dW21zZy5zZW5kZXJdIC09IF92YWx1ZTsNCiAgICAgICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsNCiAgICAgICAgcmV0dXJuIHRydWU7DQogICAgfQ0KDQogICAgLyogTG9jayBhIG51bWJlciBvZiB0b2tlbnMgKi8NCiAgICBmdW5jdGlvbiBsb2NrKGFkZHJlc3MgaG9sZGVyLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7DQogICAgICAgIGlmKGhvbGRlcj09bXNnLnNlbmRlcnx8aG9sZGVyPT10eC5vcmlnaW4pew0KICAgICAgICAgICAgbG9ja2VkW2hvbGRlcl1bZ2V0SW50ZXJ2YWwoKV0rPV92YWx1ZTsNCiAgICAgICAgICAgIExvY2soaG9sZGVyLCBjdXJyZW50SW50ZXJ2YWwsIF92YWx1ZSk7DQogICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIC8qIEluY3JlYXNlIHRoZSBpbnRlcnZhbCwgaWYgc3VmZmljaWVudCB0aW1lIGhhcyBwYXNzZWQgKi8NCiAgICBmdW5jdGlvbiBnZXRJbnRlcnZhbCgpIHJldHVybnMgKHVpbnQyNTYgaW50ZXJ2YWwpew0KICAgICAgICBpZiAobm93ID4gY3VycmVudEludGVydmFsICogaW50ZXJ2YWxMZW5ndGggKyBzdGFydFRpbWUpIHsNCiAgICAgICAgICAgIGN1cnJlbnRJbnRlcnZhbCA9IChub3cgLSBzdGFydFRpbWUpIC8gaW50ZXJ2YWxMZW5ndGggKyAxOw0KICAgICAgICB9DQogICAgICAgIHJldHVybiBjdXJyZW50SW50ZXJ2YWw7DQogICAgfQ0KDQogICAgLyogdG8gYmUgY2FsbGVkIHdoZW4gSUNPIGlzIGNsb3NlZCwgYnVybnMgdGhlIHJlbWFpbmluZyB0b2tlbnMgYnV0IHRoZSBvd25lcnMgc2hhcmUgKDUwIDAwMCAwMDApIGFuZCB0aGUgb25lcyByZXNlcnZlZA0KICAgIGZvciB0aGUgYm91bnR5IHByb2dyYW0gKDEwIDAwMCAwMDApLg0KICAgIGFueWJvZHkgbWF5IGJ1cm4gdGhlIHRva2VucyBhZnRlciBJQ08gZW5kZWQsIGJ1dCBvbmx5IG9uY2UgKGluIGNhc2UgdGhlIG93bmVyIGhvbGRzIG1vcmUgdG9rZW5zIGluIHRoZSBmdXR1cmUpLiAqLw0KICAgIGZ1bmN0aW9uIGJ1cm4oKXsNCiAgICAJLy9pZiB0b2tlbnMgaGF2ZSBub3QgYmVlbiBidXJuZWQgYWxyZWFkeSBhbmQgdGhlIElDTyBlbmRlZA0KICAgIAlpZighYnVybmVkICYmIG5vdz5zdGFydFRpbWUgJiYgYmFsYW5jZU9mW293bmVyXSA+IDYwMDAwMDAwKXsNCiAgICAJCXVpbnQgZGlmZmVyZW5jZSA9IGJhbGFuY2VPZltvd25lcl0gLSA2MDAwMDAwMDsNCiAgICAJCWJhbGFuY2VPZltvd25lcl0gPSA2MDAwMDAwMDsNCiAgICAJCXRvdGFsU3VwcGx5IC09IGRpZmZlcmVuY2U7DQogICAgCQlidXJuZWQgPSB0cnVlOw0KICAgIAl9DQogICAgfQ0KDQp9'