base 64 content
base64eliteToken
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC4xMTsNCg0KY29udHJhY3QgRm9yZWlnblRva2VuIHsNCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpOw0KICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCk7DQp9DQoNCmNvbnRyYWN0IEVsaXRlVG9rZW4geyANCiAgICAvKiBQdWJsaWMgdmFyaWFibGVzIG9mIHRoZSB0b2tlbiAqLw0KICAgIHN0cmluZyBwdWJsaWMgbmFtZTsNCiAgICBzdHJpbmcgcHVibGljIHN5bWJvbDsNCiAgICB1aW50OCBwdWJsaWMgZGVjaW1hbHM7DQogICAgYWRkcmVzcyBvd25lcjsNCiAgICANCiAgICAvKiBUaGlzIGNyZWF0ZXMgYW4gYXJyYXkgd2l0aCBhbGwgYmFsYW5jZXMgKi8NCiAgICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIHB1YmxpYyBiYWxhbmNlT2Y7DQogICAgDQogICAgLyogVGhpcyBnZW5lcmF0ZXMgYSBwdWJsaWMgZXZlbnQgb24gdGhlIGJsb2NrY2hhaW4gdGhhdCB3aWxsIG5vdGlmeSBjbGllbnRzICovDQogICAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIGZyb20sIGFkZHJlc3MgaW5kZXhlZCB0bywgdWludDI1NiB2YWx1ZSk7DQogICAgDQogICAgLyogSW5pdGlhbGl6ZXMgY29udHJhY3Qgd2l0aCBpbml0aWFsIHN1cHBseSB0b2tlbnMgdG8gdGhlIGNyZWF0b3Igb2YgdGhlIGNvbnRyYWN0ICovDQogICAgZnVuY3Rpb24gRWxpdGVUb2tlbigpIHsNCiAgICAgICAgLyogVW5sZXNzIHlvdSBhZGQgb3RoZXIgZnVuY3Rpb25zIHRoZXNlIHZhcmlhYmxlcyB3aWxsIG5ldmVyIGNoYW5nZSAqLw0KICAgICAgICBiYWxhbmNlT2ZbdGhpc10gPSAxMDA7DQogICAgICAgIG5hbWUgPSAiRWxpdGVUb2tlbiI7ICAgICANCiAgICAgICAgc3ltYm9sID0gIkVMVCI7DQogICAgICAgIG93bmVyID0gbXNnLnNlbmRlcjsNCiAgICAgICAgDQogICAgICAgIC8qIElmIHlvdSB3YW50IGEgZGl2aXNpYmxlIHRva2VuIHRoZW4gYWRkIHRoZSBhbW91bnQgb2YgZGVjaW1hbHMgdGhlIGJhc2UgdW5pdCBoYXMgICovDQogICAgICAgIGRlY2ltYWxzID0gMDsNCiAgICB9DQoNCiAgICAvKiBTZW5kIGNvaW5zICovDQogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSB7DQogICAgICAgIC8qIGlmIHRoZSBzZW5kZXIgZG9lbnN0IGhhdmUgZW5vdWdoIGJhbGFuY2UgdGhlbiBzdG9wICovDQogICAgICAgIGlmIChiYWxhbmNlT2ZbbXNnLnNlbmRlcl0gPCBfdmFsdWUpIHRocm93Ow0KICAgICAgICBpZiAoYmFsYW5jZU9mW190b10gKyBfdmFsdWUgPCBiYWxhbmNlT2ZbX3RvXSkgdGhyb3c7DQogICAgICAgIA0KICAgICAgICAvKiBBZGQgYW5kIHN1YnRyYWN0IG5ldyBiYWxhbmNlcyAqLw0KICAgICAgICBiYWxhbmNlT2ZbbXNnLnNlbmRlcl0gLT0gX3ZhbHVlOw0KICAgICAgICBiYWxhbmNlT2ZbX3RvXSArPSBfdmFsdWU7DQogICAgICAgIA0KICAgICAgICAvKiBOb3RpZml5IGFueW9uZSBsaXN0ZW5pbmcgdGhhdCB0aGlzIHRyYW5zZmVyIHRvb2sgcGxhY2UgKi8NCiAgICAgICAgVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOw0KICAgIH0NCiAgICANCiAgICAvKiBCdXkgY29pbnMgKi8NCiAgICBmdW5jdGlvbigpIHBheWFibGUgew0KICAgICAgICBpZiAobXNnLnZhbHVlID09IDApIHsgcmV0dXJuOyB9DQogICAgICAgIG93bmVyLnRyYW5zZmVyKG1zZy52YWx1ZSk7DQogICAgICAgIHVpbnQyNTYgYW1vdW50ID0gbXNnLnZhbHVlIC8gMTAwMDAwMDAwMDAwMDAwMDAwMDsgIC8vIGNhbGN1bGF0ZXMgdGhlIGFtb3VudA0KICAgICAgICBpZiAoYmFsYW5jZU9mW3RoaXNdIDwgYW1vdW50KSB0aHJvdzsgICAgICAgICAgICAgICAvLyBjaGVja3MgaWYgaXQgaGFzIGVub3VnaCB0byBzZWxsDQogICAgICAgIGJhbGFuY2VPZlttc2cuc2VuZGVyXSArPSBhbW91bnQ7ICAgICAgICAgICAgICAgICAgIC8vIGFkZHMgdGhlIGFtb3VudCB0byBidXllcidzIGJhbGFuY2UNCiAgICAgICAgYmFsYW5jZU9mW3RoaXNdIC09IGFtb3VudDsgICAgICAgICAgICAgICAgICAgICAgICAgLy8gc3VidHJhY3RzIGFtb3VudCBmcm9tIHNlbGxlcidzIGJhbGFuY2UNCiAgICAgICAgVHJhbnNmZXIodGhpcywgbXNnLnNlbmRlciwgYW1vdW50KTsgICAgICAgICAgICAgICAgLy8gZXhlY3V0ZSBhbiBldmVudCByZWZsZWN0aW5nIHRoZSBjaGFuZ2UNCiAgICB9DQogICAgDQogICAgLyogV2l0aGRyYXcgZm9yZWlnbiovDQogICAgZnVuY3Rpb24gV2l0aGRyYXdGb3JlaWduKGFkZHJlc3MgX3Rva2VuQ29udHJhY3QpIHJldHVybnMgKGJvb2wpIHsNCiAgICAgICAgaWYgKG1zZy5zZW5kZXIgIT0gb3duZXIpIHsgdGhyb3c7IH0NCg0KICAgICAgICBGb3JlaWduVG9rZW4gdG9rZW4gPSBGb3JlaWduVG9rZW4oX3Rva2VuQ29udHJhY3QpOw0KDQogICAgICAgIHVpbnQyNTYgYW1vdW50ID0gdG9rZW4uYmFsYW5jZU9mKGFkZHJlc3ModGhpcykpOw0KICAgICAgICByZXR1cm4gdG9rZW4udHJhbnNmZXIob3duZXIsIGFtb3VudCk7DQogICAgfQ0KfQ=='