base 64 content
base64etheramid2
	^'Y29udHJhY3QgRXRoZXJhbWlkMXsNCglmdW5jdGlvbiBnZXRQYXJ0aWNpcGFudEJ5SWQgKHVpbnQgaWQpIGNvbnN0YW50IHB1YmxpYyByZXR1cm5zICggYWRkcmVzcyBpbnZpdGVyLCBhZGRyZXNzIGl0c2VsZiwgdWludCB0b3RhbFBheW91dCApOw0KCWZ1bmN0aW9uIGdldFBhcnRpY2lwYW50Q291bnQgKCkgcHVibGljIGNvbnN0YW50IHJldHVybnMgKCB1aW50IGNvdW50ICk7DQp9DQpjb250cmFjdCBFdGhlcmFtaWQyIHsNCg0KICAgIHN0cnVjdCBQYXJ0aWNpcGFudCB7DQogICAgICAgIGFkZHJlc3MgaW52aXRlcjsNCiAgICAgICAgYWRkcmVzcyBpdHNlbGY7DQogICAgICAgIHVpbnQgdG90YWxQYXlvdXQ7DQogICAgfQ0KICAgIA0KICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gUGFydGljaXBhbnQpIFRyZWU7DQogICAgbWFwcGluZyAodWludCA9PiBhZGRyZXNzKSBJbmRleDsNCgkNCgl1aW50IENvdW50ID0gMDsNCiAgICBhZGRyZXNzIHB1YmxpYyB0b3A7DQogICAgdWludCBjb25zdGFudCBjb250cmlidXRpb24gPSAxIGV0aGVyOw0KCQ0KIAlFdGhlcmFtaWQxIGV0aDEgPSBFdGhlcmFtaWQxKDB4OTc1OERBOUI0RDAwMUVkMmQwREY0NmQyNTA2OUVkZjUzNzUwNzY3YSk7DQoJdWludCBvbGRVc2VyQ291bnQgPSBldGgxLmdldFBhcnRpY2lwYW50Q291bnQoKTsNCgkNCiAgICBmdW5jdGlvbiBFdGhlcmFtaWQyKCkgew0KCQltb3ZlT2xkVXNlcigwKTsNCgkJdG9wID0gSW5kZXhbMF07DQogICAgfQ0KICAgIA0KICAgIGZ1bmN0aW9uKCkgew0KCQl0aHJvdzsNCiAgICB9DQogICAgDQoJZnVuY3Rpb24gbW92ZU9sZFVzZXIgKHVpbnQgaWQpIHB1YmxpYyB7DQoJCWFkZHJlc3MgaW52aXRlcjsgDQoJCWFkZHJlc3MgaXRzZWxmOyANCgkJdWludCB0b3RhbFBheW91dDsNCgkJKGludml0ZXIsIGl0c2VsZiwgdG90YWxQYXlvdXQpID0gZXRoMS5nZXRQYXJ0aWNpcGFudEJ5SWQoaWQpOw0KCQlpZiAoKFRyZWVbaXRzZWxmXS5pbnZpdGVyICE9IDB4MCkgfHwgKGlkID49IG9sZFVzZXJDb3VudCkpIHRocm93Ow0KCQlhZGRQYXJ0aWNpcGFudChpbnZpdGVyLCBpdHNlbGYsIHRvdGFsUGF5b3V0KTsNCgl9DQoJDQogICAgZnVuY3Rpb24gZ2V0UGFydGljaXBhbnRCeUlkICh1aW50IGlkKSBjb25zdGFudCBwdWJsaWMgcmV0dXJucyAoIGFkZHJlc3MgaW52aXRlciwgYWRkcmVzcyBpdHNlbGYsIHVpbnQgdG90YWxQYXlvdXQgKXsNCgkJaWYgKGlkID49IENvdW50KSB0aHJvdzsNCgkJYWRkcmVzcyBpZGEgPSBJbmRleFtpZF07DQogICAgICAgIGludml0ZXIgPSBUcmVlW2lkYV0uaW52aXRlcjsNCiAgICAgICAgaXRzZWxmID0gVHJlZVtpZGFdLml0c2VsZjsNCiAgICAgICAgdG90YWxQYXlvdXQgPSBUcmVlW2lkYV0udG90YWxQYXlvdXQ7DQogICAgfQ0KCQ0KCWZ1bmN0aW9uIGdldFBhcnRpY2lwYW50QnlBZGRyZXNzIChhZGRyZXNzIGFkcikgY29uc3RhbnQgcHVibGljIHJldHVybnMgKCBhZGRyZXNzIGludml0ZXIsIGFkZHJlc3MgaXRzZWxmLCB1aW50IHRvdGFsUGF5b3V0ICl7DQoJCWlmIChUcmVlW2Fkcl0uaXRzZWxmID09IDB4MCkgdGhyb3c7DQogICAgICAgIGludml0ZXIgPSBUcmVlW2Fkcl0uaW52aXRlcjsNCiAgICAgICAgaXRzZWxmID0gVHJlZVthZHJdLml0c2VsZjsNCiAgICAgICAgdG90YWxQYXlvdXQgPSBUcmVlW2Fkcl0udG90YWxQYXlvdXQ7DQogICAgfQ0KICAgIA0KICAgIGZ1bmN0aW9uIGFkZFBhcnRpY2lwYW50KGFkZHJlc3MgaW52aXRlciwgYWRkcmVzcyBpdHNlbGYsIHVpbnQgdG90YWxQYXlvdXQpIHByaXZhdGV7DQogICAgICAgIEluZGV4W0NvdW50XSA9IGl0c2VsZjsNCgkJVHJlZVtpdHNlbGZdID0gUGFydGljaXBhbnQoIHtpdHNlbGY6IGl0c2VsZiwgaW52aXRlcjogaW52aXRlciwgdG90YWxQYXlvdXQ6IHRvdGFsUGF5b3V0fSk7DQogICAgICAgIENvdW50ICs9MTsNCiAgICB9DQogICAgDQogICAgZnVuY3Rpb24gZ2V0UGFydGljaXBhbnRDb3VudCAoKSBwdWJsaWMgY29uc3RhbnQgcmV0dXJucyAoIHVpbnQgY291bnQgKXsNCiAgICAgICBjb3VudCA9IENvdW50Ow0KICAgIH0NCiAgICANCiAgICBmdW5jdGlvbiBlbnRlcihhZGRyZXNzIGludml0ZXIpIHB1YmxpYyB7DQogICAgICAgIHVpbnQgYW1vdW50ID0gbXNnLnZhbHVlOw0KICAgICAgICBpZiAoKGFtb3VudCA8IGNvbnRyaWJ1dGlvbikgfHwgKFRyZWVbbXNnLnNlbmRlcl0uaW52aXRlciAhPSAweDApIHx8IChUcmVlW2ludml0ZXJdLmludml0ZXIgPT0gMHgwKSkgew0KICAgICAgICAgICAgbXNnLnNlbmRlci5zZW5kKG1zZy52YWx1ZSk7DQogICAgICAgICAgICB0aHJvdzsNCiAgICAgICAgfQ0KICAgICAgICANCiAgICAgICAgYWRkUGFydGljaXBhbnQoaW52aXRlciwgbXNnLnNlbmRlciwgMCk7DQogICAgICAgIGFkZHJlc3MgbmV4dCA9IGludml0ZXI7DQogICAgICAgIHVpbnQgcmVzdCA9IGFtb3VudDsNCiAgICAgICAgdWludCBsZXZlbCA9IDE7DQogICAgICAgIHdoaWxlICggKG5leHQgIT0gdG9wKSAmJiAobGV2ZWwgPCA3KSApew0KICAgICAgICAgICAgdWludCB0b1NlbmQgPSByZXN0LzI7DQogICAgICAgICAgICBuZXh0LnNlbmQodG9TZW5kKTsNCiAgICAgICAgICAgIFRyZWVbbmV4dF0udG90YWxQYXlvdXQgKz0gdG9TZW5kOw0KICAgICAgICAgICAgcmVzdCAtPSB0b1NlbmQ7DQogICAgICAgICAgICBuZXh0ID0gVHJlZVtuZXh0XS5pbnZpdGVyOw0KICAgICAgICAgICAgbGV2ZWwrKzsNCiAgICAgICAgfQ0KICAgICAgICBuZXh0LnNlbmQocmVzdCk7DQoJCVRyZWVbbmV4dF0udG90YWxQYXlvdXQgKz0gcmVzdDsNCiAgICB9DQp9'