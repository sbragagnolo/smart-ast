base 64 content
base64expiringMarket2
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC4yOw0KDQovLyBUb2tlbiBzdGFuZGFyZCBBUEkNCi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bS9FSVBzL2lzc3Vlcy8yMA0KY29udHJhY3QgRVJDMjBDb25zdGFudCB7DQogICAgZnVuY3Rpb24gdG90YWxTdXBwbHkoKSBjb25zdGFudCByZXR1cm5zICh1aW50IHN1cHBseSk7DQogICAgZnVuY3Rpb24gYmFsYW5jZU9mKCBhZGRyZXNzIHdobyApIGNvbnN0YW50IHJldHVybnMgKHVpbnQgdmFsdWUpOw0KICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIG93bmVyLCBhZGRyZXNzIHNwZW5kZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQgX2FsbG93YW5jZSk7DQp9DQpjb250cmFjdCBFUkMyMFN0YXRlZnVsIHsNCiAgICBmdW5jdGlvbiB0cmFuc2ZlciggYWRkcmVzcyB0bywgdWludCB2YWx1ZSkgcmV0dXJucyAoYm9vbCBvayk7DQogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKCBhZGRyZXNzIGZyb20sIGFkZHJlc3MgdG8sIHVpbnQgdmFsdWUpIHJldHVybnMgKGJvb2wgb2spOw0KICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBzcGVuZGVyLCB1aW50IHZhbHVlKSByZXR1cm5zIChib29sIG9rKTsNCn0NCmNvbnRyYWN0IEVSQzIwRXZlbnRzIHsNCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50IHZhbHVlKTsNCiAgICBldmVudCBBcHByb3ZhbCggYWRkcmVzcyBpbmRleGVkIG93bmVyLCBhZGRyZXNzIGluZGV4ZWQgc3BlbmRlciwgdWludCB2YWx1ZSk7DQp9DQpjb250cmFjdCBFUkMyMCBpcyBFUkMyMENvbnN0YW50LCBFUkMyMFN0YXRlZnVsLCBFUkMyMEV2ZW50cyB7fQ0KDQpjb250cmFjdCBBc3NlcnRpdmUgew0KICAgIGZ1bmN0aW9uIGFzc2VydChib29sIGFzc2VydGlvbikgaW50ZXJuYWwgew0KICAgICAgICBpZiAoIWFzc2VydGlvbikgdGhyb3c7DQogICAgfQ0KfQ0KDQpjb250cmFjdCBGYWxsYmFja0ZhaWxlciB7DQogIGZ1bmN0aW9uICgpIHsNCiAgICB0aHJvdzsNCiAgfQ0KfQ0KDQpjb250cmFjdCBNdXRleFVzZXIgew0KICAgIGJvb2wgcHJpdmF0ZSBsb2NrOw0KICAgIG1vZGlmaWVyIGV4Y2x1c2l2ZSB7DQogICAgICAgIGlmIChsb2NrKSB0aHJvdzsNCiAgICAgICAgbG9jayA9IHRydWU7DQogICAgICAgIF87DQogICAgICAgIGxvY2sgPSBmYWxzZTsNCiAgICB9DQp9DQoNCi8vIEEgc2ltcGxlIGRpcmVjdCBleGNoYW5nZSBvcmRlciBtYW5hZ2VyLg0KDQpjb250cmFjdCBFdmVudGZ1bE1hcmtldCB7DQogICAgZXZlbnQgSXRlbVVwZGF0ZSggdWludCBpZCApOw0KICAgIGV2ZW50IFRyYWRlKCB1aW50IHNlbGxfaG93X211Y2gsIGFkZHJlc3MgaW5kZXhlZCBzZWxsX3doaWNoX3Rva2VuLA0KICAgICAgICAgICAgICAgICB1aW50IGJ1eV9ob3dfbXVjaCwgYWRkcmVzcyBpbmRleGVkIGJ1eV93aGljaF90b2tlbiApOw0KfQ0KDQpjb250cmFjdCBTaW1wbGVNYXJrZXQgaXMgRXZlbnRmdWxNYXJrZXQNCiAgICAgICAgICAgICAgICAgICAgICAgLCBBc3NlcnRpdmUNCiAgICAgICAgICAgICAgICAgICAgICAgLCBGYWxsYmFja0ZhaWxlcg0KICAgICAgICAgICAgICAgICAgICAgICAsIE11dGV4VXNlcg0Kew0KICAgIHN0cnVjdCBPZmZlckluZm8gew0KICAgICAgICB1aW50IHNlbGxfaG93X211Y2g7DQogICAgICAgIEVSQzIwIHNlbGxfd2hpY2hfdG9rZW47DQogICAgICAgIHVpbnQgYnV5X2hvd19tdWNoOw0KICAgICAgICBFUkMyMCBidXlfd2hpY2hfdG9rZW47DQogICAgICAgIGFkZHJlc3Mgb3duZXI7DQogICAgICAgIGJvb2wgYWN0aXZlOw0KICAgIH0NCiAgICBtYXBwaW5nKCB1aW50ID0+IE9mZmVySW5mbyApIHB1YmxpYyBvZmZlcnM7DQoNCiAgICB1aW50IHB1YmxpYyBsYXN0X29mZmVyX2lkOw0KDQogICAgZnVuY3Rpb24gbmV4dF9pZCgpIGludGVybmFsIHJldHVybnMgKHVpbnQpIHsNCiAgICAgICAgbGFzdF9vZmZlcl9pZCsrOyByZXR1cm4gbGFzdF9vZmZlcl9pZDsNCiAgICB9DQoNCiAgICBtb2RpZmllciBjYW5fb2ZmZXIgew0KICAgICAgICBfOw0KICAgIH0NCiAgICBtb2RpZmllciBjYW5fYnV5KHVpbnQgaWQpIHsNCiAgICAgICAgYXNzZXJ0KGlzQWN0aXZlKGlkKSk7DQogICAgICAgIF87DQogICAgfQ0KICAgIG1vZGlmaWVyIGNhbl9jYW5jZWwodWludCBpZCkgew0KICAgICAgICBhc3NlcnQoaXNBY3RpdmUoaWQpKTsNCiAgICAgICAgYXNzZXJ0KGdldE93bmVyKGlkKSA9PSBtc2cuc2VuZGVyKTsNCiAgICAgICAgXzsNCiAgICB9DQogICAgZnVuY3Rpb24gaXNBY3RpdmUodWludCBpZCkgY29uc3RhbnQgcmV0dXJucyAoYm9vbCBhY3RpdmUpIHsNCiAgICAgICAgcmV0dXJuIG9mZmVyc1tpZF0uYWN0aXZlOw0KICAgIH0NCiAgICBmdW5jdGlvbiBnZXRPd25lcih1aW50IGlkKSBjb25zdGFudCByZXR1cm5zIChhZGRyZXNzIG93bmVyKSB7DQogICAgICAgIHJldHVybiBvZmZlcnNbaWRdLm93bmVyOw0KICAgIH0NCiAgICBmdW5jdGlvbiBnZXRPZmZlciggdWludCBpZCApIGNvbnN0YW50IHJldHVybnMgKHVpbnQsIEVSQzIwLCB1aW50LCBFUkMyMCkgew0KICAgICAgdmFyIG9mZmVyID0gb2ZmZXJzW2lkXTsNCiAgICAgIHJldHVybiAob2ZmZXIuc2VsbF9ob3dfbXVjaCwgb2ZmZXIuc2VsbF93aGljaF90b2tlbiwNCiAgICAgICAgICAgICAgb2ZmZXIuYnV5X2hvd19tdWNoLCBvZmZlci5idXlfd2hpY2hfdG9rZW4pOw0KICAgIH0NCg0KICAgIC8vIG5vbiB1bmRlcmZsb3dpbmcgc3VidHJhY3Rpb24NCiAgICBmdW5jdGlvbiBzYWZlU3ViKHVpbnQgYSwgdWludCBiKSBpbnRlcm5hbCByZXR1cm5zICh1aW50KSB7DQogICAgICAgIGFzc2VydChiIDw9IGEpOw0KICAgICAgICByZXR1cm4gYSAtIGI7DQogICAgfQ0KICAgIC8vIG5vbiBvdmVyZmxvd2luZyBtdWx0aXBsaWNhdGlvbg0KICAgIGZ1bmN0aW9uIHNhZmVNdWwodWludCBhLCB1aW50IGIpIGludGVybmFsIHJldHVybnMgKHVpbnQgYykgew0KICAgICAgICBjID0gYSAqIGI7DQogICAgICAgIGFzc2VydChhID09IDAgfHwgYyAvIGEgPT0gYik7DQogICAgfQ0KDQogICAgZnVuY3Rpb24gdHJhZGUoIGFkZHJlc3Mgc2VsbGVyLCB1aW50IHNlbGxfaG93X211Y2gsIEVSQzIwIHNlbGxfd2hpY2hfdG9rZW4sDQogICAgICAgICAgICAgICAgICAgIGFkZHJlc3MgYnV5ZXIsICB1aW50IGJ1eV9ob3dfbXVjaCwgIEVSQzIwIGJ1eV93aGljaF90b2tlbiApDQogICAgICAgIGludGVybmFsDQogICAgew0KICAgICAgICB2YXIgc2VsbGVyX3BhaWRfb3V0ID0gYnV5X3doaWNoX3Rva2VuLnRyYW5zZmVyRnJvbSggYnV5ZXIsIHNlbGxlciwgYnV5X2hvd19tdWNoICk7DQogICAgICAgIGFzc2VydChzZWxsZXJfcGFpZF9vdXQpOw0KICAgICAgICB2YXIgYnV5ZXJfcGFpZF9vdXQgPSBzZWxsX3doaWNoX3Rva2VuLnRyYW5zZmVyKCBidXllciwgc2VsbF9ob3dfbXVjaCApOw0KICAgICAgICBhc3NlcnQoYnV5ZXJfcGFpZF9vdXQpOw0KICAgICAgICBUcmFkZSggc2VsbF9ob3dfbXVjaCwgc2VsbF93aGljaF90b2tlbiwgYnV5X2hvd19tdWNoLCBidXlfd2hpY2hfdG9rZW4gKTsNCiAgICB9DQoNCiAgICAvLyAtLS0tIFB1YmxpYyBlbnRyeXBvaW50cyAtLS0tIC8vDQoNCiAgICAvLyBNYWtlIGEgbmV3IG9mZmVyLiBUYWtlcyBmdW5kcyBmcm9tIHRoZSBjYWxsZXIgaW50byBtYXJrZXQgZXNjcm93Lg0KICAgIGZ1bmN0aW9uIG9mZmVyKCB1aW50IHNlbGxfaG93X211Y2gsIEVSQzIwIHNlbGxfd2hpY2hfdG9rZW4NCiAgICAgICAgICAgICAgICAgICwgdWludCBidXlfaG93X211Y2gsICBFUkMyMCBidXlfd2hpY2hfdG9rZW4gKQ0KICAgICAgICBjYW5fb2ZmZXINCiAgICAgICAgZXhjbHVzaXZlDQogICAgICAgIHJldHVybnMgKHVpbnQgaWQpDQogICAgew0KICAgICAgICBhc3NlcnQoc2VsbF9ob3dfbXVjaCA+IDApOw0KICAgICAgICBhc3NlcnQoc2VsbF93aGljaF90b2tlbiAhPSBFUkMyMCgweDApKTsNCiAgICAgICAgYXNzZXJ0KGJ1eV9ob3dfbXVjaCA+IDApOw0KICAgICAgICBhc3NlcnQoYnV5X3doaWNoX3Rva2VuICE9IEVSQzIwKDB4MCkpOw0KICAgICAgICBhc3NlcnQoc2VsbF93aGljaF90b2tlbiAhPSBidXlfd2hpY2hfdG9rZW4pOw0KDQogICAgICAgIE9mZmVySW5mbyBtZW1vcnkgaW5mbzsNCiAgICAgICAgaW5mby5zZWxsX2hvd19tdWNoID0gc2VsbF9ob3dfbXVjaDsNCiAgICAgICAgaW5mby5zZWxsX3doaWNoX3Rva2VuID0gc2VsbF93aGljaF90b2tlbjsNCiAgICAgICAgaW5mby5idXlfaG93X211Y2ggPSBidXlfaG93X211Y2g7DQogICAgICAgIGluZm8uYnV5X3doaWNoX3Rva2VuID0gYnV5X3doaWNoX3Rva2VuOw0KICAgICAgICBpbmZvLm93bmVyID0gbXNnLnNlbmRlcjsNCiAgICAgICAgaW5mby5hY3RpdmUgPSB0cnVlOw0KICAgICAgICBpZCA9IG5leHRfaWQoKTsNCiAgICAgICAgb2ZmZXJzW2lkXSA9IGluZm87DQoNCiAgICAgICAgdmFyIHNlbGxlcl9wYWlkID0gc2VsbF93aGljaF90b2tlbi50cmFuc2ZlckZyb20oIG1zZy5zZW5kZXIsIHRoaXMsIHNlbGxfaG93X211Y2ggKTsNCiAgICAgICAgYXNzZXJ0KHNlbGxlcl9wYWlkKTsNCg0KICAgICAgICBJdGVtVXBkYXRlKGlkKTsNCiAgICB9DQogICAgLy8gQWNjZXB0IGdpdmVuIGBxdWFudGl0eWAgb2YgYW4gb2ZmZXIuIFRyYW5zZmVycyBmdW5kcyBmcm9tIGNhbGxlciB0bw0KICAgIC8vIG9mZmVyIG1ha2VyLCBhbmQgZnJvbSBtYXJrZXQgdG8gY2FsbGVyLg0KICAgIGZ1bmN0aW9uIGJ1eSggdWludCBpZCwgdWludCBxdWFudGl0eSApDQogICAgICAgIGNhbl9idXkoaWQpDQogICAgICAgIGV4Y2x1c2l2ZQ0KICAgICAgICByZXR1cm5zICggYm9vbCBzdWNjZXNzICkNCiAgICB7DQogICAgICAgIC8vIHJlYWQtb25seSBvZmZlci4gTW9kaWZ5IGFuIG9mZmVyIGJ5IGRpcmVjdGx5IGFjY2Vzc2luZyBvZmZlcnNbaWRdDQogICAgICAgIE9mZmVySW5mbyBtZW1vcnkgb2ZmZXIgPSBvZmZlcnNbaWRdOw0KDQogICAgICAgIC8vIGluZmVycmVkIHF1YW50aXR5IHRoYXQgdGhlIGJ1eWVyIHdpc2hlcyB0byBzcGVuZA0KICAgICAgICB1aW50IHNwZW5kID0gc2FmZU11bChxdWFudGl0eSwgb2ZmZXIuYnV5X2hvd19tdWNoKSAvIG9mZmVyLnNlbGxfaG93X211Y2g7DQoNCiAgICAgICAgaWYgKCBzcGVuZCA+IG9mZmVyLmJ1eV9ob3dfbXVjaCB8fCBxdWFudGl0eSA+IG9mZmVyLnNlbGxfaG93X211Y2ggKSB7DQogICAgICAgICAgICAvLyBidXllciB3YW50cyBtb3JlIHRoYW4gaXMgYXZhaWxhYmxlDQogICAgICAgICAgICBzdWNjZXNzID0gZmFsc2U7DQogICAgICAgIH0gZWxzZSBpZiAoIHNwZW5kID09IG9mZmVyLmJ1eV9ob3dfbXVjaCAmJiBxdWFudGl0eSA9PSBvZmZlci5zZWxsX2hvd19tdWNoICkgew0KICAgICAgICAgICAgLy8gYnV5ZXIgd2FudHMgZXhhY3RseSB3aGF0IGlzIGF2YWlsYWJsZQ0KICAgICAgICAgICAgZGVsZXRlIG9mZmVyc1tpZF07DQoNCiAgICAgICAgICAgIHRyYWRlKCBvZmZlci5vd25lciwgcXVhbnRpdHksIG9mZmVyLnNlbGxfd2hpY2hfdG9rZW4sDQogICAgICAgICAgICAgICAgICAgbXNnLnNlbmRlciwgc3BlbmQsIG9mZmVyLmJ1eV93aGljaF90b2tlbiApOw0KDQogICAgICAgICAgICBJdGVtVXBkYXRlKGlkKTsNCiAgICAgICAgICAgIHN1Y2Nlc3MgPSB0cnVlOw0KICAgICAgICB9IGVsc2UgaWYgKCBzcGVuZCA+IDAgJiYgcXVhbnRpdHkgPiAwICkgew0KICAgICAgICAgICAgLy8gYnV5ZXIgd2FudHMgYSBmcmFjdGlvbiBvZiB3aGF0IGlzIGF2YWlsYWJsZQ0KICAgICAgICAgICAgb2ZmZXJzW2lkXS5zZWxsX2hvd19tdWNoID0gc2FmZVN1YihvZmZlci5zZWxsX2hvd19tdWNoLCBxdWFudGl0eSk7DQogICAgICAgICAgICBvZmZlcnNbaWRdLmJ1eV9ob3dfbXVjaCA9IHNhZmVTdWIob2ZmZXIuYnV5X2hvd19tdWNoLCBzcGVuZCk7DQoNCiAgICAgICAgICAgIHRyYWRlKCBvZmZlci5vd25lciwgcXVhbnRpdHksIG9mZmVyLnNlbGxfd2hpY2hfdG9rZW4sDQogICAgICAgICAgICAgICAgICAgIG1zZy5zZW5kZXIsIHNwZW5kLCBvZmZlci5idXlfd2hpY2hfdG9rZW4gKTsNCg0KICAgICAgICAgICAgSXRlbVVwZGF0ZShpZCk7DQogICAgICAgICAgICBzdWNjZXNzID0gdHJ1ZTsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIC8vIGJ1eWVyIHdhbnRzIGFuIHVuc2F0aXNmaWFibGUgYW1vdW50IChsZXNzIHRoYW4gMSBpbnRlZ2VyKQ0KICAgICAgICAgICAgc3VjY2VzcyA9IGZhbHNlOw0KICAgICAgICB9DQogICAgfQ0KICAgIC8vIENhbmNlbCBhbiBvZmZlci4gUmVmdW5kcyBvZmZlciBtYWtlci4NCiAgICBmdW5jdGlvbiBjYW5jZWwoIHVpbnQgaWQgKQ0KICAgICAgICBjYW5fY2FuY2VsKGlkKQ0KICAgICAgICBleGNsdXNpdmUNCiAgICAgICAgcmV0dXJucyAoIGJvb2wgc3VjY2VzcyApDQogICAgew0KICAgICAgICAvLyByZWFkLW9ubHkgb2ZmZXIuIE1vZGlmeSBhbiBvZmZlciBieSBkaXJlY3RseSBhY2Nlc3Npbmcgb2ZmZXJzW2lkXQ0KICAgICAgICBPZmZlckluZm8gbWVtb3J5IG9mZmVyID0gb2ZmZXJzW2lkXTsNCiAgICAgICAgZGVsZXRlIG9mZmVyc1tpZF07DQoNCiAgICAgICAgdmFyIHNlbGxlcl9yZWZ1bmRlZCA9IG9mZmVyLnNlbGxfd2hpY2hfdG9rZW4udHJhbnNmZXIoIG9mZmVyLm93bmVyICwgb2ZmZXIuc2VsbF9ob3dfbXVjaCApOw0KICAgICAgICBhc3NlcnQoc2VsbGVyX3JlZnVuZGVkKTsNCg0KICAgICAgICBJdGVtVXBkYXRlKGlkKTsNCiAgICAgICAgc3VjY2VzcyA9IHRydWU7DQogICAgfQ0KfQ0KDQovLyBTaW1wbGUgTWFya2V0IHdpdGggYSBtYXJrZXQgbGlmZXRpbWUuIFdoZW4gdGhlIGxpZmV0aW1lIGhhcyBlbGFwc2VkLA0KLy8gb2ZmZXJzIGNhbiBvbmx5IGJlIGNhbmNlbGxlZCAob2ZmZXIgYW5kIGJ1eSB3aWxsIHRocm93KS4NCg0KY29udHJhY3QgRXhwaXJpbmdNYXJrZXQgaXMgU2ltcGxlTWFya2V0IHsNCiAgICB1aW50IHB1YmxpYyBjbG9zZV90aW1lOw0KICAgIGZ1bmN0aW9uIEV4cGlyaW5nTWFya2V0KHVpbnQgbGlmZXRpbWUpIHsNCiAgICAgICAgY2xvc2VfdGltZSA9IGdldFRpbWUoKSArIGxpZmV0aW1lOw0KICAgIH0NCiAgICBmdW5jdGlvbiBnZXRUaW1lKCkgY29uc3RhbnQgcmV0dXJucyAodWludCkgew0KICAgICAgICByZXR1cm4gYmxvY2sudGltZXN0YW1wOw0KICAgIH0NCiAgICBmdW5jdGlvbiBpc0Nsb3NlZCgpIGNvbnN0YW50IHJldHVybnMgKGJvb2wgY2xvc2VkKSB7DQogICAgICAgIHJldHVybiAoZ2V0VGltZSgpID4gY2xvc2VfdGltZSk7DQogICAgfQ0KDQogICAgLy8gYWZ0ZXIgbWFya2V0IGxpZmV0aW1lIGhhcyBlbGFwc2VkLCBubyBuZXcgb2ZmZXJzIGFyZSBhbGxvd2VkDQogICAgbW9kaWZpZXIgY2FuX29mZmVyIHsNCiAgICAgICAgYXNzZXJ0KCFpc0Nsb3NlZCgpKTsNCiAgICAgICAgXzsNCiAgICB9DQogICAgLy8gYWZ0ZXIgY2xvc2UsIG5vIG5ldyBidXlzIGFyZSBhbGxvd2VkDQogICAgbW9kaWZpZXIgY2FuX2J1eSh1aW50IGlkKSB7DQogICAgICAgIGFzc2VydChpc0FjdGl2ZShpZCkpOw0KICAgICAgICBhc3NlcnQoIWlzQ2xvc2VkKCkpOw0KICAgICAgICBfOw0KICAgIH0NCiAgICAvLyBhZnRlciBjbG9zZSwgYW55b25lIGNhbiBjYW5jZWwgYW4gb2ZmZXINCiAgICBtb2RpZmllciBjYW5fY2FuY2VsKHVpbnQgaWQpIHsNCiAgICAgICAgYXNzZXJ0KGlzQWN0aXZlKGlkKSk7DQogICAgICAgIGFzc2VydChpc0Nsb3NlZCgpIHx8IChtc2cuc2VuZGVyID09IGdldE93bmVyKGlkKSkpOw0KICAgICAgICBfOw0KICAgIH0NCn0='