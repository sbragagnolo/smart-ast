base 64 content
base64fAMEToken
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC4xMTsNCg0KLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCi8vIEVSQzIwIFN0YW5kYXJkIFRva2VuIEltcGxlbWVudGF0aW9uLCBiYXNlZCBvbiBFUkMgU3RhbmRhcmQ6DQovLyBodHRwczovL2dpdGh1Yi5jb20vZXRoZXJldW0vRUlQcy9pc3N1ZXMvMjANCi8vIFdpdGggc29tZSBpbnNwaXJhdGlvbiBmcm9tIENvbnNlblN5cyBIdW1hblN0YW5kYXJkVG9rZW4gYXMgd2VsbA0KLy8gQ29weXJpZ2h0IDIwMTcgQmF0dGxlRHJvbWUNCi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQoNCmNvbnRyYWN0IEVSQzIwU3RhbmRhcmQgew0KCXVpbnQgcHVibGljIHRvdGFsU3VwcGx5Ow0KCQ0KCXN0cmluZyBwdWJsaWMgbmFtZTsNCgl1aW50OCBwdWJsaWMgZGVjaW1hbHM7DQoJc3RyaW5nIHB1YmxpYyBzeW1ib2w7DQoJc3RyaW5nIHB1YmxpYyB2ZXJzaW9uOw0KCQ0KCW1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgYmFsYW5jZXM7DQoJbWFwcGluZyAoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQpKSBhbGxvd2VkOw0KDQoJLy9GaXggZm9yIHNob3J0IGFkZHJlc3MgYXR0YWNrIGFnYWluc3QgRVJDMjANCgltb2RpZmllciBvbmx5UGF5bG9hZFNpemUodWludCBzaXplKSB7DQoJCWFzc2VydChtc2cuZGF0YS5sZW5ndGggPT0gc2l6ZSArIDQpOw0KCQlfOw0KCX0gDQoNCglmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQgYmFsYW5jZSkgew0KCQlyZXR1cm4gYmFsYW5jZXNbX293bmVyXTsNCgl9DQoNCglmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF9yZWNpcGllbnQsIHVpbnQgX3ZhbHVlKSBvbmx5UGF5bG9hZFNpemUoMiozMikgew0KCQlyZXF1aXJlKGJhbGFuY2VzW21zZy5zZW5kZXJdID49IF92YWx1ZSAmJiBfdmFsdWUgPiAwKTsNCgkgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gLT0gX3ZhbHVlOw0KCSAgICBiYWxhbmNlc1tfcmVjaXBpZW50XSArPSBfdmFsdWU7DQoJICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF9yZWNpcGllbnQsIF92YWx1ZSk7ICAgICAgICANCiAgICB9DQoNCglmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQgX3ZhbHVlKSB7DQoJCXJlcXVpcmUoYmFsYW5jZXNbX2Zyb21dID49IF92YWx1ZSAmJiBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSA+PSBfdmFsdWUgJiYgX3ZhbHVlID4gMCk7DQogICAgICAgIGJhbGFuY2VzW190b10gKz0gX3ZhbHVlOw0KICAgICAgICBiYWxhbmNlc1tfZnJvbV0gLT0gX3ZhbHVlOw0KICAgICAgICBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSAtPSBfdmFsdWU7DQogICAgICAgIFRyYW5zZmVyKF9mcm9tLCBfdG8sIF92YWx1ZSk7DQogICAgfQ0KDQoJZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50IF92YWx1ZSkgew0KCQlhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IF92YWx1ZTsNCgkJQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF92YWx1ZSk7DQoJfQ0KDQoJZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX3NwZW5kZXIsIGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50IGJhbGFuY2UpIHsNCgkJcmV0dXJuIGFsbG93ZWRbX293bmVyXVtfc3BlbmRlcl07DQoJfQ0KDQoJLy9FdmVudCB3aGljaCBpcyB0cmlnZ2VyZWQgdG8gbG9nIGFsbCB0cmFuc2ZlcnMgdG8gdGhpcyBjb250cmFjdCdzIGV2ZW50IGxvZw0KCWV2ZW50IFRyYW5zZmVyKA0KCQlhZGRyZXNzIGluZGV4ZWQgX2Zyb20sDQoJCWFkZHJlc3MgaW5kZXhlZCBfdG8sDQoJCXVpbnQgX3ZhbHVlDQoJCSk7DQoJCQ0KCS8vRXZlbnQgd2hpY2ggaXMgdHJpZ2dlcmVkIHdoZW5ldmVyIGFuIG93bmVyIGFwcHJvdmVzIGEgbmV3IGFsbG93YW5jZSBmb3IgYSBzcGVuZGVyLg0KCWV2ZW50IEFwcHJvdmFsKA0KCQlhZGRyZXNzIGluZGV4ZWQgX293bmVyLA0KCQlhZGRyZXNzIGluZGV4ZWQgX3NwZW5kZXIsDQoJCXVpbnQgX3ZhbHVlDQoJCSk7DQoNCn0NCg0KLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCi8vIEZBTUUgRVJDMjAgVG9rZW4sIGJhc2VkIG9uIEVSQzIwU3RhbmRhcmQgaW50ZXJmYWNlDQovLyBDb3B5cmlnaHQgMjAxNyBCYXR0bGVEcm9tZQ0KLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCg0KLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCi8vIExJQ0VOU0UNCi8vDQovLyBUaGlzIGZpbGUgaXMgcGFydCBvZiBCYXR0bGVEcm9tZS4NCi8vIA0KLy8gQmF0dGxlRHJvbWUgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeQ0KLy8gaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnkNCi8vIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yDQovLyAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLg0KLy8gDQovLyBCYXR0bGVEcm9tZSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLA0KLy8gYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2YNCi8vIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGUNCi8vIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuDQovLyANCi8vIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlDQovLyBhbG9uZyB3aXRoIEJhdHRsZURyb21lLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+Lg0KLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCg0KY29udHJhY3QgRkFNRVRva2VuIGlzIEVSQzIwU3RhbmRhcmQgew0KDQoJZnVuY3Rpb24gRkFNRVRva2VuKCkgew0KCQl0b3RhbFN1cHBseSA9IDIxMDAwMDAgc3phYm87CQkJLy9Ub3RhbCBTdXBwbHkgKGluY2x1ZGluZyBhbGwgZGVjaW1hbCBwbGFjZXMhKQ0KCQluYW1lID0gIkZhbWUiOwkJCQkJCQkvL1ByZXR0eSBOYW1lDQoJCWRlY2ltYWxzID0gMTI7CQkJCQkJCS8vRGVjaW1hbCBwbGFjZXMgKHdpdGggMTIgZGVjaW1hbCBwbGFjZXMgMSBzemFibyA9IDEgdG9rZW4gaW4gdWludDI1NikNCgkJc3ltYm9sID0gIkZBTSI7CQkJCQkJCS8vVGlja2VyIFN5bWJvbCAoMyBjaGFyYWN0ZXJzLCB1cHBlciBjYXNlKQ0KCQl2ZXJzaW9uID0gIkZBTUUxLjAiOwkJCQkJLy9WZXJzaW9uIENvZGUNCgkJYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSB0b3RhbFN1cHBseTsJCS8vQXNzaWduIGFsbCBiYWxhbmNlIHRvIGNyZWF0b3IgaW5pdGlhbGx5IGZvciBkaXN0cmlidXRpb24gZnJvbSB0aGVyZS4NCgl9DQoNCgkvL0J1cm4gX3ZhbHVlIG9mIHRva2VucyBmcm9tIHlvdXIgYmFsYW5jZS4NCgkvL1dpbGwgZGVzdHJveSB0aGUgdG9rZW5zLCByZW1vdmluZyB0aGVtIGZyb20geW91ciBiYWxhbmNlLCBhbmQgcmVkdWNlIHRvdGFsU3VwcGx5IGFjY29yZGluZ2x5Lg0KCWZ1bmN0aW9uIGJ1cm4odWludCBfdmFsdWUpIHsNCgkJcmVxdWlyZShiYWxhbmNlc1ttc2cuc2VuZGVyXSA+PSBfdmFsdWUgJiYgX3ZhbHVlID4gMCk7DQogICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdIC09IF92YWx1ZTsNCiAgICAgICAgdG90YWxTdXBwbHkgLT0gX3ZhbHVlOw0KICAgICAgICBCdXJuKG1zZy5zZW5kZXIsIF92YWx1ZSk7DQoJfQ0KDQoJLy9FdmVudCB0byBsb2cgYW55IHRpbWUgc29tZW9uZSBidXJucyB0b2tlbnMgdG8gdGhlIGNvbnRyYWN0J3MgZXZlbnQgbG9nOg0KCWV2ZW50IEJ1cm4oDQoJCWFkZHJlc3MgaW5kZXhlZCBfb3duZXIsDQoJCXVpbnQgX3ZhbHVlDQoJCSk7DQoNCn0='