base 64 content
base64fairAuction
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC4yOw0KY29udHJhY3QgdG9rZW4geyANCiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzLCB1aW50MjU2KXsgIH0NCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcykgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikgeyB9DQp9DQoNCi8vLyBAdGl0bGUgRmFpckF1Y3Rpb24gY29udHJhY3QNCi8vLyBAYXV0aG9yIENocmlzdG9waGVyIEdyYW50IC0gPGNocmlzdG9waGVyQGRlbHBoaS5tYXJrZXRzPg0KY29udHJhY3QgRmFpckF1Y3Rpb24gew0KICAgIC8qIFN0YXRlICovDQogICAgYWRkcmVzcyBwdWJsaWMgYmVuZWZpY2lhcnk7DQogICAgdWludCBwdWJsaWMgYW1vdW50UmFpc2VkOyB1aW50IHB1YmxpYyBzdGFydFRpbWU7IHVpbnQgcHVibGljIGRlYWRsaW5lOyB1aW50IHB1YmxpYyBtZW1iZXJDb3VudDsgdWludCBwdWJsaWMgY3Jvd2RzYWxlQ2FwOw0KICAgIHVpbnQyNTYgcHVibGljIHRva2VuU3VwcGx5Ow0KICAgIHRva2VuIHB1YmxpYyB0b2tlblJld2FyZDsNCiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gdWludDI1NikgcHVibGljIGJhbGFuY2VPZjsNCiAgICBtYXBwaW5nICh1aW50ID0+IGFkZHJlc3MpIGFjY291bnRJbmRleDsNCiAgICBib29sIHB1YmxpYyBmaW5hbGl6ZWQ7DQoNCiAgICAvKiBFdmVudHMgKi8NCiAgICBldmVudCBUb2tlbkFsbG9jYXRpb24oYWRkcmVzcyByZWNpcGllbnQsIHVpbnQgYW1vdW50KTsNCiAgICBldmVudCBGaW5hbGl6ZWQoYWRkcmVzcyBiZW5lZmljaWFyeSwgdWludCBhbW91bnRSYWlzZWQpOw0KICAgIGV2ZW50IEZ1bmRUcmFuc2ZlcihhZGRyZXNzIGJhY2tlciwgdWludCBhbW91bnQpOw0KICAgIGV2ZW50IEZ1bmRDbGFpbShhZGRyZXNzIGNsYWltYW50LCB1aW50IGFtb3VudCk7DQoNCiAgICAvKiBJbml0aWFsaXplIHJlbGV2YW50IGNyb3dkc2FsZSBjb250cmFjdCBkZXRhaWxzICovDQogICAgZnVuY3Rpb24gRmFpckF1Y3Rpb24oDQogICAgICAgIGFkZHJlc3MgZnVuZGVkQWRkcmVzcywNCiAgICAgICAgdWludCBlcG9jaFN0YXJ0VGltZSwNCiAgICAgICAgdWludCBkdXJhdGlvbkluTWludXRlcywNCiAgICAgICAgdWludDI1NiBjYXBPbkNyb3dkc2FsZSwNCiAgICAgICAgdG9rZW4gY29udHJhY3RBZGRyZXNzT2ZSZXdhcmRUb2tlbg0KICAgICkgew0KICAgICAgICBiZW5lZmljaWFyeSA9IGZ1bmRlZEFkZHJlc3M7DQogICAgICAgIHN0YXJ0VGltZSA9IGVwb2NoU3RhcnRUaW1lOw0KICAgICAgICBkZWFkbGluZSA9IHN0YXJ0VGltZSArIChkdXJhdGlvbkluTWludXRlcyAqIDEgbWludXRlcyk7DQogICAgICAgIHRva2VuUmV3YXJkID0gdG9rZW4oY29udHJhY3RBZGRyZXNzT2ZSZXdhcmRUb2tlbik7DQogICAgICAgIGNyb3dkc2FsZUNhcCA9IGNhcE9uQ3Jvd2RzYWxlICogMSBldGhlcjsNCiAgICAgICAgZmluYWxpemVkID0gZmFsc2U7DQogICAgfQ0KDQogICAgLyogZGVmYXVsdCBmdW5jdGlvbiAoY2FsbGVkIHdoZW5ldmVyIGZ1bmRzIGFyZSBzZW50IHRvIHRoZSBGYWlyQXVjdGlvbikgKi8NCiAgICBmdW5jdGlvbiAoKSBwYXlhYmxlIHsNCiAgICAgICAgLyogRW5zdXJlIHRoYXQgYXVjdGlvbiBpcyBvbmdvaW5nICovDQogICAgICAgIGlmIChub3cgPCBzdGFydFRpbWUpIHRocm93Ow0KICAgICAgICBpZiAobm93ID49IGRlYWRsaW5lKSB0aHJvdzsNCg0KICAgICAgICB1aW50IGFtb3VudCA9IG1zZy52YWx1ZTsNCg0KICAgICAgICAvKiBFbnN1cmUgdGhhdCB3ZSBkbyBub3QgcGFzcyB0aGUgY2FwICovDQogICAgICAgIGlmIChhbW91bnRSYWlzZWQgKyBhbW91bnQgPiBjcm93ZHNhbGVDYXApIHRocm93Ow0KDQogICAgICAgIHVpbnQyNTYgZXhpc3RpbmdCYWxhbmNlID0gYmFsYW5jZU9mW21zZy5zZW5kZXJdOw0KDQogICAgICAgIC8qIFRhbGx5IG5ldyBtZW1iZXJzIChoZWxwcyBpdGVyYXRpb24gbGF0ZXIpICovDQogICAgICAgIGlmIChleGlzdGluZ0JhbGFuY2UgPT0gMCkgew0KICAgICAgICAgICAgYWNjb3VudEluZGV4W21lbWJlckNvdW50XSA9IG1zZy5zZW5kZXI7DQogICAgICAgICAgICBtZW1iZXJDb3VudCArPSAxOw0KICAgICAgICB9IA0KICAgICAgICANCiAgICAgICAgLyogVHJhY2sgY29udHJpYnV0aW9uIGFtb3VudCAqLw0KICAgICAgICBiYWxhbmNlT2ZbbXNnLnNlbmRlcl0gPSBleGlzdGluZ0JhbGFuY2UgKyBhbW91bnQ7DQogICAgICAgIGFtb3VudFJhaXNlZCArPSBhbW91bnQ7DQoNCiAgICAgICAgLyogRmlyZSBGdW5kVHJhbnNmZXIgZXZlbnQgKi8NCiAgICAgICAgRnVuZFRyYW5zZmVyKG1zZy5zZW5kZXIsIGFtb3VudCk7DQogICAgfQ0KDQogICAgLyogZmluYWxpemUoKSBjYW4gYmUgY2FsbGVkIG9uY2UgdGhlIEZhaXJBdWN0aW9uIGhhcyBlbmRlZCwgd2hpY2ggd2lsbCBhbGxvdyB3aXRoZHJhd2FscyAqLw0KICAgIGZ1bmN0aW9uIGZpbmFsaXplKCkgew0KICAgICAgICAvKiBOb3RoaW5nIHRvIGZpbmFsaXplICovDQogICAgICAgIGlmIChhbW91bnRSYWlzZWQgPT0gMCkgdGhyb3c7DQoNCiAgICAgICAgLyogQXVjdGlvbiBzdGlsbCBvbmdvaW5nICovDQogICAgICAgIGlmIChub3cgPCBkZWFkbGluZSkgew0KICAgICAgICAgICAgLyogRG9uJ3QgdGVybWluYXRlIGF1Y3Rpb24gYmVmb3JlIGNhcCBpcyByZWFjaGVkICovDQogICAgICAgICAgICBpZiAoYW1vdW50UmFpc2VkIDwgY3Jvd2RzYWxlQ2FwKSB0aHJvdzsNCiAgICAgICAgfQ0KDQogICAgICAgIC8qIFNuYXBzaG90IGF2YWlsYWJsZSBzdXBwbHkgb2YgcmV3YXJkIHRva2VucyAqLw0KICAgICAgICB0b2tlblN1cHBseSA9IHRva2VuUmV3YXJkLmJhbGFuY2VPZih0aGlzKTsNCg0KICAgICAgICAvKiBNYXJrIHRoZSBGYWlyQXVjdGlvbiBhcyBmaW5hbGl6ZWQgKi8NCiAgICAgICAgZmluYWxpemVkID0gdHJ1ZTsNCiAgICAgICAgLyogRmlyZSBGaW5hbGl6ZWQgZXZlbnQgKi8NCiAgICAgICAgRmluYWxpemVkKGJlbmVmaWNpYXJ5LCBhbW91bnRSYWlzZWQpOw0KICAgIH0NCg0KICAgIC8qIGluZGl2aWR1YWxDbGFpbSgpIGNhbiBiZSBjYWxsZWQgYnkgYW55IGF1Y3Rpb24gcGFydGljaXBhbnQgb25jZSB0aGUgRmFpckF1Y3Rpb24gaXMgZmluYWxpemVkLCB0byBjbGFpbSB0aGUgdG9rZW5zIHRoZXkgYXJlIG93ZWQgZnJvbSB0aGUgYXVjdGlvbiAqLw0KICAgIGZ1bmN0aW9uIGluZGl2aWR1YWxDbGFpbSgpIHsNCiAgICAgICAgLyogT25seSBhbGxvdyBvbmNlIGF1Y3Rpb24gaGFzIGJlZW4gZmluYWxpemVkICovDQogICAgICAgIGlmICghZmluYWxpemVkKSB0aHJvdzsNCg0KICAgICAgICAvKiBHcmFudCB0b2tlbnMgZHVlICovDQogICAgICAgIHRva2VuUmV3YXJkLnRyYW5zZmVyKG1zZy5zZW5kZXIsIChiYWxhbmNlT2ZbbXNnLnNlbmRlcl0gKiB0b2tlblN1cHBseSAvIGFtb3VudFJhaXNlZCkpOw0KICAgICAgICAvKiBGaXJlIFRva2VuQWxsb2NhdGlvbiBldmVudCAqLw0KICAgICAgICBUb2tlbkFsbG9jYXRpb24obXNnLnNlbmRlciwgKGJhbGFuY2VPZlttc2cuc2VuZGVyXSAqIHRva2VuU3VwcGx5IC8gYW1vdW50UmFpc2VkKSk7DQogICAgICAgIC8qIFByZXZlbnQgcmVwZWF0LXdpdGhkcmF3YWxzICovDQogICAgICAgIGJhbGFuY2VPZlttc2cuc2VuZGVyXSA9IDA7DQogICAgfQ0KDQogICAgLyogYmVuZWZpY2lhcnlTZW5kKCkgY2FuIGJlIGNhbGxlZCBvbmNlIHRoZSBGYWlyQXVjdGlvbiBpcyBmaW5hbGl6ZWQsIHRvIHNlbmQgdGhlIGNyb3dkc2FsZSBwcm9jZWVkcyB0byB0aGVpciBkZXN0aW5hdGlvbiBhZGRyZXNzICovDQogICAgZnVuY3Rpb24gYmVuZWZpY2lhcnlTZW5kKCkgew0KICAgICAgICAvKiBPbmx5IGFsbG93IG9uY2UgYXVjdGlvbiBoYXMgYmVlbiBmaW5hbGl6ZWQgKi8NCiAgICAgICAgaWYgKCFmaW5hbGl6ZWQpIHRocm93Ow0KDQogICAgICAgIC8qIFNlbmQgcHJvY2VlZHMgdG8gYmVuZWZpY2lhcnkgKi8NCiAgICAgICAgaWYgKGJlbmVmaWNpYXJ5LnNlbmQoYW1vdW50UmFpc2VkKSkgew0KICAgICAgICAgICAgLyogRmlyZSBGdW5kQ2xhaW0gZXZlbnQgKi8NCiAgICAgICAgICAgIEZ1bmRDbGFpbShiZW5lZmljaWFyeSwgYW1vdW50UmFpc2VkKTsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIC8qIGF1dG9tYXRpY1dpdGhkcmF3TG9vcCgpIGNhbiBiZSBjYWxsZWQgb25jZSB0aGUgRmFpckF1Y3Rpb24gaXMgZmluYWxpemVkIHRvIGF1dG9tYXRpY2FsbHkgYWxsb2NhdGUgYSBiYXRjaCBvZiBhdWN0aW9uZWQgdG9rZW5zICovDQogICAgZnVuY3Rpb24gYXV0b21hdGljV2l0aGRyYXdMb29wKHVpbnQgc3RhcnRJbmRleCwgdWludCBlbmRJbmRleCkgew0KICAgICAgICAvKiBPbmx5IGFsbG93IG9uY2UgYXVjdGlvbiBoYXMgYmVlbiBmaW5hbGl6ZWQgKi8NCiAgICAgICAgaWYgKCFmaW5hbGl6ZWQpIHRocm93Ow0KICAgICAgICANCiAgICAgICAgLyogRGlzdHJpYnV0ZSBhdWN0aW9uZWQgdG9rZW5zIGZhaXJseSBhbW9uZyBhIGJhdGNoIG9mIHBhcnRpY2lwYW50cy4gKi8NCiAgICAgICAgZm9yICh1aW50IGk9c3RhcnRJbmRleDsgaTw9ZW5kSW5kZXggJiYgaTxtZW1iZXJDb3VudDsgaSsrKSB7DQogICAgICAgICAgICAvKiBTaG91bGQgbm90IG9jY3VyICovDQogICAgICAgICAgICBpZiAoYWNjb3VudEluZGV4W2ldID09IDApDQogICAgICAgICAgICAgICAgY29udGludWU7DQogICAgICAgICAgICAvKiBHcmFudCB0b2tlbnMgZHVlICovDQogICAgICAgICAgICB0b2tlblJld2FyZC50cmFuc2ZlcihhY2NvdW50SW5kZXhbaV0sIChiYWxhbmNlT2ZbYWNjb3VudEluZGV4W2ldXSAqIHRva2VuU3VwcGx5IC8gYW1vdW50UmFpc2VkKSk7DQogICAgICAgICAgICAvKiBGaXJlIFRva2VuQWxsb2NhdGlvbiBldmVudCAqLw0KICAgICAgICAgICAgVG9rZW5BbGxvY2F0aW9uKGFjY291bnRJbmRleFtpXSwgKGJhbGFuY2VPZlthY2NvdW50SW5kZXhbaV1dICogdG9rZW5TdXBwbHkgLyBhbW91bnRSYWlzZWQpKTsNCiAgICAgICAgICAgIC8qIFByZXZlbnQgcmVwZWF0LXdpdGhkcmF3YWxzICovDQogICAgICAgICAgICBiYWxhbmNlT2ZbYWNjb3VudEluZGV4W2ldXSA9IDA7DQogICAgICAgIH0NCiAgICB9DQp9'