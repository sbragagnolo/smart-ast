base 64 content
base64fidgetSpinner1
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC44Ow0KDQpjb250cmFjdCBPd25lZCB7DQogIGFkZHJlc3MgcHVibGljIG93bmVyOw0KDQogIGZ1bmN0aW9uIE93bmVkKCkgew0KICAgIG93bmVyID0gbXNnLnNlbmRlcjsNCiAgfQ0KDQogIG1vZGlmaWVyIG9ubHlPd25lcigpIHsNCiAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gb3duZXIpOw0KICAgIF87DQogIH0NCg0KICBmdW5jdGlvbiB0cmFuc2Zlck93bmVyc2hpcChhZGRyZXNzIG5ld093bmVyKSBleHRlcm5hbCBvbmx5T3duZXIgew0KICAgIG93bmVyID0gbmV3T3duZXI7DQogIH0NCn0NCg0KY29udHJhY3QgRmlkZ2V0U3Bpbm5lciBpcyBPd25lZCB7DQogIGludCBvbWVnYTsNCiAgaW50IHRoZXRhOw0KICB1aW50IHB1YmxpYyBsYXN0VXBkYXRlOw0KDQogIHVpbnQgcHVibGljIGRlY2F5UmF0ZTsNCiAgdWludCBwdWJsaWMgb21lZ2FQZXJFdGhlcjsNCg0KICBpbnQgcHVibGljIGxhcmdlc3RSZXRybzsNCiAgaW50IHB1YmxpYyBsYXJnZXN0UHJvOw0KDQogIGV2ZW50IFNwaW4oDQogICAgYWRkcmVzcyBpbmRleGVkIGZyb20sDQogICAgaW50IGluZGV4ZWQgZGlyZWN0aW9uLA0KICAgIHVpbnQgYW1vdW50DQogICk7DQoNCiAgLyoNCiAgICogQ3JlYXRlcyBhIG5ldyBGaWRnZXRTcGlubmVyIHdob3NlIHNwaW4gZGVjYXlzIGF0IGEgcmF0ZSBvZiBfZGVjYXlOdW1lcmF0b3IvX2RlY2F5RGVub21pbmF0b3IlIHBlciBzZWNvbmQNCiAgICogYW5kIHdobyBnYWlucyBfb21lZ2FQZXJFdGhlciBzcGluIHBlciBFdGhlciBzcGVudCBvbiBzcGlubmluZyBpdC4NCiAgICovDQoJZnVuY3Rpb24gRmlkZ2V0U3Bpbm5lcih1aW50IF9kZWNheVJhdGUsIHVpbnQgX29tZWdhUGVyRXRoZXIpIHsNCiAgICBsYXN0VXBkYXRlID0gbm93Ow0KCQlkZWNheVJhdGUgPSBfZGVjYXlSYXRlOw0KICAgIG9tZWdhUGVyRXRoZXIgPSBfb21lZ2FQZXJFdGhlcjsNCgl9DQoNCg0KICAvKg0KICAgKiBUaGlzIG1ha2VzIGl0IGVhc3kgdG8gb3ZlcnJpZGUgZGVsdGFUaW1lIGluIEZpZGdldFNwaW5uZXJUZXN0IHNvIHdlIGNhbiB0ZXN0IHRoYXQgdmVsb2NpdHkvZGlzcGxhY2VtZW50IGRlY2F5IGlzDQogICAqIHdvcmtpbmcgY29ycmVjdGx5DQogICAqLw0KICBmdW5jdGlvbiBkZWx0YVRpbWUoKSBjb25zdGFudCByZXR1cm5zKHVpbnQpIHsNCiAgICByZXR1cm4gbm93IC0gbGFzdFVwZGF0ZTsNCiAgfQ0KDQogIC8qDQogICAqIFJldHVybnMgdGhlIHZlbG9jaXR5IG9mIHRoZSBzcGlubmVyIGR1cmluZyB0aGlzIHNwZWNpZmljIGJsb2NrIGluIHRoZSBjaGFpbg0KICAgKi8NCiAgZnVuY3Rpb24gZ2V0Q3VycmVudFZlbG9jaXR5KCkgY29uc3RhbnQgcmV0dXJucyhpbnQpIHsNCiAgICBpbnQgZGlyID0gLTE7DQogICAgaWYob21lZ2EgPT0gMCkgew0KICAgICAgcmV0dXJuIDA7DQogICAgfSBlbHNlIGlmKG9tZWdhIDwgMCkgew0KICAgICAgZGlyID0gMTsNCiAgICB9DQoNCiAgICB1aW50IHRpbWVFbGFwc2VkID0gZGVsdGFUaW1lKCk7DQogICAgdWludCBkZWx0YU9tZWdhID0gdGltZUVsYXBzZWQgKiBkZWNheVJhdGU7DQogICAgaW50IG5ld09tZWdhID0gb21lZ2EgKyAoaW50KGRlbHRhT21lZ2EpICogZGlyKTsNCg0KICAgIC8vIG1ha2Ugc3VyZSB3ZSBkaWRuJ3QgY3Jvc3MgemVybw0KICAgIGlmKChvbWVnYSA+IDAgJiYgbmV3T21lZ2EgPCAwKSB8fCAob21lZ2EgPCAwICYmIG5ld09tZWdhID4gMCkpIHsNCiAgICAgIHJldHVybiAwOw0KICAgIH0NCg0KICAgIHJldHVybiBuZXdPbWVnYTsNCiAgfQ0KDQogIC8qDQogICAqIFJldHVybnMgdGhlIGRpc3BsYWNlbWVudCBvZiB0aGUgc3Bpbm5lciBkdXJpbmcgdGhpcyBzcGVjaWZpYyBibG9jayBpbiB0aGUgY2hhaW4NCiAgICovDQogIGZ1bmN0aW9uIGdldEN1cnJlbnREaXNwbGFjZW1lbnQoKSBjb25zdGFudCByZXR1cm5zKGludCkgew0KICAgIC8vIGludGVncmF0ZXMgb21lZ2Egb3ZlciB0aW1lDQogICAgaW50IHRpbWVFbGFwc2VkID0gaW50KGRlbHRhVGltZSgpKTsNCg0KICAgIC8vIGZpbmQgbWF4IHRpbWUgZWxhcHNlZCBiZWZvcmUgdj0wIChiZWNvbWVzIG1heC1oZWlnaHQgb2YgdHJhcGV6b2lkKQ0KICAgIGludCBtYXhUaW1lID0gb21lZ2EgLyBpbnQoZGVjYXlSYXRlKTsNCg0KICAgIGlmIChtYXhUaW1lIDwgMCkgew0KICAgICAgbWF4VGltZSAqPSAtMTsNCiAgICB9DQoNCiAgICBpZih0aW1lRWxhcHNlZCA+IG1heFRpbWUpIHsNCiAgICAgIHRpbWVFbGFwc2VkID0gbWF4VGltZTsNCiAgICB9DQoNCiAgICBpbnQgZGVsdGFUaGV0YSA9ICgob21lZ2EgKyBnZXRDdXJyZW50VmVsb2NpdHkoKSkgKiB0aW1lRWxhcHNlZCkgLyAyOw0KICAgIHJldHVybiB0aGV0YSArIGRlbHRhVGhldGE7DQogIH0NCg0KICAvKg0KICAgKiBBZGRzIG9yIHN1YnRyYWN0cyBmcm9tIHRoZSBzcGluIG9mIHRoZSBzcGlubmVyDQogICAqDQogICAqIEFsbCBjaGFuZ2VzIHRvIHRoZSBzcGlubmVyIHN0YXRlIHNob3VsZCBoYXBwZW4gYXQgdGhlIGVuZCBvZiB0aGUgY3VycmVudCBibG9jay4gU28gbXVsdGlwbGUgc3BpbnMgaW4gdGhlIHNhbWUgYmxvY2sNCiAgICogc2hvdWxkIGJlIGFkZGl0aXZlIHdpdGggdGhlaXIgZWZmZWN0cyBvbmx5IGJlY29taW5nIGFwcGFyZW50IGluIHRoZSBuZXh0IGJsb2NrLg0KICAgKi8NCiAgZnVuY3Rpb24gc3BpbihpbnQgZGlyZWN0aW9uKSBwYXlhYmxlIHsNCiAgICByZXF1aXJlKGRpcmVjdGlvbiA9PSAtMSB8fCBkaXJlY3Rpb24gPT0gMSk7DQoNCiAgICBpbnQgZGVsdGFPbWVnYSA9IChpbnQobXNnLnZhbHVlKSAqIGRpcmVjdGlvbiAqIGludChvbWVnYVBlckV0aGVyKSkgLyAxIGV0aGVyOw0KICAgIGludCBuZXdPbWVnYSA9IGdldEN1cnJlbnRWZWxvY2l0eSgpICsgZGVsdGFPbWVnYTsNCiAgICBpbnQgbmV3VGhldGEgPSBnZXRDdXJyZW50RGlzcGxhY2VtZW50KCk7DQoNCiAgICBvbWVnYSA9IG5ld09tZWdhOw0KICAgIHRoZXRhID0gbmV3VGhldGE7DQoNCiAgICBpZigtb21lZ2EgPiBsYXJnZXN0UmV0cm8pIHsNCiAgICAgIGxhcmdlc3RSZXRybyA9IC1vbWVnYTsNCiAgICB9IGVsc2UgaWYob21lZ2EgPiBsYXJnZXN0UHJvKSB7DQogICAgICBsYXJnZXN0UHJvID0gb21lZ2E7DQogICAgfQ0KDQogICAgU3Bpbihtc2cuc2VuZGVyLCBkaXJlY3Rpb24sIG1zZy52YWx1ZSk7DQogICAgbGFzdFVwZGF0ZSA9IG5vdzsNCiAgfQ0KDQogIC8qDQogICAqIFdpdGhkcmF3cyBhbGwgdGhlIG1vbmV5IGZyb20gdGhlIGNvbnRyYWN0DQogICAqLw0KICBmdW5jdGlvbiB3aXRoZHJhd0FsbCgpIG9ubHlPd25lciB7DQogICAgd2l0aGRyYXcoYWRkcmVzcyh0aGlzKS5iYWxhbmNlKTsNCiAgfQ0KDQogIC8qDQogICAqIFdpdGhkcmF3cyBhIGdpdmVuIGFtb3VudCBvZiBtb25leSBmcm9tIHRoZSBjb250cmFjdA0KICAgKi8NCiAgZnVuY3Rpb24gd2l0aGRyYXcodWludCBhbW91bnQpIG9ubHlPd25lciB7DQogICAgb3duZXIudHJhbnNmZXIoYW1vdW50KTsNCiAgfQ0KfQ=='