base 64 content
base64fundariaToken
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC4xMTsNCmNvbnRyYWN0IEZ1bmRhcmlhVG9rZW4gew0KICAgIHN0cmluZyBwdWJsaWMgY29uc3RhbnQgbmFtZSA9ICJGdW5kYXJpYSBUb2tlbiI7DQogICAgc3RyaW5nIHB1YmxpYyBjb25zdGFudCBzeW1ib2wgPSAiUkkiOw0KICAgIA0KICAgIHVpbnQgcHVibGljIHRvdGFsU3VwcGx5OyAvLyBob3cgbWFueSB0b2tlbnMgc3VwcGxpZWQgYXQgdGhlIG1vbWVudA0KICAgIHVpbnQgcHVibGljIHN1cHBseUxpbWl0OyAvLyBob3cgbWFueSB0b2tlbnMgY2FuIGJlIHN1cHBsaWVkICAgIA0KICAgIHVpbnQgcHVibGljIGNvdXJzZTsgLy8gY291cnNlIHdlaSBmb3IgdG9rZW4NCiANCiAgICBtYXBwaW5nKGFkZHJlc3M9PnVpbnQyNTYpIHB1YmxpYyBiYWxhbmNlT2Y7IC8vIG93bmVkIHRva2Vucw0KICAgIG1hcHBpbmcoYWRkcmVzcz0+bWFwcGluZyhhZGRyZXNzPT51aW50MjU2KSkgcHVibGljIGFsbG93YW5jZTsgLy8gYWxsb3dpbmcgdGhpcmQgcGFydGllcyB0byB0cmFuc2ZlciB0b2tlbnMgDQogICAgbWFwcGluZyhhZGRyZXNzPT5ib29sKSBwdWJsaWMgYWxsb3dlZEFkZHJlc3NlczsgLy8gYWxsb3dlZCBhZGRyZXNzZXMgdG8gbWFuYWdlIHNvbWUgZnVuY3Rpb25zICAgIA0KDQogICAgYWRkcmVzcyBwdWJsaWMgZnVuZGFyaWFQb29sQWRkcmVzczsgLy8gZXRoZXIgc291cmNlIGZvciBGdW5kYXJpYSBkZXZlbG9wbWVudA0KICAgIGFkZHJlc3MgY3JlYXRvcjsgLy8gY3JlYXRvciBhZGRyZXNzIG9mIHRoaXMgY29udHJhY3QNCiAgICANCiAgICBldmVudCBTdXBwbGllZFRvKGFkZHJlc3MgaW5kZXhlZCBfdG8sIHVpbnQgX3ZhbHVlKTsNCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgX2Zyb20sIGFkZHJlc3MgaW5kZXhlZCBfdG8sIHVpbnQyNTYgX3ZhbHVlKTsNCiAgICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgX293bmVyLCBhZGRyZXNzIGluZGV4ZWQgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKTsNCiAgICBldmVudCBTdXBwbHlMaW1pdENoYW5nZWQodWludCBuZXdMaW1pdCwgdWludCBvbGRMaW1pdCk7DQogICAgZXZlbnQgQWxsb3dlZEFkZHJlc3NBZGRlZChhZGRyZXNzIF9hZGRyZXNzKTsNCiAgICBldmVudCBDb3Vyc2VDaGFuZ2VkKHVpbnQgbmV3Q291cnNlLCB1aW50IG9sZENvdXJzZSk7DQogICAgDQogICAgZnVuY3Rpb24gRnVuZGFyaWFUb2tlbigpIHsNCiAgICAgICAgYWxsb3dlZEFkZHJlc3Nlc1ttc2cuc2VuZGVyXSA9IHRydWU7IC8vIGFkZCBjcmVhdG9yIGFkZHJlc3MgdG8gYWxsb3dlZCBhZGRyZXNzZXMNCiAgICAgICAgY3JlYXRvciA9IG1zZy5zZW5kZXI7DQogICAgfQ0KICAgIA0KICAgIC8vIGNvbmRpdGlvbiB0byBiZSBjcmVhdG9yIGFkZHJlc3MgdG8gcnVuIHNvbWUgZnVuY3Rpb25zDQogICAgbW9kaWZpZXIgb25seUNyZWF0b3IgeyANCiAgICAgICAgaWYobXNnLnNlbmRlciA9PSBjcmVhdG9yKSBfOyANCiAgICB9DQogICAgDQogICAgLy8gY29uZGl0aW9uIHRvIGJlIGFsbG93ZWQgYWRkcmVzcyB0byBydW4gc29tZSBmdW5jdGlvbnMNCiAgICBtb2RpZmllciBpc0FsbG93ZWQgew0KICAgICAgICBpZihhbGxvd2VkQWRkcmVzc2VzW21zZy5zZW5kZXJdKSBfOyANCiAgICB9DQogICAgDQogICAgLy8gc2V0IGFkZHJlc3MgZm9yIEZ1bmRhcmlhIHNvdXJjZSBvZiBldGhlcg0KICAgIGZ1bmN0aW9uIHNldEZ1bmRhcmlhUG9vbEFkZHJlc3MoYWRkcmVzcyBfZnVuZGFyaWFQb29sQWRkcmVzcykgb25seUNyZWF0b3Igew0KICAgICAgICBmdW5kYXJpYVBvb2xBZGRyZXNzID0gX2Z1bmRhcmlhUG9vbEFkZHJlc3M7DQogICAgfSAgICAgDQogICAgDQogICAgLy8gZXhwYW5kIGFsbG93ZWQgYWRkcmVzc2VzIHdpdGggbmV3IG9uZSAgICANCiAgICBmdW5jdGlvbiBhZGRBbGxvd2VkQWRkcmVzcyhhZGRyZXNzIF9hZGRyZXNzKSBvbmx5Q3JlYXRvciB7DQogICAgICAgIGFsbG93ZWRBZGRyZXNzZXNbX2FkZHJlc3NdID0gdHJ1ZTsNCiAgICAgICAgQWxsb3dlZEFkZHJlc3NBZGRlZChfYWRkcmVzcyk7DQogICAgfQ0KICAgIA0KICAgIC8vIHJlbW92ZSBhbGxvd2VkIGFkZHJlc3MNCiAgICBmdW5jdGlvbiByZW1vdmVBbGxvd2VkQWRkcmVzcyhhZGRyZXNzIF9hZGRyZXNzKSBvbmx5Q3JlYXRvciB7DQogICAgICAgIGRlbGV0ZSBhbGxvd2VkQWRkcmVzc2VzW19hZGRyZXNzXTsgICAgDQogICAgfQ0KDQogICAgLy8gaW5jcmVhc2UgdG9rZW4gYmFsYW5jZSBvZiBzb21lIGFkZHJlc3MNCiAgICBmdW5jdGlvbiBzdXBwbHlUbyhhZGRyZXNzIF90bywgdWludCBfdmFsdWUpIGlzQWxsb3dlZCB7DQogICAgICAgIHRvdGFsU3VwcGx5ICs9IF92YWx1ZTsNCiAgICAgICAgYmFsYW5jZU9mW190b10gKz0gX3ZhbHVlOw0KICAgICAgICBTdXBwbGllZFRvKF90bywgX3ZhbHVlKTsNCiAgICB9DQogICAgDQogICAgLy8gbGltaXQgdG90YWwgdG9rZW5zIGNhbiBiZSBzdXBwbGllZA0KICAgIGZ1bmN0aW9uIHNldFN1cHBseUxpbWl0KHVpbnQgbmV3TGltaXQpIGlzQWxsb3dlZCB7DQogICAgICAgIFN1cHBseUxpbWl0Q2hhbmdlZChuZXdMaW1pdCwgc3VwcGx5TGltaXQpOw0KICAgICAgICBzdXBwbHlMaW1pdCA9IG5ld0xpbWl0Ow0KICAgIH0gICAgICAgICAgICAgICAgDQogICAgDQogICAgLy8gc2V0IGNvdXJzZQ0KICAgIGZ1bmN0aW9uIHNldENvdXJzZSh1aW50IG5ld0NvdXJzZSkgaXNBbGxvd2VkIHsNCiAgICAgICAgQ291cnNlQ2hhbmdlZChuZXdDb3Vyc2UsIGNvdXJzZSk7DQogICAgICAgIGNvdXJzZSA9IG5ld0NvdXJzZTsNCiAgICB9IA0KICAgIA0KICAgIC8vIHRva2VuIGZvciB3ZWkgYWNjb3JkaW5nIHRvIGNvdXJzZQ0KICAgIGZ1bmN0aW9uIHRva2VuRm9yV2VpKHVpbnQgX3dlaSkgY29uc3RhbnQgcmV0dXJucyh1aW50KSB7DQogICAgICAgIHJldHVybiBfd2VpL2NvdXJzZTsgICAgDQogICAgfQ0KICAgIA0KICAgIC8vIHdlaSBmb3IgdG9rZW4gYWNjb3JkaW5nIHRvIGNvdXJzZQ0KICAgIGZ1bmN0aW9uIHdlaUZvclRva2VuKHVpbnQgX3Rva2VuKSBjb25zdGFudCByZXR1cm5zKHVpbnQpIHsNCiAgICAgICAgcmV0dXJuIF90b2tlbipjb3Vyc2U7DQogICAgfSANCiAgICANCiAgICAvLyB0cmFuc2ZlciB0b2tlbnMgdG8gYW5vdGhlciBhZGRyZXNzIChvd25lcikgICAgDQogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsNCiAgICAgICAgaWYgKF90byA9PSAweDAgfHwgYmFsYW5jZU9mW21zZy5zZW5kZXJdIDwgX3ZhbHVlIHx8IGJhbGFuY2VPZltfdG9dICsgX3ZhbHVlIDwgYmFsYW5jZU9mW190b10pIA0KICAgICAgICAgICAgcmV0dXJuIGZhbHNlOyANCiAgICAgICAgYmFsYW5jZU9mW21zZy5zZW5kZXJdIC09IF92YWx1ZTsgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgYmFsYW5jZU9mW190b10gKz0gX3ZhbHVlOyAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOw0KICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICB9DQogICAgDQogICAgLy8gc2V0dGluZyBvZiBhdmFpbGFiaWxpdHkgb2YgdG9rZW5zIHRyYW5zZmVyZW5jZSBmb3IgdGhpcmQgcGFydHkNCiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSANCiAgICAgICAgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7DQogICAgICAgIGlmKF90byA9PSAweDAgfHwgYmFsYW5jZU9mW19mcm9tXSA8IF92YWx1ZSB8fCBfdmFsdWUgPiBhbGxvd2FuY2VbX2Zyb21dW21zZy5zZW5kZXJdKSANCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICBiYWxhbmNlT2ZbX2Zyb21dIC09IF92YWx1ZTsgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgYmFsYW5jZU9mW190b10gKz0gX3ZhbHVlOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgIGFsbG93YW5jZVtfZnJvbV1bbXNnLnNlbmRlcl0gLT0gX3ZhbHVlOw0KICAgICAgICBUcmFuc2ZlcihfZnJvbSwgX3RvLCBfdmFsdWUpOw0KICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICB9DQogICAgDQogICAgLy8gYXBwcm92aW5nIHRyYW5zZmVyZW5jZSBvZiB0b2tlbnMgZm9yIHRoaXJkIHBhcnR5DQogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgDQogICAgICAgIHJldHVybnMgKGJvb2wgc3VjY2Vzcykgew0KICAgICAgICBhbGxvd2FuY2VbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOw0KICAgICAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgX3ZhbHVlKTsNCiAgICAgICAgcmV0dXJuIHRydWU7DQogICAgfQ0KICAgIA0KICAgIC8vIFByZXZlbnRzIGFjY2lkZW50YWwgc2VuZGluZyBvZiBldGhlcg0KICAgIGZ1bmN0aW9uICgpIHsNCgkgICAgdGhyb3c7IA0KICAgIH0gICAgIA0KICAgICAgICAgDQp9'