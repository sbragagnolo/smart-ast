base 64 content
base64fundraiser6
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC44Ow0KDQovLy8gV2lsbCBhY2NlcHQgRXRoZXIgImNvbnRyaWJ1dGlvbnMiIGFuZCByZWNvcmQgZWFjaCBib3RoIGFzIGEgbG9nIGFuZCBpbiBhDQovLy8gcXVlcnlhYmxlIHJlY29yZC4NCmNvbnRyYWN0IEZ1bmRyYWlzZXIgew0KDQoNCiAgICAvLyBIb3cgbXVjaCBpcyBlbm91Z2g/DQogICAgdWludCBwdWJsaWMgY29uc3RhbnQgZHVzdCA9IDE4MCBmaW5uZXk7DQoNCg0KICAgIC8vIFNwZWNpYWwgYWRkcmVzc2VzOiANCiAgICAvLyAgYWRtaW5pc3RyYXRvciBjYW4gaGFsdC91bmhhbHQva2lsbC9hZGp1c3RSYXRlOw0KICAgIC8vICB0cmVhc3VyeSByZWNlaXZlcyBhbGwgdGhlIGZ1bmRzDQogICAgYWRkcmVzcyBwdWJsaWMgYWRtaW47DQogICAgYWRkcmVzcyBwdWJsaWMgdHJlYXN1cnk7DQoNCiAgICAvLyBCZWdpbiBhbmQgZW5kIGJsb2NrIGZvciB0aGUgZnVuZHJhaXNpbmcgcGVyaW9kDQogICAgdWludCBwdWJsaWMgYmVnaW5CbG9jazsNCiAgICB1aW50IHB1YmxpYyBlbmRCbG9jazsNCg0KICAgIC8vIE51bWJlciBvZiB3ZWkgcGVyIGF0b20NCiAgICB1aW50IHB1YmxpYyB3ZWlQZXJBdG9tOyANCg0KICAgIC8vIEFyZSBjb250cmlidXRpb25zIGFibm9ybWFsbHkgaGFsdGVkPw0KICAgIGJvb2wgcHVibGljIGlzSGFsdGVkID0gZmFsc2U7DQoNCiAgICAvLyBUaGUgYHJlY29yZGAgbWFwcGluZyBtYXBzIGNvc21vcyBhZGRyZXNzZXMgdG8gdGhlIGFtb3VudCBvZiBhdG9tcy4NCiAgICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQpIHB1YmxpYyByZWNvcmQ7DQoNCiAgICAvLyBUaGUgdG90YWwgYW1vdW50IG9mIGV0aGVyIHJhaXNlZA0KICAgIHVpbnQgcHVibGljIHRvdGFsV2VpID0gMDsNCiAgICAvLyBUaGUgdG90YWwgYW1vdW50IG9mIGF0b21zIHN1Z2dlc3RlZCBmb3IgYWxsb2NhdGlvbg0KICAgIHVpbnQgcHVibGljIHRvdGFsQXRvbSA9IDA7DQogICAgLy8gVGhlIG51bWJlciBvZiBkb25hdGlvbg0KICAgIHVpbnQgcHVibGljIG51bURvbmF0aW9ucyA9IDA7DQoNCiAgICAvLy8gQ29uc3RydWN0b3IuIGBfYWRtaW5gIGhhcyB0aGUgYWJpbGl0eSB0byBwYXVzZSB0aGUNCiAgICAvLy8gY29udHJpYnV0aW9uIHBlcmlvZCBhbmQsIGV2ZW50dWFsbHksIGtpbGwgdGhpcyBjb250cmFjdC4gYF90cmVhc3VyeWANCiAgICAvLy8gcmVjZWl2ZXMgYWxsIGZ1bmRzLiBgX2JlZ2luQmxvY2tgIGFuZCBgX2VuZEJsb2NrYCBkZWZpbmUgdGhlIGJlZ2luIGFuZA0KICAgIC8vLyBlbmQgb2YgdGhlIHBlcmlvZC4gYF93ZWlQZXJBdG9tYCBpcyB0aGUgcmF0aW8gb2YgYXRvbXMgdG8gZXRoZXIuDQogICAgZnVuY3Rpb24gRnVuZHJhaXNlcihhZGRyZXNzIF9hZG1pbiwgYWRkcmVzcyBfdHJlYXN1cnksIHVpbnQgX2JlZ2luQmxvY2ssIHVpbnQgX2VuZEJsb2NrLCB1aW50IF93ZWlQZXJBdG9tKSB7DQogICAgICAgIGFkbWluID0gX2FkbWluOw0KICAgICAgICB0cmVhc3VyeSA9IF90cmVhc3VyeTsNCiAgICAgICAgYmVnaW5CbG9jayA9IF9iZWdpbkJsb2NrOw0KICAgICAgICBlbmRCbG9jayA9IF9lbmRCbG9jazsNCgl3ZWlQZXJBdG9tID0gX3dlaVBlckF0b207DQogICAgfQ0KDQogICAgLy8gQ2FuIG9ubHkgYmUgY2FsbGVkIGJ5IF9hZG1pbi4NCiAgICBtb2RpZmllciBvbmx5X2FkbWluIHsgaWYgKG1zZy5zZW5kZXIgIT0gYWRtaW4pIHRocm93OyBfOyB9DQogICAgLy8gQ2FuIG9ubHkgYmUgY2FsbGVkIGJ5IHByaW9yIHRvIHRoZSBwZXJpb2QuDQogICAgbW9kaWZpZXIgb25seV9iZWZvcmVfcGVyaW9kIHsgaWYgKGJsb2NrLm51bWJlciA+PSBiZWdpbkJsb2NrKSB0aHJvdzsgXzsgfQ0KICAgIC8vIENhbiBvbmx5IGJlIGNhbGxlZCBkdXJpbmcgdGhlIHBlcmlvZCB3aGVuIG5vdCBoYWx0ZWQuDQogICAgbW9kaWZpZXIgb25seV9kdXJpbmdfcGVyaW9kIHsgaWYgKGJsb2NrLm51bWJlciA8IGJlZ2luQmxvY2sgfHwgYmxvY2subnVtYmVyID49IGVuZEJsb2NrIHx8IGlzSGFsdGVkKSB0aHJvdzsgXzsgfQ0KICAgIC8vIENhbiBvbmx5IGJlIGNhbGxlZCBkdXJpbmcgdGhlIHBlcmlvZCB3aGVuIGhhbHRlZC4NCiAgICBtb2RpZmllciBvbmx5X2R1cmluZ19oYWx0ZWRfcGVyaW9kIHsgaWYgKGJsb2NrLm51bWJlciA8IGJlZ2luQmxvY2sgfHwgYmxvY2subnVtYmVyID49IGVuZEJsb2NrIHx8ICFpc0hhbHRlZCkgdGhyb3c7IF87IH0NCiAgICAvLyBDYW4gb25seSBiZSBjYWxsZWQgYWZ0ZXIgdGhlIHBlcmlvZC4NCiAgICBtb2RpZmllciBvbmx5X2FmdGVyX3BlcmlvZCB7IGlmIChibG9jay5udW1iZXIgPCBlbmRCbG9jaykgdGhyb3c7IF87IH0NCiAgICAvLyBUaGUgdmFsdWUgb2YgdGhlIG1lc3NhZ2UgbXVzdCBiZSBzdWZmaWNpZW50bHkgbGFyZ2UgdG8gbm90IGJlIGNvbnNpZGVyZWQgZHVzdC4NCiAgICBtb2RpZmllciBpc19ub3RfZHVzdCB7IGlmIChtc2cudmFsdWUgPCBkdXN0KSB0aHJvdzsgXzsgfQ0KDQogICAgLy8vIFNvbWUgY29udHJpYnV0aW9uIGBhbW91bnRgIHJlY2VpdmVkIGZyb20gYHJlY2lwaWVudGAgYXQgcmF0ZSBvZiBgY3VycmVudFJhdGVgIHdpdGggZW1lcmdlbmN5IHJldHVybiBvZiBgcmV0dXJuQWRkcmAuDQogICAgZXZlbnQgUmVjZWl2ZWQoYWRkcmVzcyBpbmRleGVkIHJlY2lwaWVudCwgYWRkcmVzcyByZXR1cm5BZGRyLCB1aW50IGFtb3VudCwgdWludCBjdXJyZW50UmF0ZSk7DQogICAgLy8vIFBlcmlvZCBoYWx0ZWQgYWJub3JtYWxseS4NCiAgICBldmVudCBIYWx0ZWQoKTsNCiAgICAvLy8gUGVyaW9kIHJlc3RhcnRlZCBhZnRlciBhYm5vcm1hbCBoYWx0Lg0KICAgIGV2ZW50IFVuaGFsdGVkKCk7DQoNCiAgICAvLyBJcyB0aGUgZnVuZHJhaXNlciBhY3RpdmU/DQogICAgZnVuY3Rpb24gaXNBY3RpdmUoKSBjb25zdGFudCByZXR1cm5zIChib29sIGFjdGl2ZSkgew0KCXJldHVybiAoYmxvY2subnVtYmVyID49IGJlZ2luQmxvY2sgJiYgYmxvY2subnVtYmVyIDwgZW5kQmxvY2sgJiYgIWlzSGFsdGVkKTsNCiAgICB9DQoNCiAgICAvLy8gUmVjZWl2ZSBhIGNvbnRyaWJ1dGlvbiBmb3IgYSBkb25vciBjb3Ntb3MgYWRkcmVzcy4NCiAgICBmdW5jdGlvbiBkb25hdGUoYWRkcmVzcyBfZG9ub3IsIGFkZHJlc3MgX3JldHVybkFkZHJlc3MsIGJ5dGVzNCBjaGVja3N1bSkgcGF5YWJsZSBvbmx5X2R1cmluZ19wZXJpb2QgaXNfbm90X2R1c3Qgew0KCS8vIGNoZWNrc3VtIGlzIHRoZSBmaXJzdCA0IGJ5dGVzIG9mIHRoZSBzaGEzIG9mIHRoZSB4b3Igb2YgdGhlIGJ5dGVzMzIgdmVyc2lvbnMgb2YgdGhlIGNvc21vcyBhZGRyZXNzIGFuZCB0aGUgcmV0dXJuIGFkZHJlc3MNCglpZiAoICEoIGJ5dGVzNChzaGEzKCBieXRlczMyKF9kb25vcileYnl0ZXMzMihfcmV0dXJuQWRkcmVzcykgKSkgPT0gY2hlY2tzdW0gKSkgdGhyb3c7DQoNCgkvLyBmb3J3YXJkIHRoZSBmdW5kcyB0byB0aGUgdHJlYXN1cmVyDQogICAgICAgIGlmICghdHJlYXN1cnkuc2VuZChtc2cudmFsdWUpKSB0aHJvdzsNCg0KCS8vIGNhbGN1bGF0ZSB0aGUgbnVtYmVyIG9mIGF0b21zIGF0IHRoZSBjdXJyZW50IHJhdGUNCgl2YXIgYXRvbXMgPSBtc2cudmFsdWUgLyB3ZWlQZXJBdG9tOw0KDQoJLy8gdXBkYXRlIHRoZSBkb25vciBkZXRhaWxzDQogICAgICAgIHJlY29yZFtfZG9ub3JdICs9IGF0b21zOw0KDQoJLy8gdXBkYXRlIHRoZSB0b3RhbHMNCiAgICAgICAgdG90YWxXZWkgKz0gbXNnLnZhbHVlOw0KCXRvdGFsQXRvbSArPSBhdG9tczsNCgludW1Eb25hdGlvbnMgKz0gMTsNCg0KICAgICAgICBSZWNlaXZlZChfZG9ub3IsIF9yZXR1cm5BZGRyZXNzLCBtc2cudmFsdWUsIHdlaVBlckF0b20pOw0KICAgIH0NCg0KICAgIC8vLyBBZGp1c3QgdGhlIHdlaVBlckF0b20NCiAgICBmdW5jdGlvbiBhZGp1c3RSYXRlKHVpbnQgbmV3UmF0ZSkgb25seV9hZG1pbiB7DQoJd2VpUGVyQXRvbSA9IG5ld1JhdGU7DQogICAgfQ0KDQogICAgLy8vIEhhbHQgdGhlIGNvbnRyaWJ1dGlvbiBwZXJpb2QuIEFueSBhdHRlbXB0IGF0IGNvbnRyaWJ1dGluZyB3aWxsIGZhaWwuDQogICAgZnVuY3Rpb24gaGFsdCgpIG9ubHlfYWRtaW4gb25seV9kdXJpbmdfcGVyaW9kIHsNCiAgICAgICAgaXNIYWx0ZWQgPSB0cnVlOw0KICAgICAgICBIYWx0ZWQoKTsNCiAgICB9DQoNCiAgICAvLy8gVW5oYWx0IHRoZSBjb250cmlidXRpb24gcGVyaW9kLg0KICAgIGZ1bmN0aW9uIHVuaGFsdCgpIG9ubHlfYWRtaW4gb25seV9kdXJpbmdfaGFsdGVkX3BlcmlvZCB7DQogICAgICAgIGlzSGFsdGVkID0gZmFsc2U7DQogICAgICAgIFVuaGFsdGVkKCk7DQogICAgfQ0KDQogICAgLy8vIEtpbGwgdGhpcyBjb250cmFjdC4NCiAgICBmdW5jdGlvbiBraWxsKCkgb25seV9hZG1pbiBvbmx5X2FmdGVyX3BlcmlvZCB7DQogICAgICAgIHN1aWNpZGUodHJlYXN1cnkpOw0KICAgIH0NCn0='