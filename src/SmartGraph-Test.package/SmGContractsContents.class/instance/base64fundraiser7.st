base 64 content
base64fundraiser7
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC44Ow0KDQovLy8gV2lsbCBhY2NlcHQgRXRoZXIgImNvbnRyaWJ1dGlvbnMiIGFuZCByZWNvcmQgZWFjaCBib3RoIGFzIGEgbG9nIGFuZCBpbiBhDQovLy8gcXVlcnlhYmxlIHJlY29yZC4NCmNvbnRyYWN0IEZ1bmRyYWlzZXIgew0KDQoNCiAgICAvLyBIb3cgbXVjaCBpcyBlbm91Z2g/DQogICAgdWludCBwdWJsaWMgY29uc3RhbnQgZHVzdCA9IDEgZmlubmV5OyAvLyBYWFg6IGNoYW5nZSBmb3IgcHJvZHVjdGlvbg0KDQoNCiAgICAvLyBTcGVjaWFsIGFkZHJlc3NlczogDQogICAgLy8gIGFkbWluaXN0cmF0b3IgY2FuIGhhbHQvdW5oYWx0L2tpbGwvYWRqdXN0UmF0ZTsNCiAgICAvLyAgdHJlYXN1cnkgcmVjZWl2ZXMgYWxsIHRoZSBmdW5kcw0KICAgIGFkZHJlc3MgcHVibGljIGFkbWluOw0KICAgIGFkZHJlc3MgcHVibGljIHRyZWFzdXJ5Ow0KDQogICAgLy8gQmVnaW4gYW5kIGVuZCBibG9jayBmb3IgdGhlIGZ1bmRyYWlzaW5nIHBlcmlvZA0KICAgIHVpbnQgcHVibGljIGJlZ2luQmxvY2s7DQogICAgdWludCBwdWJsaWMgZW5kQmxvY2s7DQoNCiAgICAvLyBOdW1iZXIgb2Ygd2VpIHBlciBhdG9tDQogICAgdWludCBwdWJsaWMgd2VpUGVyQXRvbTsgDQoNCiAgICAvLyBBcmUgY29udHJpYnV0aW9ucyBhYm5vcm1hbGx5IGhhbHRlZD8NCiAgICBib29sIHB1YmxpYyBpc0hhbHRlZCA9IGZhbHNlOw0KDQogICAgLy8gVGhlIGByZWNvcmRgIG1hcHBpbmcgbWFwcyBjb3Ntb3MgYWRkcmVzc2VzIHRvIHRoZSBhbW91bnQgb2YgYXRvbXMuDQogICAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50KSBwdWJsaWMgcmVjb3JkOw0KDQogICAgLy8gVGhlIHRvdGFsIGFtb3VudCBvZiBldGhlciByYWlzZWQNCiAgICB1aW50IHB1YmxpYyB0b3RhbFdlaSA9IDA7DQogICAgLy8gVGhlIHRvdGFsIGFtb3VudCBvZiBhdG9tcyBzdWdnZXN0ZWQgZm9yIGFsbG9jYXRpb24NCiAgICB1aW50IHB1YmxpYyB0b3RhbEF0b20gPSAwOw0KICAgIC8vIFRoZSBudW1iZXIgb2YgZG9uYXRpb24NCiAgICB1aW50IHB1YmxpYyBudW1Eb25hdGlvbnMgPSAwOw0KDQogICAgLy8vIENvbnN0cnVjdG9yLiBgX2FkbWluYCBoYXMgdGhlIGFiaWxpdHkgdG8gcGF1c2UgdGhlDQogICAgLy8vIGNvbnRyaWJ1dGlvbiBwZXJpb2QgYW5kLCBldmVudHVhbGx5LCBraWxsIHRoaXMgY29udHJhY3QuIGBfdHJlYXN1cnlgDQogICAgLy8vIHJlY2VpdmVzIGFsbCBmdW5kcy4gYF9iZWdpbkJsb2NrYCBhbmQgYF9lbmRCbG9ja2AgZGVmaW5lIHRoZSBiZWdpbiBhbmQNCiAgICAvLy8gZW5kIG9mIHRoZSBwZXJpb2QuIGBfd2VpUGVyQXRvbWAgaXMgdGhlIHJhdGlvIG9mIGF0b21zIHRvIGV0aGVyLg0KICAgIGZ1bmN0aW9uIEZ1bmRyYWlzZXIoYWRkcmVzcyBfYWRtaW4sIGFkZHJlc3MgX3RyZWFzdXJ5LCB1aW50IF9iZWdpbkJsb2NrLCB1aW50IF9lbmRCbG9jaywgdWludCBfd2VpUGVyQXRvbSkgew0KICAgICAgICBhZG1pbiA9IF9hZG1pbjsNCiAgICAgICAgdHJlYXN1cnkgPSBfdHJlYXN1cnk7DQogICAgICAgIGJlZ2luQmxvY2sgPSBfYmVnaW5CbG9jazsNCiAgICAgICAgZW5kQmxvY2sgPSBfZW5kQmxvY2s7DQoJd2VpUGVyQXRvbSA9IF93ZWlQZXJBdG9tOw0KICAgIH0NCg0KICAgIC8vIENhbiBvbmx5IGJlIGNhbGxlZCBieSBfYWRtaW4uDQogICAgbW9kaWZpZXIgb25seV9hZG1pbiB7IGlmIChtc2cuc2VuZGVyICE9IGFkbWluKSB0aHJvdzsgXzsgfQ0KICAgIC8vIENhbiBvbmx5IGJlIGNhbGxlZCBieSBwcmlvciB0byB0aGUgcGVyaW9kLg0KICAgIG1vZGlmaWVyIG9ubHlfYmVmb3JlX3BlcmlvZCB7IGlmIChibG9jay5udW1iZXIgPj0gYmVnaW5CbG9jaykgdGhyb3c7IF87IH0NCiAgICAvLyBDYW4gb25seSBiZSBjYWxsZWQgZHVyaW5nIHRoZSBwZXJpb2Qgd2hlbiBub3QgaGFsdGVkLg0KICAgIG1vZGlmaWVyIG9ubHlfZHVyaW5nX3BlcmlvZCB7IGlmIChibG9jay5udW1iZXIgPCBiZWdpbkJsb2NrIHx8IGJsb2NrLm51bWJlciA+PSBlbmRCbG9jayB8fCBpc0hhbHRlZCkgdGhyb3c7IF87IH0NCiAgICAvLyBDYW4gb25seSBiZSBjYWxsZWQgZHVyaW5nIHRoZSBwZXJpb2Qgd2hlbiBoYWx0ZWQuDQogICAgbW9kaWZpZXIgb25seV9kdXJpbmdfaGFsdGVkX3BlcmlvZCB7IGlmIChibG9jay5udW1iZXIgPCBiZWdpbkJsb2NrIHx8IGJsb2NrLm51bWJlciA+PSBlbmRCbG9jayB8fCAhaXNIYWx0ZWQpIHRocm93OyBfOyB9DQogICAgLy8gQ2FuIG9ubHkgYmUgY2FsbGVkIGFmdGVyIHRoZSBwZXJpb2QuDQogICAgbW9kaWZpZXIgb25seV9hZnRlcl9wZXJpb2QgeyBpZiAoYmxvY2subnVtYmVyIDwgZW5kQmxvY2spIHRocm93OyBfOyB9DQogICAgLy8gVGhlIHZhbHVlIG9mIHRoZSBtZXNzYWdlIG11c3QgYmUgc3VmZmljaWVudGx5IGxhcmdlIHRvIG5vdCBiZSBjb25zaWRlcmVkIGR1c3QuDQogICAgbW9kaWZpZXIgaXNfbm90X2R1c3QgeyBpZiAobXNnLnZhbHVlIDwgZHVzdCkgdGhyb3c7IF87IH0NCg0KICAgIC8vLyBTb21lIGNvbnRyaWJ1dGlvbiBgYW1vdW50YCByZWNlaXZlZCBmcm9tIGByZWNpcGllbnRgIGF0IHJhdGUgb2YgYGN1cnJlbnRSYXRlYCB3aXRoIGVtZXJnZW5jeSByZXR1cm4gb2YgYHJldHVybkFkZHJgLg0KICAgIGV2ZW50IFJlY2VpdmVkKGFkZHJlc3MgaW5kZXhlZCByZWNpcGllbnQsIGFkZHJlc3MgcmV0dXJuQWRkciwgdWludCBhbW91bnQsIHVpbnQgY3VycmVudFJhdGUpOw0KICAgIC8vLyBQZXJpb2QgaGFsdGVkIGFibm9ybWFsbHkuDQogICAgZXZlbnQgSGFsdGVkKCk7DQogICAgLy8vIFBlcmlvZCByZXN0YXJ0ZWQgYWZ0ZXIgYWJub3JtYWwgaGFsdC4NCiAgICBldmVudCBVbmhhbHRlZCgpOw0KDQogICAgLy8gSXMgdGhlIGZ1bmRyYWlzZXIgYWN0aXZlPw0KICAgIGZ1bmN0aW9uIGlzQWN0aXZlKCkgY29uc3RhbnQgcmV0dXJucyAoYm9vbCBhY3RpdmUpIHsNCglyZXR1cm4gKGJsb2NrLm51bWJlciA+PSBiZWdpbkJsb2NrICYmIGJsb2NrLm51bWJlciA8IGVuZEJsb2NrICYmICFpc0hhbHRlZCk7DQogICAgfQ0KDQogICAgLy8vIFJlY2VpdmUgYSBjb250cmlidXRpb24gZm9yIGEgZG9ub3IgY29zbW9zIGFkZHJlc3MuDQogICAgZnVuY3Rpb24gZG9uYXRlKGFkZHJlc3MgX2Rvbm9yLCBhZGRyZXNzIF9yZXR1cm5BZGRyZXNzLCBieXRlczQgY2hlY2tzdW0pIHBheWFibGUgb25seV9kdXJpbmdfcGVyaW9kIGlzX25vdF9kdXN0IHsNCgkvLyBjaGVja3N1bSBpcyB0aGUgZmlyc3QgNCBieXRlcyBvZiB0aGUgc2hhMyBvZiB0aGUgeG9yIG9mIHRoZSBieXRlczMyIHZlcnNpb25zIG9mIHRoZSBjb3Ntb3MgYWRkcmVzcyBhbmQgdGhlIHJldHVybiBhZGRyZXNzDQoJaWYgKCAhKCBieXRlczQoc2hhMyggYnl0ZXMzMihfZG9ub3IpXmJ5dGVzMzIoX3JldHVybkFkZHJlc3MpICkpID09IGNoZWNrc3VtICkpIHRocm93Ow0KDQoJLy8gZm9yd2FyZCB0aGUgZnVuZHMgdG8gdGhlIHRyZWFzdXJlcg0KICAgICAgICBpZiAoIXRyZWFzdXJ5LnNlbmQobXNnLnZhbHVlKSkgdGhyb3c7DQoNCgkvLyBjYWxjdWxhdGUgdGhlIG51bWJlciBvZiBhdG9tcyBhdCB0aGUgY3VycmVudCByYXRlDQoJdmFyIGF0b21zID0gbXNnLnZhbHVlIC8gd2VpUGVyQXRvbTsNCg0KCS8vIHVwZGF0ZSB0aGUgZG9ub3IgZGV0YWlscw0KICAgICAgICByZWNvcmRbX2Rvbm9yXSArPSBhdG9tczsNCg0KCS8vIHVwZGF0ZSB0aGUgdG90YWxzDQogICAgICAgIHRvdGFsV2VpICs9IG1zZy52YWx1ZTsNCgl0b3RhbEF0b20gKz0gYXRvbXM7DQoJbnVtRG9uYXRpb25zICs9IDE7DQoNCiAgICAgICAgUmVjZWl2ZWQoX2Rvbm9yLCBfcmV0dXJuQWRkcmVzcywgbXNnLnZhbHVlLCB3ZWlQZXJBdG9tKTsNCiAgICB9DQoNCiAgICAvLy8gQWRqdXN0IHRoZSB3ZWlQZXJBdG9tDQogICAgZnVuY3Rpb24gYWRqdXN0UmF0ZSh1aW50IG5ld1JhdGUpIG9ubHlfYWRtaW4gew0KCXdlaVBlckF0b20gPSBuZXdSYXRlOw0KICAgIH0NCg0KICAgIC8vLyBIYWx0IHRoZSBjb250cmlidXRpb24gcGVyaW9kLiBBbnkgYXR0ZW1wdCBhdCBjb250cmlidXRpbmcgd2lsbCBmYWlsLg0KICAgIGZ1bmN0aW9uIGhhbHQoKSBvbmx5X2FkbWluIG9ubHlfZHVyaW5nX3BlcmlvZCB7DQogICAgICAgIGlzSGFsdGVkID0gdHJ1ZTsNCiAgICAgICAgSGFsdGVkKCk7DQogICAgfQ0KDQogICAgLy8vIFVuaGFsdCB0aGUgY29udHJpYnV0aW9uIHBlcmlvZC4NCiAgICBmdW5jdGlvbiB1bmhhbHQoKSBvbmx5X2FkbWluIG9ubHlfZHVyaW5nX2hhbHRlZF9wZXJpb2Qgew0KICAgICAgICBpc0hhbHRlZCA9IGZhbHNlOw0KICAgICAgICBVbmhhbHRlZCgpOw0KICAgIH0NCg0KICAgIC8vLyBLaWxsIHRoaXMgY29udHJhY3QuDQogICAgZnVuY3Rpb24ga2lsbCgpIG9ubHlfYWRtaW4gb25seV9hZnRlcl9wZXJpb2Qgew0KICAgICAgICBzdWljaWRlKHRyZWFzdXJ5KTsNCiAgICB9DQp9'