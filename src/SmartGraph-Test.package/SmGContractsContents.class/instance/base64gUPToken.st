base 64 content
base64gUPToken
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC44Ow0KDQoNCmNvbnRyYWN0IFNhZmVNYXRoIHsNCg0KICBmdW5jdGlvbiBhc3NlcnQoYm9vbCBhc3NlcnRpb24pIGludGVybmFsIHsNCiAgICBpZiAoIWFzc2VydGlvbikgdGhyb3c7DQogIH0NCg0KICBmdW5jdGlvbiBzYWZlTXVsKHVpbnQgYSwgdWludCBiKSBpbnRlcm5hbCByZXR1cm5zICh1aW50KSB7DQogICAgdWludCBjID0gYSAqIGI7DQogICAgYXNzZXJ0KGEgPT0gMCB8fCBjIC8gYSA9PSBiKTsNCiAgICByZXR1cm4gYzsNCiAgfQ0KDQogIGZ1bmN0aW9uIHNhZmVEaXYodWludCBhLCB1aW50IGIpIGludGVybmFsIHJldHVybnMgKHVpbnQpIHsNCiAgICBhc3NlcnQoYiA+IDApOw0KICAgIHVpbnQgYyA9IGEgLyBiOw0KICAgIGFzc2VydChhID09IGIgKiBjICsgYSAlIGIpOw0KICAgIHJldHVybiBjOw0KICB9DQoNCn0NCg0KDQpjb250cmFjdCBTdGFuZGFyZFRva2VuUHJvdG9jb2wgew0KDQogICAgZnVuY3Rpb24gdG90YWxTdXBwbHkoKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IHRvdGFsU3VwcGx5KSB7fQ0KICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKSB7fQ0KICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3JlY2lwaWVudCwgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcykge30NCiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfcmVjaXBpZW50LCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7fQ0KICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcykge30NCiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKSB7fQ0KDQogICAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCBhZGRyZXNzIGluZGV4ZWQgX3JlY2lwaWVudCwgdWludDI1NiBfdmFsdWUpOw0KICAgIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBfb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpOw0KDQp9DQoNCg0KY29udHJhY3QgU3RhbmRhcmRUb2tlbiBpcyBTdGFuZGFyZFRva2VuUHJvdG9jb2wgew0KDQogICAgbW9kaWZpZXIgd2hlbl9jYW5fdHJhbnNmZXIoYWRkcmVzcyBfZnJvbSwgdWludDI1NiBfdmFsdWUpIHsNCiAgICAgICAgaWYgKGJhbGFuY2VzW19mcm9tXSA+PSBfdmFsdWUpIF87DQogICAgfQ0KDQogICAgbW9kaWZpZXIgd2hlbl9jYW5fcmVjZWl2ZShhZGRyZXNzIF9yZWNpcGllbnQsIHVpbnQyNTYgX3ZhbHVlKSB7DQogICAgICAgIGlmIChiYWxhbmNlc1tfcmVjaXBpZW50XSArIF92YWx1ZSA+IGJhbGFuY2VzW19yZWNpcGllbnRdKSBfOw0KICAgIH0NCg0KICAgIG1vZGlmaWVyIHdoZW5faXNfYWxsb3dlZChhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF9kZWxlZ2F0ZSwgdWludDI1NiBfdmFsdWUpIHsNCiAgICAgICAgaWYgKGFsbG93ZWRbX2Zyb21dW19kZWxlZ2F0ZV0gPj0gX3ZhbHVlKSBfOw0KICAgIH0NCg0KICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3JlY2lwaWVudCwgdWludDI1NiBfdmFsdWUpDQogICAgICAgIHdoZW5fY2FuX3RyYW5zZmVyKG1zZy5zZW5kZXIsIF92YWx1ZSkNCiAgICAgICAgd2hlbl9jYW5fcmVjZWl2ZShfcmVjaXBpZW50LCBfdmFsdWUpDQogICAgICAgIHJldHVybnMgKGJvb2wgb19zdWNjZXNzKQ0KICAgIHsNCiAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gLT0gX3ZhbHVlOw0KICAgICAgICBiYWxhbmNlc1tfcmVjaXBpZW50XSArPSBfdmFsdWU7DQogICAgICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF9yZWNpcGllbnQsIF92YWx1ZSk7DQogICAgICAgIHJldHVybiB0cnVlOw0KICAgIH0NCg0KICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF9yZWNpcGllbnQsIHVpbnQyNTYgX3ZhbHVlKQ0KICAgICAgICB3aGVuX2Nhbl90cmFuc2ZlcihfZnJvbSwgX3ZhbHVlKQ0KICAgICAgICB3aGVuX2Nhbl9yZWNlaXZlKF9yZWNpcGllbnQsIF92YWx1ZSkNCiAgICAgICAgd2hlbl9pc19hbGxvd2VkKF9mcm9tLCBtc2cuc2VuZGVyLCBfdmFsdWUpDQogICAgICAgIHJldHVybnMgKGJvb2wgb19zdWNjZXNzKQ0KICAgIHsNCiAgICAgICAgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gLT0gX3ZhbHVlOw0KICAgICAgICBiYWxhbmNlc1tfZnJvbV0gLT0gX3ZhbHVlOw0KICAgICAgICBiYWxhbmNlc1tfcmVjaXBpZW50XSArPSBfdmFsdWU7DQogICAgICAgIFRyYW5zZmVyKF9mcm9tLCBfcmVjaXBpZW50LCBfdmFsdWUpOw0KICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICB9DQoNCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSkgew0KICAgICAgICByZXR1cm4gYmFsYW5jZXNbX293bmVyXTsNCiAgICB9DQoNCiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIG9fc3VjY2Vzcykgew0KICAgICAgICBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IF92YWx1ZTsNCiAgICAgICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF92YWx1ZSk7DQogICAgICAgIHJldHVybiB0cnVlOw0KICAgIH0NCg0KICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBvX3JlbWFpbmluZykgew0KICAgICAgICByZXR1cm4gYWxsb3dlZFtfb3duZXJdW19zcGVuZGVyXTsNCiAgICB9DQoNCiAgICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIGJhbGFuY2VzOw0KICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgYWxsb3dlZDsNCiAgICB1aW50MjU2IHB1YmxpYyB0b3RhbFN1cHBseTsNCg0KfQ0KDQpjb250cmFjdCBHVVBUb2tlbiBpcyBTdGFuZGFyZFRva2VuIHsNCg0KCS8vRklFTERTDQoJc3RyaW5nIHB1YmxpYyBuYW1lID0gIkd1cHB5IjsNCiAgICBzdHJpbmcgcHVibGljIHN5bWJvbCA9ICJHVVAiOw0KICAgIHVpbnQgcHVibGljIGRlY2ltYWxzID0gMzsNCg0KCS8vQ09OU1RBTlRTDQoJdWludCBwdWJsaWMgY29uc3RhbnQgTE9DS09VVF9QRVJJT0QgPSAxIHllYXJzOyAvL3RpbWUgYWZ0ZXIgZW5kIGRhdGUgdGhhdCBpbGxpcXVpZCBHVVAgY2FuIGJlIHRyYW5zZmVycmVkDQoNCgkvL0FTU0lHTkVEIElOIElOSVRJQUxJWkFUSU9ODQoJdWludCBwdWJsaWMgZW5kTWludGluZ1RpbWU7IC8vVGltZXN0YW1wIGFmdGVyIHdoaWNoIG5vIG1vcmUgdG9rZW5zIGNhbiBiZSBjcmVhdGVkDQoJYWRkcmVzcyBwdWJsaWMgbWludGVyOyAvL2FkZHJlc3Mgb2YgdGhlIGFjY291bnQgd2hpY2ggbWF5IG1pbnQgbmV3IHRva2Vucw0KDQoJbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50KSBwdWJsaWMgaWxsaXF1aWRCYWxhbmNlOyAvL0JhbGFuY2Ugb2YgJ0Zyb3plbiBmdW5kcycNCg0KCS8vTU9ESUZJRVJTDQoJLy9DYW4gb25seSBiZSBjYWxsZWQgYnkgY29udHJpYnV0aW9uIGNvbnRyYWN0Lg0KCW1vZGlmaWVyIG9ubHlfbWludGVyIHsNCgkJaWYgKG1zZy5zZW5kZXIgIT0gbWludGVyKSB0aHJvdzsNCgkJXzsNCgl9DQoNCgkvLyBDYW4gb25seSBiZSBjYWxsZWQgaWYgaWxsaXF1aWQgdG9rZW5zIG1heSBiZSB0cmFuc2Zvcm1lZCBpbnRvIGxpcXVpZC4NCgkvLyBUaGlzIGhhcHBlbnMgd2hlbiBgTE9DS09VVF9QRVJJT0RgIG9mIHRpbWUgcGFzc2VzIGFmdGVyIGBlbmRNaW50aW5nVGltZWAuDQoJbW9kaWZpZXIgd2hlbl90aGF3YWJsZSB7DQoJCWlmIChub3cgPCBlbmRNaW50aW5nVGltZSArIExPQ0tPVVRfUEVSSU9EKSB0aHJvdzsNCgkJXzsNCgl9DQoNCgkvLyBDYW4gb25seSBiZSBjYWxsZWQgaWYgKGxpcXVpZCkgdG9rZW5zIG1heSBiZSB0cmFuc2ZlcnJlZC4gSGFwcGVucw0KCS8vIGltbWVkaWF0ZWx5IGFmdGVyIGBlbmRNaW50aW5nVGltZWAuDQoJbW9kaWZpZXIgd2hlbl90cmFuc2ZlcmFibGUgew0KCQlpZiAobm93IDwgZW5kTWludGluZ1RpbWUpIHRocm93Ow0KCQlfOw0KCX0NCg0KCS8vIENhbiBvbmx5IGJlIGNhbGxlZCBpZiB0aGUgYGNyb3dkZnVuZGVyYCBpcyBhbGxvd2VkIHRvIG1pbnQgdG9rZW5zLiBBbnkNCgkvLyB0aW1lIGJlZm9yZSBgZW5kTWludGluZ1RpbWVgLg0KCW1vZGlmaWVyIHdoZW5fbWludGFibGUgew0KCQlpZiAobm93ID49IGVuZE1pbnRpbmdUaW1lKSB0aHJvdzsNCgkJXzsNCgl9DQoNCgkvLyBJbml0aWFsaXphdGlvbiBjb250cmFjdCBhc3NpZ25zIGFkZHJlc3Mgb2YgY3Jvd2RmdW5kIGNvbnRyYWN0IGFuZCBlbmQgdGltZS4NCglmdW5jdGlvbiBHVVBUb2tlbihhZGRyZXNzIF9taW50ZXIsIHVpbnQgX2VuZE1pbnRpbmdUaW1lKSB7DQoJCWVuZE1pbnRpbmdUaW1lID0gX2VuZE1pbnRpbmdUaW1lOw0KCQltaW50ZXIgPSBfbWludGVyOw0KCX0NCg0KCS8vIENyZWF0ZSBuZXcgdG9rZW5zIHdoZW4gY2FsbGVkIGJ5IHRoZSBjcm93ZGZ1bmQgY29udHJhY3QuDQoJLy8gT25seSBjYWxsYWJsZSBiZWZvcmUgdGhlIGVuZCB0aW1lLg0KCWZ1bmN0aW9uIGNyZWF0ZVRva2VuKGFkZHJlc3MgX3JlY2lwaWVudCwgdWludCBfdmFsdWUpDQoJCXdoZW5fbWludGFibGUNCgkJb25seV9taW50ZXINCgkJcmV0dXJucyAoYm9vbCBvX3N1Y2Nlc3MpDQoJew0KCQliYWxhbmNlc1tfcmVjaXBpZW50XSArPSBfdmFsdWU7DQoJCXRvdGFsU3VwcGx5ICs9IF92YWx1ZTsNCgkJcmV0dXJuIHRydWU7DQoJfQ0KDQoJLy8gQ3JlYXRlIGFuIGlsbGlxdWlkQmFsYW5jZSB3aGljaCBjYW5ub3QgYmUgdHJhZGVkIHVudGlsIGVuZCBvZiBsb2Nrb3V0IHBlcmlvZC4NCgkvLyBDYW4gb25seSBiZSBjYWxsZWQgYnkgY3Jvd2RmdW5kIGNvbnRyYWN0IGJlZm9yZSB0aGUgZW5kIHRpbWUuDQoJZnVuY3Rpb24gY3JlYXRlSWxsaXF1aWRUb2tlbihhZGRyZXNzIF9yZWNpcGllbnQsIHVpbnQgX3ZhbHVlKQ0KCQl3aGVuX21pbnRhYmxlDQoJCW9ubHlfbWludGVyDQoJCXJldHVybnMgKGJvb2wgb19zdWNjZXNzKQ0KCXsNCgkJaWxsaXF1aWRCYWxhbmNlW19yZWNpcGllbnRdICs9IF92YWx1ZTsNCgkJdG90YWxTdXBwbHkgKz0gX3ZhbHVlOw0KCQlyZXR1cm4gdHJ1ZTsNCgl9DQoNCgkvLyBNYWtlIHNlbmRlcidzIGlsbGlxdWlkIGJhbGFuY2UgbGlxdWlkIHdoZW4gY2FsbGVkIGFmdGVyIGxvY2tvdXQgcGVyaW9kLg0KCWZ1bmN0aW9uIG1ha2VMaXF1aWQoKQ0KCQl3aGVuX3RoYXdhYmxlDQoJew0KCQliYWxhbmNlc1ttc2cuc2VuZGVyXSArPSBpbGxpcXVpZEJhbGFuY2VbbXNnLnNlbmRlcl07DQoJCWlsbGlxdWlkQmFsYW5jZVttc2cuc2VuZGVyXSA9IDA7DQoJfQ0KDQoJLy8gVHJhbnNmZXIgYW1vdW50IG9mIHRva2VucyBmcm9tIHNlbmRlciBhY2NvdW50IHRvIHJlY2lwaWVudC4NCgkvLyBPbmx5IGNhbGxhYmxlIGFmdGVyIHRoZSBjcm93ZCBmdW5kIGVuZCBkYXRlLg0KCWZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3JlY2lwaWVudCwgdWludCBfYW1vdW50KQ0KCQl3aGVuX3RyYW5zZmVyYWJsZQ0KCQlyZXR1cm5zIChib29sIG9fc3VjY2VzcykNCgl7DQoJCXJldHVybiBzdXBlci50cmFuc2ZlcihfcmVjaXBpZW50LCBfYW1vdW50KTsNCgl9DQoNCgkvLyBUcmFuc2ZlciBhbW91bnQgb2YgdG9rZW5zIGZyb20gYSBzcGVjaWZpZWQgYWRkcmVzcyB0byBhIHJlY2lwaWVudC4NCgkvLyBPbmx5IGNhbGxhYmxlIGFmdGVyIHRoZSBjcm93ZCBmdW5kIGVuZCBkYXRlLg0KCWZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF9yZWNpcGllbnQsIHVpbnQgX2Ftb3VudCkNCgkJd2hlbl90cmFuc2ZlcmFibGUNCgkJcmV0dXJucyAoYm9vbCBvX3N1Y2Nlc3MpDQoJew0KCQlyZXR1cm4gc3VwZXIudHJhbnNmZXJGcm9tKF9mcm9tLCBfcmVjaXBpZW50LCBfYW1vdW50KTsNCgl9DQp9'