base 64 content
base64gameRegistry
	^'Y29udHJhY3QgR2FtZVJlZ2lzdHJ5IHsNCg0KICAgIC8vIFRoaXMgc3RydWN0IGtlZXBzIGFsbCBkYXRhIGZvciBhIFJlY29yZC4NCiAgICBzdHJ1Y3QgUmVjb3JkIHsNCiAgICAgICAgLy8gS2VlcHMgdGhlIGFkZHJlc3Mgb2YgdGhpcyByZWNvcmQgY3JlYXRvci4NCiAgICAgICAgYWRkcmVzcyBvd25lcjsNCiAgICAgICAgLy8gS2VlcHMgdGhlIHRpbWUgd2hlbiB0aGlzIHJlY29yZCB3YXMgY3JlYXRlZC4NCiAgICAgICAgdWludCB0aW1lOw0KICAgICAgICAvLyBLZWVwcyB0aGUgaW5kZXggb2YgdGhlIGtleXMgYXJyYXkgZm9yIGZhc3QgbG9va3VwDQogICAgICAgIHVpbnQga2V5c0luZGV4Ow0KICAgICAgICBzdHJpbmcgZGVzY3JpcHRpb247DQogICAgICAgIHN0cmluZyB1cmw7DQogICAgfQ0KDQogICAgLy8gVGhpcyBtYXBwaW5nIGtlZXBzIHRoZSByZWNvcmRzIG9mIHRoaXMgUmVnaXN0cnkuDQogICAgbWFwcGluZyhhZGRyZXNzID0+IFJlY29yZCkgcHJpdmF0ZSByZWNvcmRzOw0KDQogICAgLy8gS2VlcHMgdGhlIHRvdGFsIG51bWJlcnMgb2YgcmVjb3JkcyBpbiB0aGlzIFJlZ2lzdHJ5Lg0KICAgIHVpbnQgcHJpdmF0ZSBudW1SZWNvcmRzOw0KDQogICAgLy8gS2VlcHMgYSBsaXN0IG9mIGFsbCBrZXlzIHRvIGludGVyYXRlIHRoZSByZWNvcmVkcy4NCiAgICBhZGRyZXNzW10gcHJpdmF0ZSBrZXlzOw0KDQogICAgLy8gVGhlIG93bmVyIG9mIHRoaXMgcmVnaXN0cnkuDQogICAgYWRkcmVzcyBwcml2YXRlIG93bmVyOw0KDQogICAgdWludCBwcml2YXRlIEtFWV9IT0xERVJfU0hBUkUgID0gNTA7DQogICAgdWludCBwcml2YXRlIFJFR0lTVFJBVElPTl9DT1NUID0gNTAwIGZpbm5leTsNCiAgICB1aW50IHByaXZhdGUgVFJBTlNGRVJfQ09TVCAgICAgPSAwOw0KDQogICAgLy8gQ29uc3RydWN0b3INCiAgICBmdW5jdGlvbiBHYW1lUmVnaXN0cnkoKSB7DQogICAgICAgIG93bmVyID0gbXNnLnNlbmRlcjsNCiAgICB9DQogICAgDQogICAgLy8gcHVibGljIGludGVyZmFjZSB0byB0aGUgZGlyZWN0b3J5IG9mIGdhbWVzDQogICAgZnVuY3Rpb24gdGhlR2FtZXModWludCByaW5kZXgpIGNvbnN0YW50IHJldHVybnMoYWRkcmVzcyBjb250cmFjdEFkZHJlc3MsIHN0cmluZyBkZXNjcmlwdGlvbiwgc3RyaW5nIHVybCwgYWRkcmVzcyBzdWJtaXR0ZWRCeSwgdWludCB0aW1lKSB7DQogICAgICAgIFJlY29yZCByZWNvcmQgPSByZWNvcmRzW2tleXNbcmluZGV4XV07DQogICAgICAgIGNvbnRyYWN0QWRkcmVzcyA9IGtleXNbcmluZGV4XTsNCiAgICAgICAgZGVzY3JpcHRpb24gPSByZWNvcmQuZGVzY3JpcHRpb247DQogICAgICAgIHVybCA9IHJlY29yZC51cmw7DQogICAgICAgIHN1Ym1pdHRlZEJ5ID0gcmVjb3JkLm93bmVyOw0KICAgICAgICB0aW1lID0gcmVjb3JkLnRpbWU7DQogICAgfQ0KDQogICAgZnVuY3Rpb24gc2V0dGluZ3MoKSBjb25zdGFudCBwdWJsaWMgcmV0dXJucyh1aW50IHJlZ2lzdHJhdGlvbkNvc3QsIHVpbnQgcGVyY2VudFNoYXJlZFdpdGhLZXlIb2xkZXJzKSB7DQogICAgICAgIHJlZ2lzdHJhdGlvbkNvc3QgICAgICAgICAgICA9IFJFR0lTVFJBVElPTl9DT1NUIC8gMSBmaW5uZXk7DQogICAgICAgIHBlcmNlbnRTaGFyZWRXaXRoS2V5SG9sZGVycyA9IEtFWV9IT0xERVJfU0hBUkU7DQogICAgfQ0KDQogICAgZnVuY3Rpb24gZGlzdHJpYnV0ZVZhbHVlKCkgcHJpdmF0ZSB7DQogICAgICAgIGlmIChtc2cudmFsdWUgPT0gMCkgew0KICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICB9DQogICAgICAgIC8vIHNoYXJlIHZhbHVlIHdpdGggYWxsIGtleSBob2xkZXJzDQogICAgICAgIHVpbnQgb3duZXJQZXJjZW50YWdlICA9IDEwMCAtIEtFWV9IT0xERVJfU0hBUkU7DQogICAgICAgIHVpbnQgdmFsdWVGb3JSZWdPd25lciA9IChvd25lclBlcmNlbnRhZ2UgKiBtc2cudmFsdWUpIC8gMTAwOw0KICAgICAgICBvd25lci5zZW5kKHZhbHVlRm9yUmVnT3duZXIpOw0KICAgICAgICB1aW50IHZhbHVlRm9yRWFjaE93bmVyID0gKG1zZy52YWx1ZSAtIHZhbHVlRm9yUmVnT3duZXIpIC8gbnVtUmVjb3JkczsNCiAgICAgICAgaWYgKHZhbHVlRm9yRWFjaE93bmVyIDw9IDApIHsNCiAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgfQ0KICAgICAgICBmb3IgKHVpbnQgayA9IDA7IGsgPCBudW1SZWNvcmRzOyBrKyspIHsNCiAgICAgICAgICAgIHJlY29yZHNba2V5c1trXV0ub3duZXIuc2VuZCh2YWx1ZUZvckVhY2hPd25lcik7DQogICAgICAgIH0NCiAgICB9DQoNCiAgICAvLyBUaGlzIGlzIHRoZSBmdW5jdGlvbiB0aGF0IGFjdHVhbGx5IGluc2VydHMgYSByZWNvcmQuIA0KICAgIGZ1bmN0aW9uIGFkZEdhbWUoYWRkcmVzcyBrZXksIHN0cmluZyBkZXNjcmlwdGlvbiwgc3RyaW5nIHVybCkgew0KICAgICAgICAvLyBPbmx5IGFsbG93IHJlZ2lzdHJhdGlvbiBpZiByZWNlaXZlZCB2YWx1ZSA+PSBSRUdJU1RSQVRJT05fQ09TVA0KICAgICAgICBpZiAobXNnLnZhbHVlIDwgUkVHSVNUUkFUSU9OX0NPU1QpIHsNCiAgICAgICAgICAgIC8vIFJldHVybiB2YWx1ZSBiYWNrIHRvIHNlbmRlci4NCiAgICAgICAgICAgIGlmIChtc2cudmFsdWUgPiAwKSB7DQogICAgICAgICAgICAgICAgbXNnLnNlbmRlci5zZW5kKG1zZy52YWx1ZSk7DQogICAgICAgICAgICB9DQogICAgICAgICAgICByZXR1cm47DQogICAgICAgIH0NCiAgICAgICAgZGlzdHJpYnV0ZVZhbHVlKCk7DQogICAgICAgIGlmIChyZWNvcmRzW2tleV0udGltZSA9PSAwKSB7DQogICAgICAgICAgICByZWNvcmRzW2tleV0udGltZSA9IG5vdzsNCiAgICAgICAgICAgIHJlY29yZHNba2V5XS5vd25lciA9IG1zZy5zZW5kZXI7DQogICAgICAgICAgICByZWNvcmRzW2tleV0ua2V5c0luZGV4ID0ga2V5cy5sZW5ndGg7DQogICAgICAgICAgICBrZXlzLmxlbmd0aCsrOw0KICAgICAgICAgICAga2V5c1trZXlzLmxlbmd0aCAtIDFdID0ga2V5Ow0KICAgICAgICAgICAgcmVjb3Jkc1trZXldLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb247DQogICAgICAgICAgICByZWNvcmRzW2tleV0udXJsID0gdXJsOw0KDQogICAgICAgICAgICBudW1SZWNvcmRzKys7DQogICAgICAgIH0NCiAgICB9DQoNCiAgICBmdW5jdGlvbiAoKSB7IGRpc3RyaWJ1dGVWYWx1ZSgpOyB9DQoNCiAgICAvLyBVcGRhdGVzIHRoZSB2YWx1ZXMgb2YgdGhlIGdpdmVuIHJlY29yZC4NCiAgICBmdW5jdGlvbiB1cGRhdGUoYWRkcmVzcyBrZXksIHN0cmluZyBkZXNjcmlwdGlvbiwgc3RyaW5nIHVybCkgew0KICAgICAgICAvLyBPbmx5IHRoZSBvd25lciBjYW4gdXBkYXRlIGhpcyByZWNvcmQuDQogICAgICAgIGlmIChyZWNvcmRzW2tleV0ub3duZXIgPT0gbXNnLnNlbmRlcikgew0KICAgICAgICAgICAgcmVjb3Jkc1trZXldLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb247DQogICAgICAgICAgICByZWNvcmRzW2tleV0udXJsID0gdXJsOw0KICAgICAgICB9DQogICAgfQ0KDQovKg0KICAgIC8vIFRyYW5zZmVyIG93bmVyc2hpcCBvZiBhIGdpdmVuIHJlY29yZC4NCiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIGtleSwgYWRkcmVzcyBuZXdPd25lcikgew0KICAgICAgICAvLyBPbmx5IGFsbG93IHRyYW5zZmVyIGlmIHJlY2VpdmVkIHZhbHVlID49IFRSQU5TRkVSX0NPU1QNCiAgICAgICAgaWYgKG1zZy52YWx1ZSA8IFRSQU5TRkVSX0NPU1QpIHsNCiAgICAgICAgICAgIC8vIFJldHVybiB2YWx1ZSBiYWNrIHRvIHNlbmRlcg0KICAgICAgICAgICAgaWYgKG1zZy52YWx1ZSA+IDApIHsNCiAgICAgICAgICAgICAgICBtc2cuc2VuZGVyLnNlbmQobXNnLnZhbHVlKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgfQ0KICAgICAgICBkaXN0cmlidXRlVmFsdWUoKTsNCiAgICAgICAgaWYgKHJlY29yZHNba2V5XS5vd25lciA9PSBtc2cuc2VuZGVyKSB7DQogICAgICAgICAgICByZWNvcmRzW2tleV0ub3duZXIgPSBuZXdPd25lcjsNCiAgICAgICAgfQ0KICAgIH0NCiovDQoNCiAgICAvLyBUZWxscyB3aGV0aGVyIGEgZ2l2ZW4ga2V5IGlzIHJlZ2lzdGVyZWQuDQogICAgZnVuY3Rpb24gaXNSZWdpc3RlcmVkKGFkZHJlc3Mga2V5KSBwcml2YXRlIGNvbnN0YW50IHJldHVybnMoYm9vbCkgew0KICAgICAgICByZXR1cm4gcmVjb3Jkc1trZXldLnRpbWUgIT0gMDsNCiAgICB9DQoNCiAgICBmdW5jdGlvbiBnZXRSZWNvcmQoYWRkcmVzcyBrZXkpIHByaXZhdGUgY29uc3RhbnQgcmV0dXJucyhhZGRyZXNzIG93bmVyLCB1aW50IHRpbWUsIHN0cmluZyBkZXNjcmlwdGlvbiwgc3RyaW5nIHVybCkgew0KICAgICAgICBSZWNvcmQgcmVjb3JkID0gcmVjb3Jkc1trZXldOw0KICAgICAgICBvd25lciA9IHJlY29yZC5vd25lcjsNCiAgICAgICAgdGltZSA9IHJlY29yZC50aW1lOw0KICAgICAgICBkZXNjcmlwdGlvbiA9IHJlY29yZC5kZXNjcmlwdGlvbjsNCiAgICAgICAgdXJsID0gcmVjb3JkLnVybDsNCiAgICB9DQoNCiAgICAvLyBSZXR1cm5zIHRoZSBvd25lciBvZiB0aGUgZ2l2ZW4gcmVjb3JkLiBUaGUgb3duZXIgY291bGQgYWxzbyBiZSBnZXQNCiAgICAvLyBieSB1c2luZyB0aGUgZnVuY3Rpb24gZ2V0UmVjb3JkIGJ1dCBpbiB0aGF0IGNhc2UgYWxsIHJlY29yZCBhdHRyaWJ1dGVzIA0KICAgIC8vIGFyZSByZXR1cm5lZC4NCiAgICBmdW5jdGlvbiBnZXRPd25lcihhZGRyZXNzIGtleSkgcHJpdmF0ZSBjb25zdGFudCByZXR1cm5zKGFkZHJlc3MpIHsNCiAgICAgICAgcmV0dXJuIHJlY29yZHNba2V5XS5vd25lcjsNCiAgICB9DQoNCiAgICAvLyBSZXR1cm5zIHRoZSByZWdpc3RyYXRpb24gdGltZSBvZiB0aGUgZ2l2ZW4gcmVjb3JkLiBUaGUgdGltZSBjb3VsZCBhbHNvDQogICAgLy8gYmUgZ2V0IGJ5IHVzaW5nIHRoZSBmdW5jdGlvbiBnZXRSZWNvcmQgYnV0IGluIHRoYXQgY2FzZSBhbGwgcmVjb3JkIGF0dHJpYnV0ZXMNCiAgICAvLyBhcmUgcmV0dXJuZWQuDQogICAgZnVuY3Rpb24gZ2V0VGltZShhZGRyZXNzIGtleSkgcHJpdmF0ZSBjb25zdGFudCByZXR1cm5zKHVpbnQpIHsNCiAgICAgICAgcmV0dXJuIHJlY29yZHNba2V5XS50aW1lOw0KICAgIH0NCg0KICAgIC8vIFJlZ2lzdHJ5IG93bmVyIGNhbiB1c2UgdGhpcyBmdW5jdGlvbiB0byB3aXRoZHJhdyBhbnkgc3VycGx1cyB2YWx1ZSBvd25lZCBieQ0KICAgIC8vIHRoZSByZWdpc3RyeS4NCiAgICBmdW5jdGlvbiBtYWludGFpbih1aW50IHZhbHVlLCB1aW50IGNvc3QpIHsNCiAgICAgICAgaWYgKG1zZy5zZW5kZXIgPT0gb3duZXIpIHsNCiAgICAgICAgICAgIG1zZy5zZW5kZXIuc2VuZCh2YWx1ZSk7DQogICAgICAgICAgICBSRUdJU1RSQVRJT05fQ09TVCA9IGNvc3Q7DQogICAgICAgIH0NCiAgICB9DQoNCiAgICAvLyBSZXR1cm5zIHRoZSB0b3RhbCBudW1iZXIgb2YgcmVjb3JkcyBpbiB0aGlzIHJlZ2lzdHJ5Lg0KICAgIGZ1bmN0aW9uIGdldFRvdGFsUmVjb3JkcygpIHByaXZhdGUgY29uc3RhbnQgcmV0dXJucyh1aW50KSB7DQogICAgICAgIHJldHVybiBudW1SZWNvcmRzOw0KICAgIH0NCg0KICAgIC8vIFRoaXMgZnVuY3Rpb24gaXMgdXNlZCBieSBzdWJjb250cmFjdHMgd2hlbiBhbiBlcnJvciBpcyBkZXRlY3RlZCBhbmQNCiAgICAvLyB0aGUgdmFsdWUgbmVlZHMgdG8gYmUgcmV0dXJuZWQgdG8gdGhlIHRyYW5zYWN0aW9uIG9yaWdpbmF0b3IuDQogICAgZnVuY3Rpb24gcmV0dXJuVmFsdWUoKSBpbnRlcm5hbCB7DQogICAgICAgIGlmIChtc2cudmFsdWUgPiAwKSB7DQogICAgICAgICAgICBtc2cuc2VuZGVyLnNlbmQobXNnLnZhbHVlKTsNCiAgICAgICAgfQ0KICAgIH0NCg0KfQ=='