base 64 content
base64gameRegistry1
	^'Y29udHJhY3QgR2FtZVJlZ2lzdHJ5IHsNCg0KICAgIC8vIFRoaXMgc3RydWN0IGtlZXBzIGFsbCBkYXRhIGZvciBhIFJlY29yZC4NCiAgICBzdHJ1Y3QgUmVjb3JkIHsNCiAgICAgICAgLy8gS2VlcHMgdGhlIGFkZHJlc3Mgb2YgdGhpcyByZWNvcmQgY3JlYXRvci4NCiAgICAgICAgYWRkcmVzcyBvd25lcjsNCiAgICAgICAgLy8gS2VlcHMgdGhlIHRpbWUgd2hlbiB0aGlzIHJlY29yZCB3YXMgY3JlYXRlZC4NCiAgICAgICAgdWludCB0aW1lOw0KICAgICAgICAvLyBLZWVwcyB0aGUgaW5kZXggb2YgdGhlIGtleXMgYXJyYXkgZm9yIGZhc3QgbG9va3VwDQogICAgICAgIHVpbnQga2V5c0luZGV4Ow0KICAgICAgICBzdHJpbmcgZGVzY3JpcHRpb247DQogICAgICAgIHN0cmluZyB1cmw7DQogICAgfQ0KDQogICAgLy8gVGhpcyBtYXBwaW5nIGtlZXBzIHRoZSByZWNvcmRzIG9mIHRoaXMgUmVnaXN0cnkuDQogICAgbWFwcGluZyhhZGRyZXNzID0+IFJlY29yZCkgcmVjb3JkczsNCg0KICAgIC8vIEtlZXBzIHRoZSB0b3RhbCBudW1iZXJzIG9mIHJlY29yZHMgaW4gdGhpcyBSZWdpc3RyeS4NCiAgICB1aW50IHB1YmxpYyBudW1SZWNvcmRzOw0KDQogICAgLy8gS2VlcHMgYSBsaXN0IG9mIGFsbCBrZXlzIHRvIGludGVyYXRlIHRoZSByZWNvcmVkcy4NCiAgICBhZGRyZXNzW10gcHJpdmF0ZSBrZXlzOw0KDQogICAgLy8gVGhlIG93bmVyIG9mIHRoaXMgcmVnaXN0cnkuDQogICAgYWRkcmVzcyBvd25lcjsNCg0KICAgIHVpbnQgcHVibGljIFJFR0lTVFJBVElPTl9DT1NUID0gMTAwIGZpbm5leTsNCiAgICB1aW50IHB1YmxpYyBUUkFOU0ZFUl9DT1NUID0gMTAgZmlubmV5Ow0KICAgIHVpbnQgcHVibGljIFZBTFVFX0RJU1RSSUJVVElPTl9LRVlfT1dORVJTID0gNTA7DQoNCiAgICAvLyBDb25zdHJ1Y3Rvcg0KICAgIGZ1bmN0aW9uIEdhbWVSZWdpc3RyeSgpIHsNCiAgICAgICAgb3duZXIgPSBtc2cuc2VuZGVyOw0KICAgIH0NCg0KICAgIGZ1bmN0aW9uIGRpc3RyaWJ1dGVWYWx1ZSgpIHsNCiAgICAgICAgaWYgKG1zZy52YWx1ZSA9PSAwKSB7DQogICAgICAgICAgICByZXR1cm47DQogICAgICAgIH0NCiAgICAgICAgdWludCBvd25lclBlcmNlbnRhZ2UgPSAxMDAgLSBWQUxVRV9ESVNUUklCVVRJT05fS0VZX09XTkVSUzsNCiAgICAgICAgdWludCB2YWx1ZUZvclJlZ093bmVyID0gKG93bmVyUGVyY2VudGFnZSAqIG1zZy52YWx1ZSkgLyAxMDA7DQogICAgICAgIG93bmVyLnNlbmQodmFsdWVGb3JSZWdPd25lcik7DQogICAgICAgIHVpbnQgdmFsdWVGb3JFYWNoT3duZXIgPSAobXNnLnZhbHVlIC0gdmFsdWVGb3JSZWdPd25lcikgLyBudW1SZWNvcmRzOw0KICAgICAgICBpZiAodmFsdWVGb3JFYWNoT3duZXIgPD0gMCkgew0KICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICB9DQogICAgICAgIGZvciAodWludCBrID0gMDsgayA8IG51bVJlY29yZHM7IGsrKykgew0KICAgICAgICAgICAgcmVjb3Jkc1trZXlzW2tdXS5vd25lci5zZW5kKHZhbHVlRm9yRWFjaE93bmVyKTsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIC8vIFRoaXMgaXMgdGhlIGZ1bmN0aW9uIHRoYXQgYWN0dWFsbHkgaW5zZXJ0cyBhIHJlY29yZC4gDQogICAgZnVuY3Rpb24gcmVnaXN0ZXIoYWRkcmVzcyBrZXksIHN0cmluZyBkZXNjcmlwdGlvbiwgc3RyaW5nIHVybCkgew0KICAgICAgICAvLyBPbmx5IGFsbG93IHJlZ2lzdHJhdGlvbiBpZiByZWNlaXZlZCB2YWx1ZSA+PSBSRUdJU1RSQVRJT05fQ09TVA0KICAgICAgICBpZiAobXNnLnZhbHVlIDwgUkVHSVNUUkFUSU9OX0NPU1QpIHsNCiAgICAgICAgICAgIC8vIFJldHVybiB2YWx1ZSBiYWNrIHRvIHNlbmRlci4NCiAgICAgICAgICAgIGlmIChtc2cudmFsdWUgPiAwKSB7DQogICAgICAgICAgICAgICAgbXNnLnNlbmRlci5zZW5kKG1zZy52YWx1ZSk7DQogICAgICAgICAgICB9DQogICAgICAgICAgICByZXR1cm47DQogICAgICAgIH0NCiAgICAgICAgZGlzdHJpYnV0ZVZhbHVlKCk7DQogICAgICAgIGlmIChyZWNvcmRzW2tleV0udGltZSA9PSAwKSB7DQogICAgICAgICAgICByZWNvcmRzW2tleV0udGltZSA9IG5vdzsNCiAgICAgICAgICAgIHJlY29yZHNba2V5XS5vd25lciA9IG1zZy5zZW5kZXI7DQogICAgICAgICAgICByZWNvcmRzW2tleV0ua2V5c0luZGV4ID0ga2V5cy5sZW5ndGg7DQogICAgICAgICAgICBrZXlzLmxlbmd0aCsrOw0KICAgICAgICAgICAga2V5c1trZXlzLmxlbmd0aCAtIDFdID0ga2V5Ow0KICAgICAgICAgICAgcmVjb3Jkc1trZXldLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb247DQogICAgICAgICAgICByZWNvcmRzW2tleV0udXJsID0gdXJsOw0KDQogICAgICAgICAgICBudW1SZWNvcmRzKys7DQogICAgICAgIH0NCiAgICB9DQoNCiAgICAvLyBVcGRhdGVzIHRoZSB2YWx1ZXMgb2YgdGhlIGdpdmVuIHJlY29yZC4NCiAgICBmdW5jdGlvbiB1cGRhdGUoYWRkcmVzcyBrZXksIHN0cmluZyBkZXNjcmlwdGlvbiwgc3RyaW5nIHVybCkgew0KICAgICAgICAvLyBPbmx5IHRoZSBvd25lciBjYW4gdXBkYXRlIGhpcyByZWNvcmQuDQogICAgICAgIGlmIChyZWNvcmRzW2tleV0ub3duZXIgPT0gbXNnLnNlbmRlcikgew0KICAgICAgICAgICAgcmVjb3Jkc1trZXldLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb247DQogICAgICAgICAgICByZWNvcmRzW2tleV0udXJsID0gdXJsOw0KICAgICAgICB9DQogICAgfQ0KDQogICAgLy8gVW5yZWdpc3RlciBhIGdpdmVuIHJlY29yZA0KICAgIGZ1bmN0aW9uIHVucmVnaXN0ZXIoYWRkcmVzcyBrZXkpIHsNCiAgICAgICAgaWYgKHJlY29yZHNba2V5XS5vd25lciA9PSBtc2cuc2VuZGVyKSB7DQogICAgICAgICAgICB1aW50IGtleXNJbmRleCA9IHJlY29yZHNba2V5XS5rZXlzSW5kZXg7DQogICAgICAgICAgICBkZWxldGUgcmVjb3Jkc1trZXldOw0KICAgICAgICAgICAgbnVtUmVjb3Jkcy0tOw0KICAgICAgICAgICAga2V5c1trZXlzSW5kZXhdID0ga2V5c1trZXlzLmxlbmd0aCAtIDFdOw0KICAgICAgICAgICAgcmVjb3Jkc1trZXlzW2tleXNJbmRleF1dLmtleXNJbmRleCA9IGtleXNJbmRleDsNCiAgICAgICAgICAgIGtleXMubGVuZ3RoLS07DQogICAgICAgIH0NCiAgICB9DQoNCiAgICAvLyBUcmFuc2ZlciBvd25lcnNoaXAgb2YgYSBnaXZlbiByZWNvcmQuDQogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBrZXksIGFkZHJlc3MgbmV3T3duZXIpIHsNCiAgICAgICAgLy8gT25seSBhbGxvdyB0cmFuc2ZlciBpZiByZWNlaXZlZCB2YWx1ZSA+PSBUUkFOU0ZFUl9DT1NUDQogICAgICAgIGlmIChtc2cudmFsdWUgPCBUUkFOU0ZFUl9DT1NUKSB7DQogICAgICAgICAgICAvLyBSZXR1cm4gdmFsdWUgYmFjayB0byBzZW5kZXINCiAgICAgICAgICAgIGlmIChtc2cudmFsdWUgPiAwKSB7DQogICAgICAgICAgICAgICAgbXNnLnNlbmRlci5zZW5kKG1zZy52YWx1ZSk7DQogICAgICAgICAgICB9DQogICAgICAgICAgICByZXR1cm47DQogICAgICAgIH0NCiAgICAgICAgZGlzdHJpYnV0ZVZhbHVlKCk7DQogICAgICAgIGlmIChyZWNvcmRzW2tleV0ub3duZXIgPT0gbXNnLnNlbmRlcikgew0KICAgICAgICAgICAgcmVjb3Jkc1trZXldLm93bmVyID0gbmV3T3duZXI7DQogICAgICAgIH0NCiAgICB9DQoNCiAgICAvLyBUZWxscyB3aGV0aGVyIGEgZ2l2ZW4ga2V5IGlzIHJlZ2lzdGVyZWQuDQogICAgZnVuY3Rpb24gaXNSZWdpc3RlcmVkKGFkZHJlc3Mga2V5KSByZXR1cm5zKGJvb2wpIHsNCiAgICAgICAgcmV0dXJuIHJlY29yZHNba2V5XS50aW1lICE9IDA7DQogICAgfQ0KDQogICAgZnVuY3Rpb24gZ2V0UmVjb3JkQXRJbmRleCh1aW50IHJpbmRleCkgcmV0dXJucyhhZGRyZXNzIGtleSwgYWRkcmVzcyBvd25lciwgdWludCB0aW1lLCBzdHJpbmcgZGVzY3JpcHRpb24sIHN0cmluZyB1cmwpIHsNCiAgICAgICAgUmVjb3JkIHJlY29yZCA9IHJlY29yZHNba2V5c1tyaW5kZXhdXTsNCiAgICAgICAga2V5ID0ga2V5c1tyaW5kZXhdOw0KICAgICAgICBvd25lciA9IHJlY29yZC5vd25lcjsNCiAgICAgICAgdGltZSA9IHJlY29yZC50aW1lOw0KICAgICAgICBkZXNjcmlwdGlvbiA9IHJlY29yZC5kZXNjcmlwdGlvbjsNCiAgICAgICAgdXJsID0gcmVjb3JkLnVybDsNCiAgICB9DQoNCiAgICBmdW5jdGlvbiBnZXRSZWNvcmQoYWRkcmVzcyBrZXkpIHJldHVybnMoYWRkcmVzcyBvd25lciwgdWludCB0aW1lLCBzdHJpbmcgZGVzY3JpcHRpb24sIHN0cmluZyB1cmwpIHsNCiAgICAgICAgUmVjb3JkIHJlY29yZCA9IHJlY29yZHNba2V5XTsNCiAgICAgICAgb3duZXIgPSByZWNvcmQub3duZXI7DQogICAgICAgIHRpbWUgPSByZWNvcmQudGltZTsNCiAgICAgICAgZGVzY3JpcHRpb24gPSByZWNvcmQuZGVzY3JpcHRpb247DQogICAgICAgIHVybCA9IHJlY29yZC51cmw7DQogICAgfQ0KDQogICAgLy8gUmV0dXJucyB0aGUgb3duZXIgb2YgdGhlIGdpdmVuIHJlY29yZC4gVGhlIG93bmVyIGNvdWxkIGFsc28gYmUgZ2V0DQogICAgLy8gYnkgdXNpbmcgdGhlIGZ1bmN0aW9uIGdldFJlY29yZCBidXQgaW4gdGhhdCBjYXNlIGFsbCByZWNvcmQgYXR0cmlidXRlcyANCiAgICAvLyBhcmUgcmV0dXJuZWQuDQogICAgZnVuY3Rpb24gZ2V0T3duZXIoYWRkcmVzcyBrZXkpIHJldHVybnMoYWRkcmVzcykgew0KICAgICAgICByZXR1cm4gcmVjb3Jkc1trZXldLm93bmVyOw0KICAgIH0NCg0KICAgIC8vIFJldHVybnMgdGhlIHJlZ2lzdHJhdGlvbiB0aW1lIG9mIHRoZSBnaXZlbiByZWNvcmQuIFRoZSB0aW1lIGNvdWxkIGFsc28NCiAgICAvLyBiZSBnZXQgYnkgdXNpbmcgdGhlIGZ1bmN0aW9uIGdldFJlY29yZCBidXQgaW4gdGhhdCBjYXNlIGFsbCByZWNvcmQgYXR0cmlidXRlcw0KICAgIC8vIGFyZSByZXR1cm5lZC4NCiAgICBmdW5jdGlvbiBnZXRUaW1lKGFkZHJlc3Mga2V5KSByZXR1cm5zKHVpbnQpIHsNCiAgICAgICAgcmV0dXJuIHJlY29yZHNba2V5XS50aW1lOw0KICAgIH0NCg0KICAgIC8vIFJldHVybnMgdGhlIHRvdGFsIG51bWJlciBvZiByZWNvcmRzIGluIHRoaXMgcmVnaXN0cnkuDQogICAgZnVuY3Rpb24gZ2V0VG90YWxSZWNvcmRzKCkgcmV0dXJucyh1aW50KSB7DQogICAgICAgIHJldHVybiBudW1SZWNvcmRzOw0KICAgIH0NCg0KICAgIC8vIFRoaXMgZnVuY3Rpb24gaXMgdXNlZCBieSBzdWJjb250cmFjdHMgd2hlbiBhbiBlcnJvciBpcyBkZXRlY3RlZCBhbmQNCiAgICAvLyB0aGUgdmFsdWUgbmVlZHMgdG8gYmUgcmV0dXJuZWQgdG8gdGhlIHRyYW5zYWN0aW9uIG9yaWdpbmF0b3IuDQogICAgZnVuY3Rpb24gcmV0dXJuVmFsdWUoKSBpbnRlcm5hbCB7DQogICAgICAgIGlmIChtc2cudmFsdWUgPiAwKSB7DQogICAgICAgICAgICBtc2cuc2VuZGVyLnNlbmQobXNnLnZhbHVlKTsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIC8vIFJlZ2lzdHJ5IG93bmVyIGNhbiB1c2UgdGhpcyBmdW5jdGlvbiB0byB3aXRoZHJhdyBhbnkgdmFsdWUgb3duZWQgYnkNCiAgICAvLyB0aGUgcmVnaXN0cnkuDQogICAgZnVuY3Rpb24gd2l0aGRyYXcodWludCB2YWx1ZSkgew0KICAgICAgICBpZiAobXNnLnNlbmRlciA9PSBvd25lcikgew0KICAgICAgICAgICAgbXNnLnNlbmRlci5zZW5kKHZhbHVlKTsNCiAgICAgICAgfQ0KICAgIH0NCg0KfQ=='