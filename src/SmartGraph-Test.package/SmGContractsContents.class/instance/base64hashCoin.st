base 64 content
base64hashCoin
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC4xMTsNCg0KaW50ZXJmYWNlIElFUkMyMCB7DQogICAgZnVuY3Rpb24gdG90YWxTdXBwbHkoKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IHRvdGFsU3VwcGx5KTsNCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSk7DQogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpOw0KICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7DQogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsNCiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKTsNCiAgICANCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgX2Zyb20sIGFkZHJlc3MgaW5kZXhlZCBfdG8sIHVpbnQyNTYgX3ZhbHVlKTsNCiAgICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgX293bmVyLCBhZGRyZXNzIGluZGV4ZWQgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKTsNCn0NCg0KLyoqDQogKiBAdGl0bGUgU2FmZU1hdGgNCiAqIEBkZXYgTWF0aCBvcGVyYXRpb25zIHdpdGggc2FmZXR5IGNoZWNrcyB0aGF0IHRocm93IG9uIGVycm9yDQogKi8NCiANCmxpYnJhcnkgU2FmZU1hdGggew0KICBmdW5jdGlvbiBtdWwodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsNCiAgICB1aW50MjU2IGMgPSBhICogYjsNCiAgICBhc3NlcnQoYSA9PSAwIHx8IGMgLyBhID09IGIpOw0KICAgIHJldHVybiBjOw0KICB9DQoNCiAgZnVuY3Rpb24gZGl2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7DQogICAgLy8gYXNzZXJ0KGIgPiAwKTsgLy8gU29saWRpdHkgYXV0b21hdGljYWxseSB0aHJvd3Mgd2hlbiBkaXZpZGluZyBieSAwDQogICAgdWludDI1NiBjID0gYSAvIGI7DQogICAgLy8gYXNzZXJ0KGEgPT0gYiAqIGMgKyBhICUgYik7IC8vIFRoZXJlIGlzIG5vIGNhc2UgaW4gd2hpY2ggdGhpcyBkb2Vzbid0IGhvbGQNCiAgICByZXR1cm4gYzsNCiAgfQ0KDQogIGZ1bmN0aW9uIHN1Yih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1Nikgew0KICAgIGFzc2VydChiIDw9IGEpOw0KICAgIHJldHVybiBhIC0gYjsNCiAgfQ0KDQogIGZ1bmN0aW9uIGFkZCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1Nikgew0KICAgIHVpbnQyNTYgYyA9IGEgKyBiOw0KICAgIGFzc2VydChjID49IGEpOw0KICAgIHJldHVybiBjOw0KICB9DQp9DQoNCmNvbnRyYWN0IGhhc2hDb2luIGlzIElFUkMyMCB7DQogICAgDQogICAgdXNpbmcgU2FmZU1hdGggZm9yIHVpbnQyNTY7DQogICAgDQogICAgdWludCBwdWJsaWMgX3RvdGFsU3VwcGx5ID0gMDsNCg0KICAgIHN0cmluZyBwdWJsaWMgY29uc3RhbnQgc3ltYm9sID0gIkhBU0giOw0KICAgIHN0cmluZyBwdWJsaWMgY29uc3RhbnQgbmFtZSA9ICJIYXNoIENvaW4iOw0KICAgIHN0cmluZyBwdWJsaWMgdmVyc2lvbiA9ICJIQVNIXzAuMSI7DQogICAgdWludDggcHVibGljIGNvbnN0YW50IGRlY2ltYWxzID0gMTg7DQogICAgDQogICAgLy8gMSBFVEggPSA1LDAwMCBIYXNoIENvaW5zDQogICAgdWludDI1NiBwdWJsaWMgY29uc3RhbnQgUkFURSA9IDUwMDA7DQogICAgDQogICAgYWRkcmVzcyBwdWJsaWMgb3duZXI7DQogICAgDQogICAgbWFwcGluZyhhZGRyZXNzID0+IHVpbnQyNTYpIGJhbGFuY2VzOw0KICAgIG1hcHBpbmcoYWRkcmVzcyA9PiBtYXBwaW5nKGFkZHJlc3MgPT4gdWludDI1NikpIGFsbG93ZWQ7DQogICAgDQogICAgZnVuY3Rpb24gKCkgcGF5YWJsZSB7DQogICAgICAgIGNyZWF0ZVRva2VucygpOw0KICAgIH0NCiAgICANCiAgICBmdW5jdGlvbiBoYXNoQ29pbigpIHsNCiAgICAgICAgb3duZXIgPSBtc2cuc2VuZGVyOw0KICAgIH0NCiAgICANCiAgICBldmVudCBCdXJuKGFkZHJlc3MgaW5kZXhlZCBmcm9tLCB1aW50MjU2IHZhbHVlKTsNCiAgICANCiAgICBmdW5jdGlvbiBjcmVhdGVUb2tlbnMoKSBwYXlhYmxlIHsNCiAgICAgICAgcmVxdWlyZShtc2cudmFsdWUgPiAwKTsNCiAgICAgICAgDQogICAgICAgIHVpbnQyNTYgdG9rZW5zID0gbXNnLnZhbHVlLm11bChSQVRFKTsNCiAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSBiYWxhbmNlc1ttc2cuc2VuZGVyXS5hZGQodG9rZW5zKTsNCiAgICAgICAgX3RvdGFsU3VwcGx5ID0gX3RvdGFsU3VwcGx5LmFkZCh0b2tlbnMpOw0KICAgICAgICANCiAgICAgICAgb3duZXIudHJhbnNmZXIobXNnLnZhbHVlKTsNCiAgICB9DQogICAgDQogICAgZnVuY3Rpb24gdG90YWxTdXBwbHkoKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IHRvdGFsU3VwcGx5KSB7DQogICAgICAgIHJldHVybiBfdG90YWxTdXBwbHk7DQogICAgfQ0KICAgIA0KICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKSB7DQogICAgICAgIHJldHVybiBiYWxhbmNlc1tfb3duZXJdOw0KICAgIH0NCiAgICANCiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcykgew0KICAgICAgICByZXF1aXJlKA0KICAgICAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPj0gX3ZhbHVlDQogICAgICAgICAgICAmJiBfdmFsdWUgPiAwDQogICAgICAgICAgICApOw0KICAgICAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSBiYWxhbmNlc1ttc2cuc2VuZGVyXS5zdWIoX3ZhbHVlKTsNCiAgICAgICAgICAgIGJhbGFuY2VzW190b10gPSBiYWxhbmNlc1tfdG9dLmFkZChfdmFsdWUpOw0KICAgICAgICAgICAgVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOw0KICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgfQ0KICAgIA0KICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcykgew0KICAgICAgICByZXF1aXJlICgNCiAgICAgICAgICAgIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdID49IF92YWx1ZQ0KICAgICAgICAgICAgJiYgYmFsYW5jZXNbX2Zyb21dID49IF92YWx1ZQ0KICAgICAgICAgICAgJiYgX3ZhbHVlID4gMA0KICAgICAgICAgICAgKTsNCiAgICAgICAgICAgIGJhbGFuY2VzW19mcm9tXSA9IGJhbGFuY2VzW19mcm9tXS5zdWIoX3ZhbHVlKTsNCiAgICAgICAgICAgIGJhbGFuY2VzIFtfdG9dID0gYmFsYW5jZXNbX3RvXS5hZGQoX3ZhbHVlKTsNCiAgICAgICAgICAgIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdID0gYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0uc3ViKF92YWx1ZSk7DQogICAgICAgICAgICBUcmFuc2ZlcihfZnJvbSwgX3RvLCBfdmFsdWUpOw0KICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgfQ0KICAgIA0KICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcykgew0KICAgICAgICBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IF92YWx1ZTsNCiAgICAgICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF92YWx1ZSk7DQogICAgICAgIHJldHVybiB0cnVlOw0KICAgIH0NCiAgICANCiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKSB7DQogICAgICAgIHJldHVybiBhbGxvd2VkW19vd25lcl1bX3NwZW5kZXJdOw0KICAgIH0NCiAgICANCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgX2Zyb20sIGFkZHJlc3MgaW5kZXhlZCBfdG8sIHVpbnQyNTYgX3ZhbHVlKTsNCiAgICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgX293bmVyLCBhZGRyZXNzIGluZGV4ZWQgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKTsNCiAgICANCg0KfQ=='