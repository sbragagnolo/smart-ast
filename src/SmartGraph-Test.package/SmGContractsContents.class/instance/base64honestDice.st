base 64 content
base64honestDice
	^'Y29udHJhY3QgSG9uZXN0RGljZSB7DQoJDQoJZXZlbnQgQmV0KGFkZHJlc3MgaW5kZXhlZCB1c2VyLCB1aW50IGJsb2NrbnVtLCB1aW50MjU2IGFtb3VudCwgdWludCBjaGFuY2UpOw0KCWV2ZW50IFdvbihhZGRyZXNzIGluZGV4ZWQgdXNlciwgdWludDI1NiBhbW91bnQsIHVpbnQgY2hhbmNlKTsNCgkNCglzdHJ1Y3QgUm9sbCB7DQoJCXVpbnQyNTYgdmFsdWU7DQoJCXVpbnQgY2hhbmNlOw0KCQl1aW50IGJsb2NrbnVtOw0KCQlieXRlczMyIHNlY3JldEhhc2g7DQoJCWJ5dGVzMzIgc2VydmVyU2VlZDsNCgl9DQoJDQoJdWludCBiZXRzTG9ja2VkOw0KCWFkZHJlc3Mgb3duZXI7DQoJYWRkcmVzcyBmZWVkOwkJCQkgICANCgl1aW50MjU2IG1pbmltdW1CZXQgPSAxICogMTAwMDAwMDAwMDAwMDAwMDAwMDsgLy8gMSBFdGhlcg0KCXVpbnQyNTYgY29uc3RhbnQgbWF4UGF5b3V0ID0gNTsgLy8gNSUgb2YgYmFua3JvbGwNCgl1aW50IGNvbnN0YW50IHNlZWRDb3N0ID0gMTAwMDAwMDAwMDAwMDAwMDAwOyAvLyBUaGlzIGlzIHRoZSBjb3N0IG9mIHN1cHBseWluIHRoZSBzZXJ2ZXIgc2VlZCwgZGVkdWN0IGl0Ow0KCW1hcHBpbmcgKGFkZHJlc3MgPT4gUm9sbCkgcm9sbHM7DQoJdWludCBjb25zdGFudCB0aW1lb3V0ID0gMjA7IC8vIDUgTWludXRlcw0KCQ0KCWZ1bmN0aW9uIEhvbmVzdERpY2UoKSB7DQoJCW93bmVyID0gbXNnLnNlbmRlcjsNCgkJZmVlZCA9IG1zZy5zZW5kZXI7DQoJfQ0KCQ0KCWZ1bmN0aW9uIHJvbGwodWludCBjaGFuY2UsIGJ5dGVzMzIgc2VjcmV0SGFzaCkgew0KCQlpZiAoY2hhbmNlIDwgMSB8fCBjaGFuY2UgPiAyNTUgfHwgbXNnLnZhbHVlIDwgbWluaW11bUJldCB8fCBjYWxjV2lubmluZ3MobXNnLnZhbHVlLCBjaGFuY2UpID4gZ2V0TWF4UGF5b3V0KCkgfHwgYmV0c0xvY2tlZCAhPSAwKSB7IA0KCQkJbXNnLnNlbmRlci5zZW5kKG1zZy52YWx1ZSk7IC8vIFJlZnVuZA0KCQkJcmV0dXJuOw0KCQl9DQoJCXJvbGxzW21zZy5zZW5kZXJdID0gUm9sbChtc2cudmFsdWUsIGNoYW5jZSwgYmxvY2subnVtYmVyLCBzZWNyZXRIYXNoLCAwKTsNCgkJQmV0KG1zZy5zZW5kZXIsIGJsb2NrLm51bWJlciwgbXNnLnZhbHVlLCBjaGFuY2UpOw0KCX0NCgkNCglmdW5jdGlvbiBzZXJ2ZXJTZWVkKGFkZHJlc3MgdXNlciwgYnl0ZXMzMiBzZWVkKSB7DQoJCS8vIFRoZSBzZXJ2ZXIgY2FsbHMgdGhpcyB3aXRoIGEgcmFuZG9tIHNlZWQNCgkJaWYgKG1zZy5zZW5kZXIgIT0gZmVlZCkgcmV0dXJuOw0KCQlpZiAocm9sbHNbdXNlcl0uc2VydmVyU2VlZCAhPSAwKSByZXR1cm47DQoJCXJvbGxzW3VzZXJdLnNlcnZlclNlZWQgPSBzZWVkOw0KCX0NCgkNCglmdW5jdGlvbiBoYXNoVG8yNTYoYnl0ZXMzMiBoYXNoKSBjb25zdGFudCByZXR1cm5zICh1aW50IF9yKSB7DQoJCS8vIFJldHVybnMgYSBudW1iZXIgYmV0d2VlbiAwIC0gMjU1IGZyb20gYSBoYXNoDQoJCXJldHVybiB1aW50KGhhc2gpICYgMHhmZjsNCgl9DQoJDQoJZnVuY3Rpb24gaGFzaChieXRlczMyIGlucHV0KSBjb25zdGFudCByZXR1cm5zICh1aW50IF9yKSB7DQoJCS8vIFNpbXBsZSBzaGEzIGhhc2guIE5vdCB0byBiZSBjYWxsZWQgdmlhIHRoZSBibG9ja2NoYWluDQoJCXJldHVybiB1aW50KHNoYTMoaW5wdXQpKTsNCgl9DQoJDQoJZnVuY3Rpb24gaXNSZWFkeSgpIGNvbnN0YW50IHJldHVybnMgKGJvb2wgX3IpIHsNCgkJcmV0dXJuIGlzUmVhZHlGb3IobXNnLnNlbmRlcik7DQoJfQ0KCQ0KCWZ1bmN0aW9uIGlzUmVhZHlGb3IoYWRkcmVzcyBfdXNlcikgY29uc3RhbnQgcmV0dXJucyAoYm9vbCBfcikgew0KCQlSb2xsIHIgPSByb2xsc1tfdXNlcl07DQoJCWlmIChyLnNlcnZlclNlZWQgPT0gMCkgcmV0dXJuIGZhbHNlOw0KCQlyZXR1cm4gdHJ1ZTsNCgl9DQoJDQoJZnVuY3Rpb24gZ2V0UmVzdWx0KGJ5dGVzMzIgc2VjcmV0KSBjb25zdGFudCByZXR1cm5zICh1aW50IF9yKSB7DQoJCS8vIEdldCB0aGUgcmVzdWx0IG51bWJlciBvZiB0aGUgcm9sbA0KCQlSb2xsIHIgPSByb2xsc1ttc2cuc2VuZGVyXTsNCgkJaWYgKHIuc2VydmVyU2VlZCA9PSAwKSByZXR1cm47DQoJCWlmIChzaGEzKHNlY3JldCkgIT0gci5zZWNyZXRIYXNoKSByZXR1cm47DQoJCXJldHVybiBoYXNoVG8yNTYoc2hhMyhzZWNyZXQsIHIuc2VydmVyU2VlZCkpOw0KCX0NCgkNCglmdW5jdGlvbiBkaWRXaW4oYnl0ZXMzMiBzZWNyZXQpIGNvbnN0YW50IHJldHVybnMgKGJvb2wgX3IpIHsNCgkJLy8gUmV0dXJucyBpZiB0aGUgcGxheWVyIHdvbiBvciBub3QNCgkJUm9sbCByID0gcm9sbHNbbXNnLnNlbmRlcl07DQoJCWlmIChyLnNlcnZlclNlZWQgPT0gMCkgcmV0dXJuOw0KCQlpZiAoc2hhMyhzZWNyZXQpICE9IHIuc2VjcmV0SGFzaCkgcmV0dXJuOw0KCQlpZiAoaGFzaFRvMjU2KHNoYTMoc2VjcmV0LCByLnNlcnZlclNlZWQpKSA8IHIuY2hhbmNlKSB7IC8vIFdpbm5lcg0KCQkJcmV0dXJuIHRydWU7DQoJCX0NCgkJcmV0dXJuIGZhbHNlOw0KCX0NCgkNCglmdW5jdGlvbiBjYWxjV2lubmluZ3ModWludDI1NiB2YWx1ZSwgdWludCBjaGFuY2UpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgX3IpIHsNCgkJLy8gMSUgaG91c2UgZWRnZQ0KCQlyZXR1cm4gKHZhbHVlICogOTkgLyAxMDApICogMjU2IC8gY2hhbmNlOw0KCX0NCgkNCglmdW5jdGlvbiBnZXRNYXhQYXlvdXQoKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IF9yKSB7DQoJCXJldHVybiB0aGlzLmJhbGFuY2UgKiBtYXhQYXlvdXQgLyAxMDA7DQoJfQ0KCQ0KCWZ1bmN0aW9uIGNsYWltKGJ5dGVzMzIgc2VjcmV0KSB7DQoJCVJvbGwgciA9IHJvbGxzW21zZy5zZW5kZXJdOw0KCQlpZiAoci5zZXJ2ZXJTZWVkID09IDApIHJldHVybjsNCgkJaWYgKHNoYTMoc2VjcmV0KSAhPSByLnNlY3JldEhhc2gpIHJldHVybjsNCgkJaWYgKGhhc2hUbzI1NihzaGEzKHNlY3JldCwgci5zZXJ2ZXJTZWVkKSkgPCByLmNoYW5jZSkgeyAvLyBXaW5uZXINCgkJCW1zZy5zZW5kZXIuc2VuZChjYWxjV2lubmluZ3Moci52YWx1ZSwgci5jaGFuY2UpIC0gc2VlZENvc3QpOw0KCQkJV29uKG1zZy5zZW5kZXIsIHIudmFsdWUsIHIuY2hhbmNlKTsNCgkJfQ0KCQkNCgkJZGVsZXRlIHJvbGxzW21zZy5zZW5kZXJdOw0KCX0NCgkNCglmdW5jdGlvbiBjYW5DbGFpbVRpbWVvdXQoKSBjb25zdGFudCByZXR1cm5zIChib29sIF9yKSB7DQoJCVJvbGwgciA9IHJvbGxzW21zZy5zZW5kZXJdOw0KCQlpZiAoci5zZXJ2ZXJTZWVkICE9IDApIHJldHVybiBmYWxzZTsNCgkJaWYgKHIudmFsdWUgPD0gMCkgcmV0dXJuIGZhbHNlOw0KCQlpZiAoYmxvY2subnVtYmVyIDwgci5ibG9ja251bSArIHRpbWVvdXQpIHJldHVybiBmYWxzZTsNCgkJcmV0dXJuIHRydWU7DQoJfQ0KCQ0KCWZ1bmN0aW9uIGNsYWltVGltZW91dCgpIHsNCgkJLy8gR2V0IHlvdXIgbW9uaWVzIGJhY2sgaWYgdGhlIHNlcnZlciBpc24ndCByZXNwb25kaW5nIHdpdGggYSBzZWVkDQoJCWlmICghY2FuQ2xhaW1UaW1lb3V0KCkpIHJldHVybjsNCgkJUm9sbCByID0gcm9sbHNbbXNnLnNlbmRlcl07DQoJCW1zZy5zZW5kZXIuc2VuZChyLnZhbHVlKTsNCgkJZGVsZXRlIHJvbGxzW21zZy5zZW5kZXJdOw0KCX0NCgkNCglmdW5jdGlvbiBnZXRNaW5pbXVtQmV0KCkgY29uc3RhbnQgcmV0dXJucyAodWludCBfcikgew0KCQlyZXR1cm4gbWluaW11bUJldDsNCgl9DQoJDQoJZnVuY3Rpb24gZ2V0QmFua3JvbGwoKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IF9yKSB7DQoJCXJldHVybiB0aGlzLmJhbGFuY2U7DQoJfQ0KCQ0KCWZ1bmN0aW9uIGdldEJldHNMb2NrZWQoKSBjb25zdGFudCByZXR1cm5zICh1aW50IF9yKSB7DQoJCXJldHVybiBiZXRzTG9ja2VkOw0KCX0NCgkNCglmdW5jdGlvbiBzZXRGZWVkKGFkZHJlc3MgbmV3RmVlZCkgew0KCQlpZiAobXNnLnNlbmRlciAhPSBvd25lcikgcmV0dXJuOw0KCQlmZWVkID0gbmV3RmVlZDsNCgl9DQoJDQoJZnVuY3Rpb24gbG9ja0JldHNGb3JXaXRoZHJhdygpIHsNCgkJaWYgKG1zZy5zZW5kZXIgIT0gb3duZXIpIHJldHVybjsNCgkJdWludCBiZXRzTG9ja2VkID0gYmxvY2subnVtYmVyOw0KCX0NCgkNCglmdW5jdGlvbiB1bmxvY2tCZXRzKCkgew0KCQlpZiAobXNnLnNlbmRlciAhPSBvd25lcikgcmV0dXJuOw0KCQl1aW50IGJldHNMb2NrZWQgPSAwOw0KCX0NCgkNCglmdW5jdGlvbiB3aXRoZHJhdyh1aW50IGFtb3VudCkgew0KCQlpZiAobXNnLnNlbmRlciAhPSBvd25lcikgcmV0dXJuOw0KCQlpZiAoYmV0c0xvY2tlZCA9PSAwIHx8IGJsb2NrLm51bWJlciA8IGJldHNMb2NrZWQgKyA1NzYwKSByZXR1cm47DQoJCW93bmVyLnNlbmQoYW1vdW50KTsNCgl9DQp9'