base 64 content
base64iPOcoinHotelShares1
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC4xMzsNCg0KLy8gVGhlIElQT2NvaW5Ib3RlbFNoYXJlcyBjb250cmFjdA0KLy8gKzM1Nzk5MDU3NTU3DQovLyAmIzE2OTtJVCBDb25zdWx0aW5nIEdyb3VwIEx0ZA0KLy8gVGhlcmUgaXMgbm8gbGF3IHN0cm9uZ2VyIHRoYW4gdGhlIGNvZGUNCg0KbGlicmFyeSBTYWZlTWF0aCB7DQogIGZ1bmN0aW9uIG11bCh1aW50IGEsIHVpbnQgYikgaW50ZXJuYWwgcmV0dXJucyAodWludCkgew0KICAgIHVpbnQgYyA9IGEgKiBiOw0KICAgIGFzc2VydChhID09IDAgfHwgYyAvIGEgPT0gYik7DQogICAgcmV0dXJuIGM7DQogIH0NCiAgZnVuY3Rpb24gZGl2KHVpbnQgYSwgdWludCBiKSBpbnRlcm5hbCByZXR1cm5zICh1aW50KSB7DQogICAgYXNzZXJ0KGIgPiAwKTsNCiAgICB1aW50IGMgPSBhIC8gYjsNCiAgICBhc3NlcnQoYSA9PSBiICogYyArIGEgJSBiKTsNCiAgICByZXR1cm4gYzsNCiAgfQ0KICBmdW5jdGlvbiBzdWIodWludCBhLCB1aW50IGIpIGludGVybmFsIHJldHVybnMgKHVpbnQpIHsNCiAgICBhc3NlcnQoYiA8PSBhKTsNCiAgICByZXR1cm4gYSAtIGI7DQogIH0NCiAgZnVuY3Rpb24gYWRkKHVpbnQgYSwgdWludCBiKSBpbnRlcm5hbCByZXR1cm5zICh1aW50KSB7DQogICAgdWludCBjID0gYSArIGI7DQogICAgYXNzZXJ0KGMgPj0gYSk7DQogICAgcmV0dXJuIGM7DQogIH0NCiAgZnVuY3Rpb24gbWF4NjQodWludDY0IGEsIHVpbnQ2NCBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50NjQpIHsNCiAgICByZXR1cm4gYSA+PSBiID8gYSA6IGI7DQogIH0NCiAgZnVuY3Rpb24gbWluNjQodWludDY0IGEsIHVpbnQ2NCBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50NjQpIHsNCiAgICByZXR1cm4gYSA8IGIgPyBhIDogYjsNCiAgfQ0KICBmdW5jdGlvbiBtYXgyNTYodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsNCiAgICByZXR1cm4gYSA+PSBiID8gYSA6IGI7DQogIH0NCiAgZnVuY3Rpb24gbWluMjU2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7DQogICAgcmV0dXJuIGEgPCBiID8gYSA6IGI7DQogIH0NCiAgZnVuY3Rpb24gYXNzZXJ0KGJvb2wgYXNzZXJ0aW9uKSBpbnRlcm5hbCB7DQogICAgaWYgKCFhc3NlcnRpb24pIHsNCiAgICAgIHRocm93Ow0KICAgIH0NCiAgfQ0KfQ0KY29udHJhY3QgT3duYWJsZSB7DQogICAgYWRkcmVzcyBwdWJsaWMgb3duZXI7DQogICAgZnVuY3Rpb24gT3duYWJsZSgpIHsNCiAgICAgICAgb3duZXIgPSBtc2cuc2VuZGVyOw0KICAgIH0NCiAgICBtb2RpZmllciBvbmx5T3duZXIgew0KICAgICAgICBpZiAobXNnLnNlbmRlciAhPSBvd25lcikgdGhyb3c7DQogICAgICAgIF87DQogICAgfQ0KICAgIGZ1bmN0aW9uIHRyYW5zZmVyT3duZXJzaGlwKGFkZHJlc3MgbmV3T3duZXIpIG9ubHlPd25lciB7DQogICAgICAgIGlmIChuZXdPd25lciAhPSBhZGRyZXNzKDApKSB7DQogICAgICAgICAgICBvd25lciA9IG5ld093bmVyOw0KICAgICAgICB9DQogICAgfQ0KfQ0KDQpjb250cmFjdCBFUkMyMEJhc2ljIHsNCiAgdWludCBwdWJsaWMgdG90YWxTdXBwbHk7DQogIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIHdobykgY29uc3RhbnQgcmV0dXJucyAodWludCk7DQogIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgdG8sIHVpbnQgdmFsdWUpOw0KICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50IHZhbHVlKTsNCn0NCmNvbnRyYWN0IEVSQzIwIGlzIEVSQzIwQmFzaWMgew0KICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBvd25lciwgYWRkcmVzcyBzcGVuZGVyKSBjb25zdGFudCByZXR1cm5zICh1aW50KTsNCiAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgZnJvbSwgYWRkcmVzcyB0bywgdWludCB2YWx1ZSk7DQogIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBzcGVuZGVyLCB1aW50IHZhbHVlKTsNCiAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIG93bmVyLCBhZGRyZXNzIGluZGV4ZWQgc3BlbmRlciwgdWludCB2YWx1ZSk7DQp9DQoNCmNvbnRyYWN0IFNoYXJlc0NvbnRyYWN0IGlzIEVSQzIwQmFzaWMgew0KICANCiAgdXNpbmcgU2FmZU1hdGggZm9yIHVpbnQ7DQogIA0KICBtYXBwaW5nKGFkZHJlc3MgPT4gdWludCkgYmFsYW5jZXM7DQogIA0KICAvKg0KICAgKiBGaXggZm9yIHRoZSBFUkMyMCBzaG9ydCBhZGRyZXNzIGF0dGFjayAgDQogICovDQogIG1vZGlmaWVyIG9ubHlQYXlsb2FkU2l6ZSh1aW50IHNpemUpIHsNCiAgICAgaWYobXNnLmRhdGEubGVuZ3RoIDwgc2l6ZSArIDQpIHsNCiAgICAgICB0aHJvdzsNCiAgICAgfQ0KICAgICBfOw0KICB9DQogIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50IF92YWx1ZSkgb25seVBheWxvYWRTaXplKDIgKiAzMikgew0KICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gYmFsYW5jZXNbbXNnLnNlbmRlcl0uc3ViKF92YWx1ZSk7DQogICAgYmFsYW5jZXNbX3RvXSA9IGJhbGFuY2VzW190b10uYWRkKF92YWx1ZSk7DQogICAgVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOw0KICB9DQogIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludCBiYWxhbmNlKSB7DQogICAgcmV0dXJuIGJhbGFuY2VzW19vd25lcl07DQogIH0NCn0NCmNvbnRyYWN0IFN0YW5kYXJkVG9rZW4gaXMgU2hhcmVzQ29udHJhY3QsIEVSQzIwIHsNCiAgbWFwcGluZyAoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQpKSBhbGxvd2VkOw0KICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQgX3ZhbHVlKSBvbmx5UGF5bG9hZFNpemUoMyAqIDMyKSB7DQogICAgdmFyIF9hbGxvd2FuY2UgPSBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXTsNCiAgICAvLyBDaGVjayBpcyBub3QgbmVlZGVkIGJlY2F1c2Ugc3ViKF9hbGxvd2FuY2UsIF92YWx1ZSkgd2lsbCBhbHJlYWR5IHRocm93IGlmIHRoaXMgY29uZGl0aW9uIGlzIG5vdCBtZXQNCiAgICAvLyBpZiAoX3ZhbHVlID4gX2FsbG93YW5jZSkgdGhyb3c7DQogICAgYmFsYW5jZXNbX3RvXSA9IGJhbGFuY2VzW190b10uYWRkKF92YWx1ZSk7DQogICAgYmFsYW5jZXNbX2Zyb21dID0gYmFsYW5jZXNbX2Zyb21dLnN1YihfdmFsdWUpOw0KICAgIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdID0gX2FsbG93YW5jZS5zdWIoX3ZhbHVlKTsNCiAgICBUcmFuc2ZlcihfZnJvbSwgX3RvLCBfdmFsdWUpOw0KICB9DQogIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludCBfdmFsdWUpIHsNCiAgICAvLyBUbyBjaGFuZ2UgdGhlIGFwcHJvdmUgYW1vdW50IHlvdSBmaXJzdCBoYXZlIHRvIHJlZHVjZSB0aGUgYWRkcmVzc2VzYA0KICAgIC8vICBhbGxvd2FuY2UgdG8gemVybyBieSBjYWxsaW5nIGBhcHByb3ZlKF9zcGVuZGVyLCAwKWAgaWYgaXQgaXMgbm90DQogICAgLy8gIGFscmVhZHkgMCB0byBtaXRpZ2F0ZSB0aGUgcmFjZSBjb25kaXRpb24gZGVzY3JpYmVkIGhlcmU6DQogICAgLy8gIGh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bS9FSVBzL2lzc3Vlcy8yMCNpc3N1ZWNvbW1lbnQtMjYzNTI0NzI5DQogICAgaWYgKChfdmFsdWUgIT0gMCkgJiYgKGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdICE9IDApKSB0aHJvdzsNCiAgICBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IF92YWx1ZTsNCiAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgX3ZhbHVlKTsNCiAgfQ0KICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQgcmVtYWluaW5nKSB7DQogICAgcmV0dXJuIGFsbG93ZWRbX293bmVyXVtfc3BlbmRlcl07DQogIH0NCn0NCg0KLyogJiMxNjk7SVQgQ29uc3VsdGluZyBHcm91cCBMdGQNCiAgT3ZlcnNlZXMgcHJvamVjdHMgZm9yIGludmVzdG1lbnQNCiAgVGhlIGNvbXBhbnkgb3ducyBmYWN0b3JpZXMsIGhvdGVscywgbGFuZCBmb3IgY29uc3RydWN0aW9uIGluIEVuZ2xhbmQsIEZyYW5jZSwgQ3lwcnVzLCBhbmQgVWtyYWluZS4NCiAgQ2xpZW50cyBhcmUgb2ZmZXJlZCB0aGUgb3Bwb3J0dW5pdHkgdG8gcGFydGljaXBhdGUgaW4gcHJvamVjdHMgYm90aCBhdCB0aGUgaW5pdGlhbCBzdGFnZXMgb2YgY29uc3RydWN0aW9uIGFuZCB0byBidXkgb3V0IHJlYWR5LW1hZGUgcHJvamVjdHMgdGhhdCBhcmUgZnVsbHkgcHJvZml0YWJsZS4NCiAgVGhlIGNvbXBhbnkgaGFzIGEgcmVnaXN0cmF0aW9uIGluIEN5cHJ1cy4gDQogIEJhc2VkIG9uIGxlZ2FsIGNvbnRyYWN0cywgdGhlIGNvbXBhbnkncyBhY3Rpdml0aWVzIGFyZSBjYXJyaWVkIG91dC4gDQogIFdlIGNvb3BlcmF0ZSB3aXRoIHJlYWwgZXN0YXRlIG1hbmFnZW1lbnQgY29tcGFuaWVzIGFyb3VuZCB0aGUgd29ybGQsIHNvIG91ciBjbGllbnRzIG5ldmVyIGhhdmUgYW55IHByb2JsZW1zIHdpdGggcmVhbCBlc3RhdGUgbWFuYWdlbWVudC4NCiAgSVBPY29pbkhvdGVsU2hhcmVzIGNvbnRyYWN0LiBJbXBsZW1lbnRzDQogIEBub3RpY2UgU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bS9FSVBzL2lzc3Vlcy8yMA0KICovDQogDQpjb250cmFjdCBJUE9jb2luSG90ZWxTaGFyZXMgaXMgU3RhbmRhcmRUb2tlbiwgT3duYWJsZSB7DQogIHN0cmluZyBwdWJsaWMgY29uc3RhbnQgbmFtZSA9ICJJUE9jb2luSG90ZWxTaGFyZXMiOw0KICBzdHJpbmcgcHVibGljIGNvbnN0YW50IHN5bWJvbCA9ICJIb3RlbFNoYXJlcyI7DQogIHVpbnQgcHVibGljIGNvbnN0YW50IGRlY2ltYWxzID0gNjsNCiAgLy8gQ29uc3RydWN0b3INCiAgZnVuY3Rpb24gSVBPY29pbkhvdGVsU2hhcmVzKCkgew0KICAgICAgdG90YWxTdXBwbHkgPSAyMTAgKiAxMCAqKiBkZWNpbWFsczsgLy8gIGFtb3VudCBvZiBzaGFyZXMgb2ZmZXJlZCB0byB0aGUgcHVibGljDQogICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IHRvdGFsU3VwcGx5OyAvL3RoZXJlIGFyZSBvbmx5IDIxMCBzaGFyZXMNCiAgfQ0KfQ=='