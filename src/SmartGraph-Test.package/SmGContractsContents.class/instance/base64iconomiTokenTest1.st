base 64 content
base64iconomiTokenTest1
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC4wOw0KDQpjb250cmFjdCBJY29ub21pVG9rZW4gew0KDQogIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgYWRkcmVzcyBpbmRleGVkIF90bywgdWludDI1NiBfdmFsdWUpOw0KICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgX293bmVyLCBhZGRyZXNzIGluZGV4ZWQgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKTsNCiAgZXZlbnQgQmxvY2tMb2NrU2V0KHVpbnQyNTYgX3ZhbHVlKTsNCiAgZXZlbnQgTmV3T3duZXIoYWRkcmVzcyBfbmV3T3duZXIpOw0KDQogIG1vZGlmaWVyIG9ubHlPd25lciB7DQogICAgaWYgKG1zZy5zZW5kZXIgPT0gb3duZXIpIHsNCiAgICAgIF87DQogICAgfQ0KICB9DQoNCiAgbW9kaWZpZXIgYmxvY2tMb2NrIHsNCiAgICBpZiAoIWlzTG9ja2VkKCkgfHwgbXNnLnNlbmRlciA9PSBvd25lcikgew0KICAgICAgXzsNCiAgICB9DQogIH0NCg0KICBtb2RpZmllciBjaGVja0lmVG9Db250cmFjdChhZGRyZXNzIF90bykgew0KICAgIGlmKF90byAhPSBhZGRyZXNzKHRoaXMpKSAgew0KICAgICAgXzsNCiAgICB9DQogIH0NCg0KICB1aW50MjU2IHB1YmxpYyB0b3RhbFN1cHBseTsNCiAgc3RyaW5nIHB1YmxpYyBuYW1lOw0KICB1aW50OCBwdWJsaWMgZGVjaW1hbHM7DQogIHN0cmluZyBwdWJsaWMgc3ltYm9sOw0KICBzdHJpbmcgcHVibGljIHZlcnNpb24gPSAnMC4wLjEnOw0KICBhZGRyZXNzIHB1YmxpYyBvd25lcjsNCiAgdWludDI1NiBwdWJsaWMgbG9ja2VkVW50aWxCbG9jazsNCg0KICBmdW5jdGlvbiBJY29ub21pVG9rZW4oDQogICAgdWludDI1NiBfaW5pdGlhbEFtb3VudCwNCiAgICBzdHJpbmcgX3Rva2VuTmFtZSwNCiAgICB1aW50OCBfZGVjaW1hbFVuaXRzLA0KICAgIHN0cmluZyBfdG9rZW5TeW1ib2wsDQogICAgdWludDI1NiBfbG9ja2VkVW50aWxCbG9jaw0KICAgICkgew0KICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gX2luaXRpYWxBbW91bnQ7DQogICAgdG90YWxTdXBwbHkgPSBfaW5pdGlhbEFtb3VudDsNCiAgICBuYW1lID0gX3Rva2VuTmFtZTsNCiAgICBkZWNpbWFscyA9IF9kZWNpbWFsVW5pdHM7DQogICAgc3ltYm9sID0gX3Rva2VuU3ltYm9sOw0KICAgIGxvY2tlZFVudGlsQmxvY2sgPSBfbG9ja2VkVW50aWxCbG9jazsNCiAgICBvd25lciA9IG1zZy5zZW5kZXI7DQogIH0NCg0KICAvKiBBcHByb3ZlcyBhbmQgdGhlbiBjYWxscyB0aGUgcmVjZWl2aW5nIGNvbnRyYWN0ICovDQogIGZ1bmN0aW9uIGFwcHJvdmVBbmRDYWxsKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlLCBieXRlcyBfZXh0cmFEYXRhKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsNCg0KICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOw0KICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfdmFsdWUpOw0KDQogICAgLy9jYWxsIHRoZSByZWNlaXZlQXBwcm92YWwgZnVuY3Rpb24gb24gdGhlIGNvbnRyYWN0IHlvdSB3YW50IHRvIGJlIG5vdGlmaWVkLiBUaGlzIGNyYWZ0cyB0aGUgZnVuY3Rpb24gc2lnbmF0dXJlIG1hbnVhbGx5IHNvIG9uZSBkb2Vzbid0IGhhdmUgdG8gaW5jbHVkZSBhIGNvbnRyYWN0IGluIGhlcmUganVzdCBmb3IgdGhpcy4NCiAgICAvL3JlY2VpdmVBcHByb3ZhbChhZGRyZXNzIF9mcm9tLCB1aW50MjU2IF92YWx1ZSwgYWRkcmVzcyBfdG9rZW5Db250cmFjdCwgYnl0ZXMgX2V4dHJhRGF0YSkNCiAgICAvL2l0IGlzIGFzc3VtZWQgdGhhdCB3aGVuIGRvZXMgdGhpcyB0aGF0IHRoZSBjYWxsICpzaG91bGQqIHN1Y2NlZWQsIG90aGVyd2lzZSBvbmUgd291bGQgdXNlIHZhbmlsbGEgYXBwcm92ZSBpbnN0ZWFkLg0KICAgIGlmKCFfc3BlbmRlci5jYWxsKGJ5dGVzNChzaGEzKCJyZWNlaXZlQXBwcm92YWwoYWRkcmVzcyx1aW50MjU2LGFkZHJlc3MsYnl0ZXMpIikpLCBtc2cuc2VuZGVyLCBfdmFsdWUsIHRoaXMsIF9leHRyYURhdGEpKSB7IHRocm93OyB9DQogICAgcmV0dXJuIHRydWU7DQoNCiAgfQ0KDQogIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgYmxvY2tMb2NrIGNoZWNrSWZUb0NvbnRyYWN0KF90bykgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7DQoNCiAgICBpZiAoYmFsYW5jZXNbbXNnLnNlbmRlcl0gPj0gX3ZhbHVlICYmIF92YWx1ZSA+IDApIHsNCiAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdIC09IF92YWx1ZTsNCiAgICAgIGJhbGFuY2VzW190b10gKz0gX3ZhbHVlOw0KICAgICAgVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOw0KICAgICAgcmV0dXJuIHRydWU7DQogICAgfSBlbHNlIHsNCiAgICAgIHJldHVybiBmYWxzZTsNCiAgICB9DQoNCiAgfQ0KDQogIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIGJsb2NrTG9jayBjaGVja0lmVG9Db250cmFjdChfdG8pIHJldHVybnMgKGJvb2wgc3VjY2Vzcykgew0KDQogICAgaWYgKGJhbGFuY2VzW19mcm9tXSA+PSBfdmFsdWUgJiYgYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl0gPj0gX3ZhbHVlICYmIF92YWx1ZSA+IDApIHsNCiAgICAgIGJhbGFuY2VzW190b10gKz0gX3ZhbHVlOw0KICAgICAgYmFsYW5jZXNbX2Zyb21dIC09IF92YWx1ZTsNCiAgICAgIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdIC09IF92YWx1ZTsNCiAgICAgIFRyYW5zZmVyKF9mcm9tLCBfdG8sIF92YWx1ZSk7DQogICAgICByZXR1cm4gdHJ1ZTsNCiAgICB9IGVsc2Ugew0KICAgICAgcmV0dXJuIGZhbHNlOw0KICAgIH0NCg0KICB9DQoNCiAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpIHsNCiAgICByZXR1cm4gYmFsYW5jZXNbX293bmVyXTsNCiAgfQ0KDQogIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcykgew0KICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOw0KICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfdmFsdWUpOw0KICAgIHJldHVybiB0cnVlOw0KICB9DQoNCiAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IHJlbWFpbmluZykgew0KICAgIHJldHVybiBhbGxvd2VkW19vd25lcl1bX3NwZW5kZXJdOw0KICB9DQoNCiAgZnVuY3Rpb24gc2V0QmxvY2tMb2NrKHVpbnQyNTYgX2xvY2tlZFVudGlsQmxvY2spIG9ubHlPd25lciByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsNCiAgICBsb2NrZWRVbnRpbEJsb2NrID0gX2xvY2tlZFVudGlsQmxvY2s7DQogICAgQmxvY2tMb2NrU2V0KF9sb2NrZWRVbnRpbEJsb2NrKTsNCiAgICByZXR1cm4gdHJ1ZTsNCiAgfQ0KDQogIGZ1bmN0aW9uIGlzTG9ja2VkKCkgY29uc3RhbnQgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7DQogICAgcmV0dXJuIGxvY2tlZFVudGlsQmxvY2sgPiBibG9jay5udW1iZXI7DQogIH0NCg0KICBmdW5jdGlvbiByZXBsYWNlT3duZXIoYWRkcmVzcyBfbmV3T3duZXIpIG9ubHlPd25lciByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsNCiAgICBvd25lciA9IF9uZXdPd25lcjsNCiAgICBOZXdPd25lcihfbmV3T3duZXIpOw0KICAgIHJldHVybiB0cnVlOw0KICB9DQoNCiAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSBiYWxhbmNlczsNCiAgbWFwcGluZyAoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpKSBhbGxvd2VkOw0KfQ0KDQoNCmNvbnRyYWN0IEljb25vbWlUb2tlblRlc3QgaXMgSWNvbm9taVRva2VuIHsNCiAgZnVuY3Rpb24gSWNvbm9taVRva2VuVGVzdCgNCiAgICB1aW50MjU2IF9pbml0aWFsQW1vdW50LA0KICAgIHN0cmluZyBfdG9rZW5OYW1lLA0KICAgIHVpbnQ4IF9kZWNpbWFsVW5pdHMsDQogICAgc3RyaW5nIF90b2tlblN5bWJvbCwNCiAgICB1aW50MjU2IF9sb2NrZWRVbnRpbEJsb2NrDQogICAgKSBJY29ub21pVG9rZW4oX2luaXRpYWxBbW91bnQsIF90b2tlbk5hbWUsIF9kZWNpbWFsVW5pdHMsIF90b2tlblN5bWJvbCwgX2xvY2tlZFVudGlsQmxvY2spIHsNCiAgfQ0KDQogIGZ1bmN0aW9uIGRlc3RydWN0KCkgb25seU93bmVyIHsNCiAgICBzZWxmZGVzdHJ1Y3Qob3duZXIpOw0KICB9DQp9'