base 64 content
base64lamboToken2
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC4xMTsNCg0KaW50ZXJmYWNlIElFUkMyMCB7DQogICAgZnVuY3Rpb24gdG90YWxTdXBwbHkoKSBjb25zdGFudCByZXR1cm5zICh1aW50IHRvdGFsU3VwcGx5KTsNCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQgYmFsYW5jZSk7DQogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpOw0KICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludCBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7DQogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsNCiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQgcmVtYWluaW5nKTsNCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgX2Zyb20sIGFkZHJlc3MgaW5kZXhlZCBfdG8sIHVpbnQgX3ZhbHVlKTsNCiAgICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgX293bmVyLCBhZGRyZXNzIGluZGV4ZWQgX3NwZW5kZXIsIHVpbnQgX3ZhbHVlKTsNCn0NCg0KLyoqDQogKiBAdGl0bGUgU2FmZU1hdGgNCiAqIEBkZXYgTWF0aCBvcGVyYXRpb25zIHdpdGggc2FmZXR5IGNoZWNrcyB0aGF0IHRocm93IG9uIGVycm9yDQogKi8NCmxpYnJhcnkgU2FmZU1hdGggew0KICBmdW5jdGlvbiBtdWwodWludDI1NiBhLCB1aW50MjU2IGIpIGludGVybmFsIHJldHVybnMgKHVpbnQyNTYpIHsNCiAgICB1aW50MjU2IGMgPSBhICogYjsNCiAgICBhc3NlcnQoYSA9PSAwIHx8IGMgLyBhID09IGIpOw0KICAgIHJldHVybiBjOw0KICB9DQoNCiAgZnVuY3Rpb24gZGl2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCByZXR1cm5zICh1aW50MjU2KSB7DQogICAgLy8gYXNzZXJ0KGIgPiAwKTsgLy8gU29saWRpdHkgYXV0b21hdGljYWxseSB0aHJvd3Mgd2hlbiBkaXZpZGluZyBieSAwDQogICAgdWludDI1NiBjID0gYSAvIGI7DQogICAgLy8gYXNzZXJ0KGEgPT0gYiAqIGMgKyBhICUgYik7IC8vIFRoZXJlIGlzIG5vIGNhc2UgaW4gd2hpY2ggdGhpcyBkb2Vzbid0IGhvbGQNCiAgICByZXR1cm4gYzsNCiAgfQ0KDQogIGZ1bmN0aW9uIHN1Yih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcmV0dXJucyAodWludDI1Nikgew0KICAgIGFzc2VydChiIDw9IGEpOw0KICAgIHJldHVybiBhIC0gYjsNCiAgfQ0KDQogIGZ1bmN0aW9uIGFkZCh1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgcmV0dXJucyAodWludDI1Nikgew0KICAgIHVpbnQyNTYgYyA9IGEgKyBiOw0KICAgIGFzc2VydChjID49IGEpOw0KICAgIHJldHVybiBjOw0KICB9DQp9DQoNCg0KY29udHJhY3QgTGFtYm9Ub2tlbiBpcyBJRVJDMjAgew0KICAgIA0KICAgIHVzaW5nIFNhZmVNYXRoIGZvciB1aW50MjU2Ow0KICAgIA0KICAgIHVpbnQgcHVibGljIF90b3RhbFN1cHBseSA9IDA7DQogICAgDQogICAgc3RyaW5nIHB1YmxpYyBjb25zdGFudCBzeW1ib2wgPSAiTEFNQk8iOw0KICAgIHN0cmluZyBwdWJsaWMgY29uc3RhbnQgbmFtZSA9ICJMYW1ibyBUb2tlbiI7DQogICAgdWludDggcHVibGljIGNvbnN0YW50IGRlY2ltYWxzID0gMTg7DQogICAgDQogICAgdWludDI1NiBwdWJsaWMgY29uc3RhbnQgUkFURSA9IDUwMDsNCiAgICANCiAgICBhZGRyZXNzIHB1YmxpYyBvd25lcjsNCiAgICANCiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gdWludDI1NikgYmFsYW5jZXM7DQogICAgbWFwcGluZyhhZGRyZXNzID0+IG1hcHBpbmcoYWRkcmVzcyA9PnVpbnQyNTYpKSBhbGxvd2VkOw0KICAgIA0KICAgIGZ1bmN0aW9uICgpIHBheWFibGUgew0KICAgICAgICBjcmVhdGVUb2tlbnMoKTsNCiAgICB9DQogICAgDQogICBmdW5jdGlvbiBMYW1ib1Rva2VuKCkgew0KICAgICAgIG93bmVyID0gbXNnLnNlbmRlcjsNCiAgIH0NCiAgICANCiAgICBmdW5jdGlvbiBjcmVhdGVUb2tlbnMoKSBwYXlhYmxlIHsNCiAgICAgICAgcmVxdWlyZShtc2cudmFsdWUgPiAwKTsNCiAgICAgICAgDQogICAgICAgIHVpbnQyNTYgdG9rZW5zID0gbXNnLnZhbHVlLm11bChSQVRFKTsNCiAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSBiYWxhbmNlcyBbbXNnLnNlbmRlcl0uYWRkKHRva2Vucyk7DQogICAgICAgIF90b3RhbFN1cHBseSA9IF90b3RhbFN1cHBseS5hZGQodG9rZW5zKTsNCiAgICAgICAgb3duZXIudHJhbnNmZXIobXNnLnZhbHVlKTsNCiAgICB9DQogICAgDQogICAgZnVuY3Rpb24gdG90YWxTdXBwbHkoKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IHRvdGFsU3VwcGx5KSB7DQogICAgICAgIHJldHVybiBfdG90YWxTdXBwbHk7DQogICAgfQ0KDQogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IGJhbGFuY2UpIHsNCg0KICAgICAgICByZXR1cm4gYmFsYW5jZXNbX293bmVyXTsNCiAgICAgICAgDQogICAgfQ0KICAgIA0KICAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcykgew0KICAgICAgICANCiAgICAgICAgcmVxdWlyZSgNCiAgICAgICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID49IF92YWx1ZQ0KICAgICAgICAgICAgJiYgX3ZhbHVlID4gMA0KICAgICAgICAgICAgKTsgDQogICAgICAgICAgICANCiAgICAgICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gYmFsYW5jZXNbbXNnLnNlbmRlcl0uc3ViKF92YWx1ZSk7DQogICAgICAgICAgICBiYWxhbmNlc1tfdG9dID0gYmFsYW5jZXNbX3RvXS5hZGQoX3ZhbHVlKTsNCiAgICAgICAgICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsNCiAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICB9DQogICAgIA0KDQogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKXsNCiAgICAgICAgcmVxdWlyZSgNCiAgICAgICAgICAgIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdID49IF92YWx1ZQ0KICAgICAgICAgICAgJiYgYmFsYW5jZXNbX2Zyb21dID49IF92YWx1ZQ0KICAgICAgICAgICAgJiYgX3ZhbHVlID4gMA0KICAgICAgICApOw0KICAgICAgICBiYWxhbmNlc1tfZnJvbV0gPSBiYWxhbmNlc1tfZnJvbV0uc3ViKF92YWx1ZSk7DQogICAgICAgIGJhbGFuY2VzW190b10gPSBiYWxhbmNlc1tfdG9dLmFkZChfdmFsdWUpOw0KICAgICAgICBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSA9IGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdLnN1YihfdmFsdWUpOw0KICAgICAgICBUcmFuc2ZlcihfZnJvbSwgX3RvLCBfdmFsdWUpOw0KICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICB9ICAgICANCiAgICAgICAgICAgICAgDQogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7DQogICAgIA0KICAgICAgICBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IF92YWx1ZTsNCiAgICAgICAgQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF92YWx1ZSk7DQogICAgICAgIHJldHVybiB0cnVlOw0KICAgIH0NCiAgICAgICAgDQogICAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IHJlbWFpbmluZyl7DQogICAgICAgIHJldHVybiBhbGxvd2VkIFtfb3duZXJdW19zcGVuZGVyXTsNCiAgICAgICAgDQogICAgfQ0KDQoNCiAgICANCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgX2Zyb20sIGFkZHJlc3MgaW5kZXhlZCBfdG8sIHVpbnQyNTYgX3ZhbHVlKTsNCiAgICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgX293bmVyLCBhZGRyZXNzIGluZGV4ZWQgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKTsNCn0='