base 64 content
base64mainstreetToken2
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC44Ow0KDQoNCi8qKg0KICogQHRpdGxlIEVSQzIwDQogKi8NCmNvbnRyYWN0IEVSQzIwIHsNCiAgICBmdW5jdGlvbiB0b3RhbFN1cHBseSgpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgdG90YWxTdXBwbHkpOw0KICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKTsNCiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7DQogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsNCiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpOw0KICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiByZW1haW5pbmcpOw0KICAgIA0KICAgIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgYWRkcmVzcyBpbmRleGVkIF90bywgdWludDI1NiBfdmFsdWUpOw0KICAgIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBfb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpOw0KfQ0KDQoNCi8qKg0KICogQHRpdGxlIE1haW5zdHJlZXRUb2tlbg0KICovDQpjb250cmFjdCBNYWluc3RyZWV0VG9rZW4gaXMgRVJDMjAgew0KICAgIA0KICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludCkgb3duZXJNSVQ7DQogICAgbWFwcGluZyAoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQpKSBhbGxvd2VkOw0KICAgIHVpbnQgcHVibGljIHRvdGFsTUlUOw0KICAgIHVpbnQgcHVibGljIHN0YXJ0Ow0KICAgIA0KICAgIGFkZHJlc3MgcHVibGljIG1haW5zdHJlZXRDcm93ZGZ1bmQ7DQoNCiAgICBhZGRyZXNzIHB1YmxpYyBpbnRlbGxpc3lzOw0KICAgIA0KICAgIGJvb2wgcHVibGljIHRlc3Rpbmc7DQoNCiAgICBtb2RpZmllciBmcm9tQ3Jvd2RmdW5kKCkgew0KICAgICAgICBpZiAobXNnLnNlbmRlciAhPSBtYWluc3RyZWV0Q3Jvd2RmdW5kKSB7DQogICAgICAgICAgICB0aHJvdzsNCiAgICAgICAgfQ0KICAgICAgICBfOw0KICAgIH0NCiAgICANCiAgICBtb2RpZmllciBpc0FjdGl2ZSgpIHsNCiAgICAgICAgaWYgKGJsb2NrLnRpbWVzdGFtcCA8IHN0YXJ0KSB7DQogICAgICAgICAgICB0aHJvdzsNCiAgICAgICAgfQ0KICAgICAgICBfOw0KICAgIH0NCg0KICAgIG1vZGlmaWVyIGlzTm90QWN0aXZlKCkgew0KICAgICAgICBpZiAoIXRlc3RpbmcgJiYgYmxvY2sudGltZXN0YW1wID49IHN0YXJ0KSB7DQogICAgICAgICAgICB0aHJvdzsNCiAgICAgICAgfQ0KICAgICAgICBfOw0KICAgIH0NCg0KICAgIG1vZGlmaWVyIHJlY2lwaWVudElzVmFsaWQoYWRkcmVzcyByZWNpcGllbnQpIHsNCiAgICAgICAgaWYgKHJlY2lwaWVudCA9PSAwIHx8IHJlY2lwaWVudCA9PSBhZGRyZXNzKHRoaXMpKSB7DQogICAgICAgICAgICB0aHJvdzsNCiAgICAgICAgfQ0KICAgICAgICBfOw0KICAgIH0NCg0KICAgIG1vZGlmaWVyIHNlbmRlckhhc1N1ZmZpY2llbnQodWludCBNSVQpIHsNCiAgICAgICAgaWYgKG93bmVyTUlUW21zZy5zZW5kZXJdIDwgTUlUKSB7DQogICAgICAgICAgICB0aHJvdzsNCiAgICAgICAgfQ0KICAgICAgICBfOw0KICAgIH0NCg0KICAgIG1vZGlmaWVyIHRyYW5zZmVyQXBwcm92ZWQoYWRkcmVzcyBmcm9tLCB1aW50IE1JVCkgew0KICAgICAgICBpZiAoYWxsb3dlZFtmcm9tXVttc2cuc2VuZGVyXSA8IE1JVCB8fCBvd25lck1JVFtmcm9tXSA8IE1JVCkgew0KICAgICAgICAgICAgdGhyb3c7DQogICAgICAgIH0NCiAgICAgICAgXzsNCiAgICB9DQoNCiAgICBtb2RpZmllciBhbGxvd2FuY2VJc1plcm8oYWRkcmVzcyBzcGVuZGVyLCB1aW50IHZhbHVlKSB7DQogICAgICAgIC8vIFRvIGNoYW5nZSB0aGUgYXBwcm92ZSBhbW91bnQgeW91IGZpcnN0IGhhdmUgdG8gcmVkdWNlIHRoZSBhZGRyZXNzZXMmIzE4MDsNCiAgICAgICAgLy8gYWxsb3dhbmNlIHRvIHplcm8gYnkgY2FsbGluZyBgYXBwcm92ZShfc3BlbmRlciwwKWAgaWYgaXQgaXMgbm90DQogICAgICAgIC8vIGFscmVhZHkgMCB0byBtaXRpZ2F0ZSB0aGUgcmFjZSBjb25kaXRpb24gZGVzY3JpYmVkIGhlcmU6DQogICAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bS9FSVBzL2lzc3Vlcy8yMCNpc3N1ZWNvbW1lbnQtMjYzNTI0NzI5DQogICAgICAgIGlmICgodmFsdWUgIT0gMCkgJiYgKGFsbG93ZWRbbXNnLnNlbmRlcl1bc3BlbmRlcl0gIT0gMCkpIHsNCiAgICAgICAgICAgIHRocm93Ow0KICAgICAgICB9DQogICAgICAgIF87DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQGRldiBUb2tlbnMgaGF2ZSBiZWVuIGFkZGVkIHRvIGFuIGFkZHJlc3MgYnkgdGhlIGNyb3dkZnVuZGluZyBjb250cmFjdC4NCiAgICAgKiBAcGFyYW0gcmVjaXBpZW50IEFkZHJlc3MgcmVjZWl2aW5nIHRoZSBNSVQuDQogICAgICogQHBhcmFtIE1JVCBBbW91bnQgb2YgTUlUIGFkZGVkLg0KICAgICAqLw0KICAgIGV2ZW50IFRva2Vuc0FkZGVkKGFkZHJlc3MgaW5kZXhlZCByZWNpcGllbnQsIHVpbnQgTUlUKTsNCg0KICAgIC8qKg0KICAgICAqIEBkZXYgQ29uc3RydWN0b3IuDQogICAgICogQHBhcmFtIF9tYWluc3RyZWV0Q3Jvd2RmdW5kIEFkZHJlc3Mgb2YgY3Jvd2RmdW5kIGNvbnRyYWN0Lg0KICAgICAqIEBwYXJhbSBfaW50ZWxsaXN5cyBBZGRyZXNzIHRvIHJlY2VpdmUgaW50ZWxsaXN5cycgdG9rZW5zLg0KICAgICAqIEBwYXJhbSBfc3RhcnQgVGltZXN0YW1wIHdoZW4gdGhlIHRva2VuIGJlY29tZXMgYWN0aXZlLg0KICAgICAqLw0KICAgIGZ1bmN0aW9uIE1haW5zdHJlZXRUb2tlbihhZGRyZXNzIF9tYWluc3RyZWV0Q3Jvd2RmdW5kLCBhZGRyZXNzIF9pbnRlbGxpc3lzLCB1aW50IF9zdGFydCwgYm9vbCBfdGVzdGluZykgew0KICAgICAgICBtYWluc3RyZWV0Q3Jvd2RmdW5kID0gX21haW5zdHJlZXRDcm93ZGZ1bmQ7DQogICAgICAgIGludGVsbGlzeXMgPSBfaW50ZWxsaXN5czsNCiAgICAgICAgc3RhcnQgPSBfc3RhcnQ7DQogICAgICAgIHRlc3RpbmcgPSBfdGVzdGluZzsNCiAgICB9DQogICAgDQogICAgLyoqDQogICAgICogQGRldiBBZGQgdG8gdG9rZW4gYmFsYW5jZSBvbiBhZGRyZXNzLiBNdXN0IGJlIGZyb20gY3Jvd2RmdW5kLg0KICAgICAqIEBwYXJhbSByZWNpcGllbnQgQWRkcmVzcyB0byBhZGQgdG9rZW5zIHRvLg0KICAgICAqIEByZXR1cm4gTUlUIEFtb3VudCBvZiBNSVQgdG8gYWRkLg0KICAgICAqLw0KICAgIGZ1bmN0aW9uIGFkZFRva2VucyhhZGRyZXNzIHJlY2lwaWVudCwgdWludCBNSVQpIGV4dGVybmFsIGlzTm90QWN0aXZlIGZyb21Dcm93ZGZ1bmQgew0KICAgICAgICBvd25lck1JVFtyZWNpcGllbnRdICs9IE1JVDsNCiAgICAgICAgdWludCBpbnRlbGxpc3lzTUlUID0gTUlUIC8gMTA7DQogICAgICAgIG93bmVyTUlUW2ludGVsbGlzeXNdICs9IGludGVsbGlzeXNNSVQ7DQogICAgICAgIHRvdGFsTUlUICs9IE1JVCArIGludGVsbGlzeXNNSVQ7DQogICAgICAgIFRva2Vuc0FkZGVkKHJlY2lwaWVudCwgTUlUKTsNCiAgICAgICAgVG9rZW5zQWRkZWQoaW50ZWxsaXN5cywgaW50ZWxsaXN5c01JVCk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQGRldiBJbXBsZW1lbnRzIEVSQzIwIHRvdGFsU3VwcGx5KCkNCiAgICAgKi8NCiAgICBmdW5jdGlvbiB0b3RhbFN1cHBseSgpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgdG90YWxTdXBwbHkpIHsNCiAgICAgICAgdG90YWxTdXBwbHkgPSB0b3RhbE1JVDsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAZGV2IEltcGxlbWVudHMgRVJDMjAgYmFsYW5jZU9mKCkNCiAgICAgKi8NCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSkgew0KICAgICAgICBiYWxhbmNlID0gb3duZXJNSVRbX293bmVyXTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAZGV2IEltcGxlbWVudHMgRVJDMjAgdHJhbnNmZXIoKQ0KICAgICAqLw0KICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgaXNBY3RpdmUgcmVjaXBpZW50SXNWYWxpZChfdG8pIHNlbmRlckhhc1N1ZmZpY2llbnQoX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsNCiAgICAgICAgb3duZXJNSVRbbXNnLnNlbmRlcl0gLT0gX3ZhbHVlOw0KICAgICAgICBvd25lck1JVFtfdG9dICs9IF92YWx1ZTsNCiAgICAgICAgVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOw0KICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAZGV2IEltcGxlbWVudHMgRVJDMjAgdHJhbnNmZXJGcm9tKCkNCiAgICAgKi8NCiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSBpc0FjdGl2ZSByZWNpcGllbnRJc1ZhbGlkKF90bykgdHJhbnNmZXJBcHByb3ZlZChfZnJvbSwgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsNCiAgICAgICAgb3duZXJNSVRbX3RvXSArPSBfdmFsdWU7DQogICAgICAgIG93bmVyTUlUW19mcm9tXSAtPSBfdmFsdWU7DQogICAgICAgIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdIC09IF92YWx1ZTsNCiAgICAgICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsNCiAgICAgICAgcmV0dXJuIHRydWU7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQGRldiBJbXBsZW1lbnRzIEVSQzIwIGFwcHJvdmUoKQ0KICAgICAqLw0KICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIGlzQWN0aXZlIGFsbG93YW5jZUlzWmVybyhfc3BlbmRlciwgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsNCiAgICAgICAgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBfdmFsdWU7DQogICAgICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfdmFsdWUpOw0KICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAZGV2IEltcGxlbWVudHMgRVJDMjAgYWxsb3dhbmNlKCkNCiAgICAgKi8NCiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKSB7DQogICAgICAgIHJlbWFpbmluZyA9IGFsbG93ZWRbX293bmVyXVtfc3BlbmRlcl07DQogICAgfQ0KDQp9'