base 64 content
base64metronome
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC4xMDsNCg0KY29udHJhY3QgTWV0cm9ub21lIHsNCg0KICAgIC8vIFRoaXMgaXMgdGhlIGNvbnN0cnVjdG9yIHdob3NlIGNvZGUgaXMNCiAgICAvLyBydW4gb25seSB3aGVuIHRoZSBjb250cmFjdCBpcyBjcmVhdGVkLg0KICAgIGZ1bmN0aW9uIE1ldHJvbm9tZSgpIHsNCiAgICB9DQogICAgDQogICAgDQogICAgLy8gdG90YWwgYW1vdW50IGludmVzdGVkDQogICAgdWludCBwdWJsaWMgaW52ZXN0ZWQgPSAwOw0KICAgIA0KICAgIC8vIHN0b3JlcyB0aGUgbGFzdCBwaW5nIG9mIGV2ZXJ5IHBhcnRpY2lwYW50cw0KICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludCkgcHVibGljIGxhc3RQaW5nOw0KICAgIC8vIHN0b3JlcyB0aGUgYmFsYW5jZSBvZiBlYWNoIHBhcnRpY2lwYW50DQogICAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50KSBwdWJsaWMgYmFsYW5jZU9mOw0KICAgIC8vIHN0b3JlcyB0aGUgdmFsdWUgb2YgcmV3YXJkcyB0aGUgbGFzdCB0aW1lIGEgcGxheWVyIGNvbGxlY3RlZCByZXdhcmRzDQogICAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50KSBwdWJsaWMgbGFzdFJld2FyZHM7DQoNCiAgICB1aW50IHB1YmxpYyBjb25zdGFudCBsYXJnZUNvbnN0YW50ID0gMTAwMDAwMCBldGhlcjsNCiAgICAvLyBjdW11bGF0aXZlIHJhdGlvIG9mIHJld2FyZHMgb3ZlciBpbnZlc3RlZCAobXVsdGlwbGllZCBieSBsYXJnZUNvbnN0YW50KQ0KICAgIHVpbnQgcHVibGljIGN1bXVsYXRpdmVSYXRpb3MgPSAwOw0KICAgIA0KICAgIC8vIHRoaXMgYXJyYXkgaXMgbm90IHVzZWQgaW4gdGhlIHJ1bGVzIG9mIHRoZSBnYW1lDQogICAgLy8gaXQgZW5hYmxlcyBwbGF5ZXJzIHRvIGNoZWNrIHRoZSBzdGF0ZSBvZiBvdGhlciBwbGF5ZXJzIG1vcmUgZWFzaWx5DQogICAgbWFwcGluZyAodWludCA9PiBhZGRyZXNzKSBwdWJsaWMgcGFydGljaXBhbnRzOw0KICAgIHVpbnQgcHVibGljIGNvdW50UGFydGljaXBhbnRzID0gMDsNCiAgICANCiAgICANCiAgICAvKiogUHJpdmF0ZSBhbmQgQ29uc3RhbnQgZnVuY3Rpb25zICovDQogICAgDQogICAgLy8gYWRkcyBhIHBsYXllciB0byB0aGUgYXJyYXkgb2YgcGFydGljaXBhbnRzDQogICAgZnVuY3Rpb24gYWRkUGxheWVyKGFkZHJlc3MgYSkgcHJpdmF0ZSB7DQogICAgICAgIGlmIChsYXN0UGluZ1thXSA9PSAwKSB7DQogICAgICAgICAgICBwYXJ0aWNpcGFudHNbY291bnRQYXJ0aWNpcGFudHNdID0gYTsNCiAgICAgICAgICAgIGNvdW50UGFydGljaXBhbnRzID0gY291bnRQYXJ0aWNpcGFudHMgKyAxOw0KICAgICAgICB9DQogICAgICAgIGxhc3RQaW5nW2FdID0gbm93Ow0KICAgIH0NCiAgICANCiAgICANCiAgICAvLyB1cGRhdGVzIHRoZSBiYWxhbmNlIGFuZCB1cGRhdGVzIHRoZSB0b3RhbCBpbnZlc3RlZCBhbW91bnQNCiAgICBmdW5jdGlvbiBtb2RpZnlCYWxhbmNlKGFkZHJlc3MgYSwgdWludCB4KSBwcml2YXRlIHsNCiAgICAgICAgYmFsYW5jZU9mW2FdID0gYmFsYW5jZU9mW2FdICsgeDsNCiAgICAgICAgaW52ZXN0ZWQgPSBpbnZlc3RlZCArIHg7DQogICAgfQ0KICAgIA0KICAgIC8vIGNyZWF0ZXMgYSBuZXcgcmV3YXJkIHRoYXQgY2FuIGJlIGNsYWltZWQgYnkgdXNlcnMNCiAgICBmdW5jdGlvbiBjcmVhdGVSZXdhcmQodWludCB2YWx1ZSwgdWludCBvbGRUb3RhbCkgcHJpdmF0ZSB7DQogICAgICAgIGlmIChvbGRUb3RhbCA+IDApDQogICAgICAgICAgICBjdW11bGF0aXZlUmF0aW9zID0gY3VtdWxhdGl2ZVJhdGlvcyArICh2YWx1ZSAqIGxhcmdlQ29uc3RhbnQpIC8gb2xkVG90YWw7DQogICAgfQ0KICAgIA0KICAgIC8vIGZ1bmN0aW9uIGNhbGxlZCB0byBmb3JiaWQgYSBwbGF5ZXIgZnJvbSBjbGFpbWluZyBhbGwgcGFzdCByZXdhcmRzDQogICAgZnVuY3Rpb24gZm9yYmlkKGFkZHJlc3MgYSkgcHJpdmF0ZSB7DQogICAgICAgIGxhc3RSZXdhcmRzW2FdID0gY3VtdWxhdGl2ZVJhdGlvczsNCiAgICB9DQogICAgDQogICAgLy8gZnVuY3Rpb24gdG8gY29tcHV0ZSB0aGUgbmV4dCByZXdhcmQgb2YgYSBwbGF5ZXINCiAgICBmdW5jdGlvbiBnZXRSZXdhcmQoYWRkcmVzcyBhKSBjb25zdGFudCByZXR1cm5zICh1aW50KSB7DQogICAgICAgIHVpbnQgcmV3YXJkc0RpZmZlcmVuY2UgPSBjdW11bGF0aXZlUmF0aW9zIC0gbGFzdFJld2FyZHNbYV07DQogICAgICAgIHJldHVybiAocmV3YXJkc0RpZmZlcmVuY2UgKiBiYWxhbmNlT2ZbYV0pIC8gbGFyZ2VDb25zdGFudDsNCiAgICB9DQogICAgDQogICAgLy8gZnVuY3Rpb24gdG8gY29tcHV0ZSB0aGUgbG9zdCBhbW91bnQNCiAgICBmdW5jdGlvbiBsb3NpbmdBbW91bnQoYWRkcmVzcyBhLCB1aW50IHRvU2hhcmUpIGNvbnN0YW50IHJldHVybnMgKHVpbnQpIHsNCiAgICAgICAgcmV0dXJuIHRvU2hhcmUgLSAoKCh0b1NoYXJlKmxhcmdlQ29uc3RhbnQpL2ludmVzdGVkKSpiYWxhbmNlT2ZbYV0pIC8gbGFyZ2VDb25zdGFudDsNCiAgICB9DQogICAgDQogICAgLyoqIFB1YmxpYyBmdW5jdGlvbnMgKi8NCiAgICANCiAgICAvLyB0byBiZSBjYWxsZWQgZXZlcnkgZGF5DQogICAgZnVuY3Rpb24gaWRsZSgpIHsNCiAgICAgICAgbGFzdFBpbmdbbXNnLnNlbmRlcl0gPSBub3c7DQogICAgfQ0KICAgIA0KICAgIC8vIGZ1bmN0aW9uIGNhbGxlZCB3aGVuIGEgdXNlciB3YW50cyB0byBpbnZlc3QgaW4gdGhlIGNvbnRyYWN0DQogICAgLy8gYWZ0ZXIgY2FsbGluZyB0aGlzIGZ1bmN0aW9uIHlvdSBjYW5ub3QgY2xhaW0gcGFzdCByZXdhcmRzDQogICAgZnVuY3Rpb24gaW52ZXN0KCkgcGF5YWJsZSB7DQogICAgICAgIHVpbnQgcmV3YXJkID0gZ2V0UmV3YXJkKG1zZy5zZW5kZXIpOw0KICAgICAgICBhZGRQbGF5ZXIobXNnLnNlbmRlcik7DQogICAgICAgIG1vZGlmeUJhbGFuY2UobXNnLnNlbmRlciwgbXNnLnZhbHVlKTsNCiAgICAgICAgZm9yYmlkKG1zZy5zZW5kZXIpOw0KICAgICAgICBjcmVhdGVSZXdhcmQocmV3YXJkLCBpbnZlc3RlZCk7DQogICAgfQ0KICAgIA0KICAgIC8vIGZ1bmN0aW9uIGNhbGxlZCB3aGVuIGEgdXNlciB3YW50cyB0byBkaXZlc3QNCiAgICBmdW5jdGlvbiBkaXZlc3QodWludDI1NiB2YWx1ZSkgew0KICAgICAgICByZXF1aXJlKHZhbHVlIDw9IGJhbGFuY2VPZlttc2cuc2VuZGVyXSk7DQogICAgICAgIA0KICAgICAgICB1aW50IHJld2FyZCA9IGdldFJld2FyZChtc2cuc2VuZGVyKTsNCiAgICAgICAgbW9kaWZ5QmFsYW5jZShtc2cuc2VuZGVyLCAtdmFsdWUpOw0KICAgICAgICBmb3JiaWQobXNnLnNlbmRlcik7DQogICAgICAgIGNyZWF0ZVJld2FyZChyZXdhcmQsIGludmVzdGVkKTsNCiAgICAgICAgbXNnLnNlbmRlci50cmFuc2Zlcih2YWx1ZSk7DQogICAgfQ0KICAgIA0KICAgIC8vIGNsYWltcyB0aGUgcmV3YXJkcw0KICAgIGZ1bmN0aW9uIGNsYWltUmV3YXJkcygpIHsNCiAgICAgICAgdWludCByZXdhcmQgPSBnZXRSZXdhcmQobXNnLnNlbmRlcik7DQogICAgICAgIG1vZGlmeUJhbGFuY2UobXNnLnNlbmRlcixyZXdhcmQpOw0KICAgICAgICBmb3JiaWQobXNnLnNlbmRlcik7DQogICAgfQ0KICAgIA0KICAgIC8vIHVzZWQgdG8gdGFrZSBjcmVhdGUgYSByZXdhcmQgZnJvbSB0aGUgZnVuZHMgb2Ygc29tZW9uZSB3aG8gaGFzIG5vdA0KICAgIC8vIGlkbGVkIGluIHRoZSBsYXN0IDEwIG1pbnV0ZXMNCiAgICBmdW5jdGlvbiBwb2tlKGFkZHJlc3MgYSkgew0KICAgICAgICByZXF1aXJlKG5vdyA+IGxhc3RQaW5nW2FdICsgMTQgaG91cnMgJiYgYmFsYW5jZU9mW2FdID4gMCk7DQogICAgICAgIA0KICAgICAgICB1aW50IG1pc3NlZCA9IGdldFJld2FyZChhKTsNCiAgICAgICAgdWludCB0b1NoYXJlID0gYmFsYW5jZU9mW2FdIC8gMTA7DQogICAgICAgIHVpbnQgdG9Mb3NlID0gbG9zaW5nQW1vdW50KGEsIHRvU2hhcmUpOw0KICAgICAgICANCiAgICAgICAgY3JlYXRlUmV3YXJkKHRvU2hhcmUsIGludmVzdGVkKTsNCiAgICAgICAgbW9kaWZ5QmFsYW5jZShhLCAtdG9Mb3NlKTsNCiAgICAgICAgZm9yYmlkKGEpOw0KICAgICAgICBsYXN0UGluZ1thXSA9IG5vdzsNCiAgICAgICAgY3JlYXRlUmV3YXJkKG1pc3NlZCwgaW52ZXN0ZWQpOw0KICAgIH0NCn0='