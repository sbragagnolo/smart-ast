base 64 content
base64myAdvancedToken3
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC4yOw0KY29udHJhY3Qgb3duZWQgew0KICAgIGFkZHJlc3MgcHVibGljIG93bmVyOw0KDQogICAgZnVuY3Rpb24gb3duZWQoKSB7DQogICAgICAgIG93bmVyID0gbXNnLnNlbmRlcjsNCiAgICB9DQoNCiAgICBtb2RpZmllciBvbmx5T3duZXIgew0KICAgICAgICBpZiAobXNnLnNlbmRlciAhPSBvd25lcikgdGhyb3c7DQogICAgICAgIF87DQogICAgfQ0KDQogICAgZnVuY3Rpb24gdHJhbnNmZXJPd25lcnNoaXAoYWRkcmVzcyBuZXdPd25lcikgb25seU93bmVyIHsNCiAgICAgICAgb3duZXIgPSBuZXdPd25lcjsNCiAgICB9DQp9DQoNCmNvbnRyYWN0IHRva2VuUmVjaXBpZW50IHsgZnVuY3Rpb24gcmVjZWl2ZUFwcHJvdmFsKGFkZHJlc3MgX2Zyb20sIHVpbnQyNTYgX3ZhbHVlLCBhZGRyZXNzIF90b2tlbiwgYnl0ZXMgX2V4dHJhRGF0YSk7IH0NCg0KY29udHJhY3QgdG9rZW4gew0KICAgIC8qIFB1YmxpYyB2YXJpYWJsZXMgb2YgdGhlIHRva2VuICovDQogICAgc3RyaW5nIHB1YmxpYyBzdGFuZGFyZCA9ICdUb2tlbiAwLjEnOw0KICAgIHN0cmluZyBwdWJsaWMgbmFtZTsNCiAgICBzdHJpbmcgcHVibGljIHN5bWJvbDsNCiAgICB1aW50OCBwdWJsaWMgZGVjaW1hbHM7DQogICAgdWludDI1NiBwdWJsaWMgdG90YWxTdXBwbHk7DQoNCiAgICAvKiBUaGlzIGNyZWF0ZXMgYW4gYXJyYXkgd2l0aCBhbGwgYmFsYW5jZXMgKi8NCiAgICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIHB1YmxpYyBiYWxhbmNlT2Y7DQogICAgbWFwcGluZyAoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpKSBwdWJsaWMgYWxsb3dhbmNlOw0KDQogICAgLyogVGhpcyBnZW5lcmF0ZXMgYSBwdWJsaWMgZXZlbnQgb24gdGhlIGJsb2NrY2hhaW4gdGhhdCB3aWxsIG5vdGlmeSBjbGllbnRzICovDQogICAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIGZyb20sIGFkZHJlc3MgaW5kZXhlZCB0bywgdWludDI1NiB2YWx1ZSk7DQoNCiAgICAvKiBJbml0aWFsaXplcyBjb250cmFjdCB3aXRoIGluaXRpYWwgc3VwcGx5IHRva2VucyB0byB0aGUgY3JlYXRvciBvZiB0aGUgY29udHJhY3QgKi8NCiAgICBmdW5jdGlvbiB0b2tlbigNCiAgICAgICAgdWludDI1NiBpbml0aWFsU3VwcGx5LA0KICAgICAgICBzdHJpbmcgdG9rZW5OYW1lLA0KICAgICAgICB1aW50OCBkZWNpbWFsVW5pdHMsDQogICAgICAgIHN0cmluZyB0b2tlblN5bWJvbA0KICAgICAgICApIHsNCiAgICAgICAgYmFsYW5jZU9mW21zZy5zZW5kZXJdID0gaW5pdGlhbFN1cHBseTsgICAgICAgICAgICAgIC8vIEdpdmUgdGhlIGNyZWF0b3IgYWxsIGluaXRpYWwgdG9rZW5zDQogICAgICAgIHRvdGFsU3VwcGx5ID0gaW5pdGlhbFN1cHBseTsgICAgICAgICAgICAgICAgICAgICAgICAvLyBVcGRhdGUgdG90YWwgc3VwcGx5DQogICAgICAgIG5hbWUgPSB0b2tlbk5hbWU7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBTZXQgdGhlIG5hbWUgZm9yIGRpc3BsYXkgcHVycG9zZXMNCiAgICAgICAgc3ltYm9sID0gdG9rZW5TeW1ib2w7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFNldCB0aGUgc3ltYm9sIGZvciBkaXNwbGF5IHB1cnBvc2VzDQogICAgICAgIGRlY2ltYWxzID0gZGVjaW1hbFVuaXRzOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBBbW91bnQgb2YgZGVjaW1hbHMgZm9yIGRpc3BsYXkgcHVycG9zZXMNCiAgICB9DQoNCiAgICAvKiBTZW5kIGNvaW5zICovDQogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSB7DQogICAgICAgIGlmIChiYWxhbmNlT2ZbbXNnLnNlbmRlcl0gPCBfdmFsdWUpIHRocm93OyAgICAgICAgICAgLy8gQ2hlY2sgaWYgdGhlIHNlbmRlciBoYXMgZW5vdWdoDQogICAgICAgIGlmIChiYWxhbmNlT2ZbX3RvXSArIF92YWx1ZSA8IGJhbGFuY2VPZltfdG9dKSB0aHJvdzsgLy8gQ2hlY2sgZm9yIG92ZXJmbG93cw0KICAgICAgICBiYWxhbmNlT2ZbbXNnLnNlbmRlcl0gLT0gX3ZhbHVlOyAgICAgICAgICAgICAgICAgICAgIC8vIFN1YnRyYWN0IGZyb20gdGhlIHNlbmRlcg0KICAgICAgICBiYWxhbmNlT2ZbX3RvXSArPSBfdmFsdWU7ICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIEFkZCB0aGUgc2FtZSB0byB0aGUgcmVjaXBpZW50DQogICAgICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsgICAgICAgICAgICAgICAgICAgLy8gTm90aWZ5IGFueW9uZSBsaXN0ZW5pbmcgdGhhdCB0aGlzIHRyYW5zZmVyIHRvb2sgcGxhY2UNCiAgICB9DQoNCiAgICAvKiBBbGxvdyBhbm90aGVyIGNvbnRyYWN0IHRvIHNwZW5kIHNvbWUgdG9rZW5zIGluIHlvdXIgYmVoYWxmICovDQogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkNCiAgICAgICAgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7DQogICAgICAgIGFsbG93YW5jZVttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBfdmFsdWU7DQogICAgICAgIHJldHVybiB0cnVlOw0KICAgIH0NCg0KICAgIC8qIEFwcHJvdmUgYW5kIHRoZW4gY29tbXVuaWNhdGUgdGhlIGFwcHJvdmVkIGNvbnRyYWN0IGluIGEgc2luZ2xlIHR4ICovDQogICAgZnVuY3Rpb24gYXBwcm92ZUFuZENhbGwoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUsIGJ5dGVzIF9leHRyYURhdGEpDQogICAgICAgIHJldHVybnMgKGJvb2wgc3VjY2VzcykgeyAgICANCiAgICAgICAgdG9rZW5SZWNpcGllbnQgc3BlbmRlciA9IHRva2VuUmVjaXBpZW50KF9zcGVuZGVyKTsNCiAgICAgICAgaWYgKGFwcHJvdmUoX3NwZW5kZXIsIF92YWx1ZSkpIHsNCiAgICAgICAgICAgIHNwZW5kZXIucmVjZWl2ZUFwcHJvdmFsKG1zZy5zZW5kZXIsIF92YWx1ZSwgdGhpcywgX2V4dHJhRGF0YSk7DQogICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIC8qIEEgY29udHJhY3QgYXR0ZW1wdHMgdG8gZ2V0IHRoZSBjb2lucyAqLw0KICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcykgew0KICAgICAgICBpZiAoYmFsYW5jZU9mW19mcm9tXSA8IF92YWx1ZSkgdGhyb3c7ICAgICAgICAgICAgICAgICAvLyBDaGVjayBpZiB0aGUgc2VuZGVyIGhhcyBlbm91Z2gNCiAgICAgICAgaWYgKGJhbGFuY2VPZltfdG9dICsgX3ZhbHVlIDwgYmFsYW5jZU9mW190b10pIHRocm93OyAgLy8gQ2hlY2sgZm9yIG92ZXJmbG93cw0KICAgICAgICBpZiAoX3ZhbHVlID4gYWxsb3dhbmNlW19mcm9tXVttc2cuc2VuZGVyXSkgdGhyb3c7ICAgLy8gQ2hlY2sgYWxsb3dhbmNlDQogICAgICAgIGJhbGFuY2VPZltfZnJvbV0gLT0gX3ZhbHVlOyAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gU3VidHJhY3QgZnJvbSB0aGUgc2VuZGVyDQogICAgICAgIGJhbGFuY2VPZltfdG9dICs9IF92YWx1ZTsgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gQWRkIHRoZSBzYW1lIHRvIHRoZSByZWNpcGllbnQNCiAgICAgICAgYWxsb3dhbmNlW19mcm9tXVttc2cuc2VuZGVyXSAtPSBfdmFsdWU7DQogICAgICAgIFRyYW5zZmVyKF9mcm9tLCBfdG8sIF92YWx1ZSk7DQogICAgICAgIHJldHVybiB0cnVlOw0KICAgIH0NCg0KICAgIC8qIFRoaXMgdW5uYW1lZCBmdW5jdGlvbiBpcyBjYWxsZWQgd2hlbmV2ZXIgc29tZW9uZSB0cmllcyB0byBzZW5kIGV0aGVyIHRvIGl0ICovDQogICAgZnVuY3Rpb24gKCkgew0KICAgICAgICB0aHJvdzsgICAgIC8vIFByZXZlbnRzIGFjY2lkZW50YWwgc2VuZGluZyBvZiBldGhlcg0KICAgIH0NCn0NCg0KY29udHJhY3QgTXlBZHZhbmNlZFRva2VuIGlzIG93bmVkLCB0b2tlbiB7DQoNCiAgICB1aW50MjU2IHB1YmxpYyBzZWxsUHJpY2U7DQogICAgdWludDI1NiBwdWJsaWMgYnV5UHJpY2U7DQoNCiAgICBtYXBwaW5nIChhZGRyZXNzID0+IGJvb2wpIHB1YmxpYyBmcm96ZW5BY2NvdW50Ow0KDQogICAgLyogVGhpcyBnZW5lcmF0ZXMgYSBwdWJsaWMgZXZlbnQgb24gdGhlIGJsb2NrY2hhaW4gdGhhdCB3aWxsIG5vdGlmeSBjbGllbnRzICovDQogICAgZXZlbnQgRnJvemVuRnVuZHMoYWRkcmVzcyB0YXJnZXQsIGJvb2wgZnJvemVuKTsNCg0KICAgIC8qIEluaXRpYWxpemVzIGNvbnRyYWN0IHdpdGggaW5pdGlhbCBzdXBwbHkgdG9rZW5zIHRvIHRoZSBjcmVhdG9yIG9mIHRoZSBjb250cmFjdCAqLw0KICAgIGZ1bmN0aW9uIE15QWR2YW5jZWRUb2tlbigNCiAgICAgICAgdWludDI1NiBpbml0aWFsU3VwcGx5LA0KICAgICAgICBzdHJpbmcgdG9rZW5OYW1lLA0KICAgICAgICB1aW50OCBkZWNpbWFsVW5pdHMsDQogICAgICAgIHN0cmluZyB0b2tlblN5bWJvbA0KICAgICkgdG9rZW4gKGluaXRpYWxTdXBwbHksIHRva2VuTmFtZSwgZGVjaW1hbFVuaXRzLCB0b2tlblN5bWJvbCkge30NCg0KICAgIC8qIFNlbmQgY29pbnMgKi8NCiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHsNCiAgICAgICAgaWYgKGJhbGFuY2VPZlttc2cuc2VuZGVyXSA8IF92YWx1ZSkgdGhyb3c7ICAgICAgICAgICAvLyBDaGVjayBpZiB0aGUgc2VuZGVyIGhhcyBlbm91Z2gNCiAgICAgICAgaWYgKGJhbGFuY2VPZltfdG9dICsgX3ZhbHVlIDwgYmFsYW5jZU9mW190b10pIHRocm93OyAvLyBDaGVjayBmb3Igb3ZlcmZsb3dzDQogICAgICAgIGlmIChmcm96ZW5BY2NvdW50W21zZy5zZW5kZXJdKSB0aHJvdzsgICAgICAgICAgICAgICAgLy8gQ2hlY2sgaWYgZnJvemVuDQogICAgICAgIGJhbGFuY2VPZlttc2cuc2VuZGVyXSAtPSBfdmFsdWU7ICAgICAgICAgICAgICAgICAgICAgLy8gU3VidHJhY3QgZnJvbSB0aGUgc2VuZGVyDQogICAgICAgIGJhbGFuY2VPZltfdG9dICs9IF92YWx1ZTsgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gQWRkIHRoZSBzYW1lIHRvIHRoZSByZWNpcGllbnQNCiAgICAgICAgVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOyAgICAgICAgICAgICAgICAgICAvLyBOb3RpZnkgYW55b25lIGxpc3RlbmluZyB0aGF0IHRoaXMgdHJhbnNmZXIgdG9vayBwbGFjZQ0KICAgIH0NCg0KDQogICAgLyogQSBjb250cmFjdCBhdHRlbXB0cyB0byBnZXQgdGhlIGNvaW5zICovDQogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7DQogICAgICAgIGlmIChmcm96ZW5BY2NvdW50W19mcm9tXSkgdGhyb3c7ICAgICAgICAgICAgICAgICAgICAgICAgLy8gQ2hlY2sgaWYgZnJvemVuICAgICAgICAgICAgDQogICAgICAgIGlmIChiYWxhbmNlT2ZbX2Zyb21dIDwgX3ZhbHVlKSB0aHJvdzsgICAgICAgICAgICAgICAgIC8vIENoZWNrIGlmIHRoZSBzZW5kZXIgaGFzIGVub3VnaA0KICAgICAgICBpZiAoYmFsYW5jZU9mW190b10gKyBfdmFsdWUgPCBiYWxhbmNlT2ZbX3RvXSkgdGhyb3c7ICAvLyBDaGVjayBmb3Igb3ZlcmZsb3dzDQogICAgICAgIGlmIChfdmFsdWUgPiBhbGxvd2FuY2VbX2Zyb21dW21zZy5zZW5kZXJdKSB0aHJvdzsgICAvLyBDaGVjayBhbGxvd2FuY2UNCiAgICAgICAgYmFsYW5jZU9mW19mcm9tXSAtPSBfdmFsdWU7ICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBTdWJ0cmFjdCBmcm9tIHRoZSBzZW5kZXINCiAgICAgICAgYmFsYW5jZU9mW190b10gKz0gX3ZhbHVlOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBBZGQgdGhlIHNhbWUgdG8gdGhlIHJlY2lwaWVudA0KICAgICAgICBhbGxvd2FuY2VbX2Zyb21dW21zZy5zZW5kZXJdIC09IF92YWx1ZTsNCiAgICAgICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsNCiAgICAgICAgcmV0dXJuIHRydWU7DQogICAgfQ0KDQogICAgZnVuY3Rpb24gbWludFRva2VuKGFkZHJlc3MgdGFyZ2V0LCB1aW50MjU2IG1pbnRlZEFtb3VudCkgb25seU93bmVyIHsNCiAgICAgICAgYmFsYW5jZU9mW3RhcmdldF0gKz0gbWludGVkQW1vdW50Ow0KICAgICAgICB0b3RhbFN1cHBseSArPSBtaW50ZWRBbW91bnQ7DQogICAgICAgIFRyYW5zZmVyKDAsIHRoaXMsIG1pbnRlZEFtb3VudCk7DQogICAgICAgIFRyYW5zZmVyKHRoaXMsIHRhcmdldCwgbWludGVkQW1vdW50KTsNCiAgICB9DQoNCiAgICBmdW5jdGlvbiBmcmVlemVBY2NvdW50KGFkZHJlc3MgdGFyZ2V0LCBib29sIGZyZWV6ZSkgb25seU93bmVyIHsNCiAgICAgICAgZnJvemVuQWNjb3VudFt0YXJnZXRdID0gZnJlZXplOw0KICAgICAgICBGcm96ZW5GdW5kcyh0YXJnZXQsIGZyZWV6ZSk7DQogICAgfQ0KDQogICAgZnVuY3Rpb24gc2V0UHJpY2VzKHVpbnQyNTYgbmV3U2VsbFByaWNlLCB1aW50MjU2IG5ld0J1eVByaWNlKSBvbmx5T3duZXIgew0KICAgICAgICBzZWxsUHJpY2UgPSBuZXdTZWxsUHJpY2U7DQogICAgICAgIGJ1eVByaWNlID0gbmV3QnV5UHJpY2U7DQogICAgfQ0KDQogICAgZnVuY3Rpb24gYnV5KCkgcGF5YWJsZSB7DQogICAgICAgIHVpbnQgYW1vdW50ID0gbXNnLnZhbHVlIC8gYnV5UHJpY2U7ICAgICAgICAgICAgICAgIC8vIGNhbGN1bGF0ZXMgdGhlIGFtb3VudA0KICAgICAgICBpZiAoYmFsYW5jZU9mW3RoaXNdIDwgYW1vdW50KSB0aHJvdzsgICAgICAgICAgICAgICAvLyBjaGVja3MgaWYgaXQgaGFzIGVub3VnaCB0byBzZWxsDQogICAgICAgIGJhbGFuY2VPZlttc2cuc2VuZGVyXSArPSBhbW91bnQ7ICAgICAgICAgICAgICAgICAgIC8vIGFkZHMgdGhlIGFtb3VudCB0byBidXllcidzIGJhbGFuY2UNCiAgICAgICAgYmFsYW5jZU9mW3RoaXNdIC09IGFtb3VudDsgICAgICAgICAgICAgICAgICAgICAgICAgLy8gc3VidHJhY3RzIGFtb3VudCBmcm9tIHNlbGxlcidzIGJhbGFuY2UNCiAgICAgICAgVHJhbnNmZXIodGhpcywgbXNnLnNlbmRlciwgYW1vdW50KTsgICAgICAgICAgICAgICAgLy8gZXhlY3V0ZSBhbiBldmVudCByZWZsZWN0aW5nIHRoZSBjaGFuZ2UNCiAgICB9DQoNCiAgICBmdW5jdGlvbiBzZWxsKHVpbnQyNTYgYW1vdW50KSB7DQogICAgICAgIGlmIChiYWxhbmNlT2ZbbXNnLnNlbmRlcl0gPCBhbW91bnQgKSB0aHJvdzsgICAgICAgIC8vIGNoZWNrcyBpZiB0aGUgc2VuZGVyIGhhcyBlbm91Z2ggdG8gc2VsbA0KICAgICAgICBiYWxhbmNlT2ZbdGhpc10gKz0gYW1vdW50OyAgICAgICAgICAgICAgICAgICAgICAgICAvLyBhZGRzIHRoZSBhbW91bnQgdG8gb3duZXIncyBiYWxhbmNlDQogICAgICAgIGJhbGFuY2VPZlttc2cuc2VuZGVyXSAtPSBhbW91bnQ7ICAgICAgICAgICAgICAgICAgIC8vIHN1YnRyYWN0cyB0aGUgYW1vdW50IGZyb20gc2VsbGVyJ3MgYmFsYW5jZQ0KICAgICAgICBpZiAoIW1zZy5zZW5kZXIuc2VuZChhbW91bnQgKiBzZWxsUHJpY2UpKSB7ICAgICAgICAvLyBzZW5kcyBldGhlciB0byB0aGUgc2VsbGVyLiBJdCdzIGltcG9ydGFudA0KICAgICAgICAgICAgdGhyb3c7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyB0byBkbyB0aGlzIGxhc3QgdG8gYXZvaWQgcmVjdXJzaW9uIGF0dGFja3MNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIHRoaXMsIGFtb3VudCk7ICAgICAgICAgICAgLy8gZXhlY3V0ZXMgYW4gZXZlbnQgcmVmbGVjdGluZyBvbiB0aGUgY2hhbmdlDQogICAgICAgIH0gICAgICAgICAgICAgICANCiAgICB9DQp9'