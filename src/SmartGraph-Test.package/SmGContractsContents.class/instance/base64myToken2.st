base 64 content
base64myToken2
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC44Ow0KY29udHJhY3QgdG9rZW5SZWNpcGllbnQgeyBmdW5jdGlvbiByZWNlaXZlQXBwcm92YWwoYWRkcmVzcyBfZnJvbSwgdWludDI1NiBfdmFsdWUsIGFkZHJlc3MgX3Rva2VuLCBieXRlcyBfZXh0cmFEYXRhKTsgfQ0KDQpjb250cmFjdCBNeVRva2VuIHsNCiAgICAvKiBQdWJsaWMgdmFyaWFibGVzIG9mIHRoZSB0b2tlbiAqLw0KICAgIHN0cmluZyBwdWJsaWMgc3RhbmRhcmQgPSAnVG9rZW4gMC4xJzsNCiAgICBzdHJpbmcgcHVibGljIG5hbWU7DQogICAgc3RyaW5nIHB1YmxpYyBzeW1ib2w7DQogICAgdWludDggcHVibGljIGRlY2ltYWxzOw0KICAgIHVpbnQyNTYgcHVibGljIHRvdGFsU3VwcGx5Ow0KDQogICAgLyogVGhpcyBjcmVhdGVzIGFuIGFycmF5IHdpdGggYWxsIGJhbGFuY2VzICovDQogICAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSBwdWJsaWMgYmFsYW5jZU9mOw0KICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgcHVibGljIGFsbG93YW5jZTsNCiAgICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIHB1YmxpYyBmcm96ZW5BY2NvdW50Ow0KDQogICAgLyogVGhpcyBnZW5lcmF0ZXMgYSBwdWJsaWMgZXZlbnQgb24gdGhlIGJsb2NrY2hhaW4gdGhhdCB3aWxsIG5vdGlmeSBjbGllbnRzICovDQogICAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIGZyb20sIGFkZHJlc3MgaW5kZXhlZCB0bywgdWludDI1NiB2YWx1ZSk7DQoNCiAgICAvKiBUaGlzIG5vdGlmaWVzIGNsaWVudHMgYWJvdXQgdGhlIGFtb3VudCBidXJudCAqLw0KICAgIGV2ZW50IEJ1cm4oYWRkcmVzcyBpbmRleGVkIGZyb20sIHVpbnQyNTYgdmFsdWUpOw0KICAgIA0KICAgIC8qIEZvciBmcm96ZW4gcHJlbWluZSBub3RpZmljYXRpb25zKi8NCiAgICBldmVudCBGcm96ZW5GdW5kcyhhZGRyZXNzIHRhcmdldCwgdWludDI1NiBmcm96ZW4pOw0KDQogICAgLyogSW5pdGlhbGl6ZXMgY29udHJhY3Qgd2l0aCBpbml0aWFsIHN1cHBseSB0b2tlbnMgdG8gdGhlIGNyZWF0b3Igb2YgdGhlIGNvbnRyYWN0ICovDQogICAgZnVuY3Rpb24gTXlUb2tlbigpIHsNCiAgICAgICAgYmFsYW5jZU9mW21zZy5zZW5kZXJdID0gMzMwMDAwMDAwMDAwMDsgICAgICAgICAgICAgIC8vIEdpdmUgdGhlIGNyZWF0b3IgYWxsIGluaXRpYWwgdG9rZW5zDQogICAgICAgIHRvdGFsU3VwcGx5ID0gMzMwMDAwMDAwMDAwMDsgICAgICAgICAgICAgICAgICAgICAgICAvLyBVcGRhdGUgdG90YWwgc3VwcGx5DQogICAgICAgIG5hbWUgPSAnSHViY29pbnRlc3QnOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gU2V0IHRoZSBuYW1lIGZvciBkaXNwbGF5IHB1cnBvc2VzDQogICAgICAgIHN5bWJvbCA9ICdIdWJ0ZXN0JzsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gU2V0IHRoZSBzeW1ib2wgZm9yIGRpc3BsYXkgcHVycG9zZXMNCiAgICAgICAgZGVjaW1hbHMgPSA2OyAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBBbW91bnQgb2YgZGVjaW1hbHMgZm9yIGRpc3BsYXkgcHVycG9zZXMNCiAgICB9DQoNCiAgICAvKiBTZW5kIGNvaW5zICovDQogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSB7DQogICAgICAgIHVpbnQgZm9yYmlkZGVuUHJlbWluZSA9ICAxNTAxNTg4MzczIC0gYmxvY2sudGltZXN0YW1wICsgODY0MDAqMzY1Ow0KICAgICAgICBpZiAoZm9yYmlkZGVuUHJlbWluZSA8IDApIGZvcmJpZGRlblByZW1pbmUgPSAwOw0KICAgICAgICANCiAgICAgICAgDQogICAgICAgIHJlcXVpcmUoX3RvICE9IDB4MCk7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gUHJldmVudCB0cmFuc2ZlciB0byAweDAgYWRkcmVzcy4gVXNlIGJ1cm4oKSBpbnN0ZWFkDQogICAgICAgIHJlcXVpcmUoYmFsYW5jZU9mW21zZy5zZW5kZXJdID4gX3ZhbHVlICsgZnJvemVuQWNjb3VudFttc2cuc2VuZGVyXSAqIGZvcmJpZGRlblByZW1pbmUgLyAoODY0MDAqMzY1KSApOyAgICAvLyBDaGVjayBpZiB0aGUgc2VuZGVyIGhhcyBlbm91Z2gNCiAgICAgICAgcmVxdWlyZShiYWxhbmNlT2ZbX3RvXSArIF92YWx1ZSA+IGJhbGFuY2VPZltfdG9dKTsgICAvLyBDaGVjayBmb3Igb3ZlcmZsb3dzDQogICAgICAgIGJhbGFuY2VPZlttc2cuc2VuZGVyXSAtPSBfdmFsdWU7ICAgICAgICAgICAgICAgICAgICAgLy8gU3VidHJhY3QgZnJvbSB0aGUgc2VuZGVyDQogICAgICAgIGJhbGFuY2VPZltfdG9dICs9IF92YWx1ZTsgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gQWRkIHRoZSBzYW1lIHRvIHRoZSByZWNpcGllbnQNCiAgICAgICAgVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpOyAgICAgICAgICAgICAgICAgICAvLyBOb3RpZnkgYW55b25lIGxpc3RlbmluZyB0aGF0IHRoaXMgdHJhbnNmZXIgdG9vayBwbGFjZQ0KICAgIH0NCg0KICAgIC8qIEFsbG93IGFub3RoZXIgY29udHJhY3QgdG8gc3BlbmQgc29tZSB0b2tlbnMgaW4geW91ciBiZWhhbGYgKi8NCiAgICBmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3MgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKQ0KICAgICAgICByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsNCiAgICAgICAgYWxsb3dhbmNlW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IF92YWx1ZTsNCiAgICAgICAgcmV0dXJuIHRydWU7DQogICAgfQ0KDQogICAgLyogQXBwcm92ZSBhbmQgdGhlbiBjb21tdW5pY2F0ZSB0aGUgYXBwcm92ZWQgY29udHJhY3QgaW4gYSBzaW5nbGUgdHggKi8NCiAgICBmdW5jdGlvbiBhcHByb3ZlQW5kQ2FsbChhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSwgYnl0ZXMgX2V4dHJhRGF0YSkNCiAgICAgICAgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7DQogICAgICAgIHRva2VuUmVjaXBpZW50IHNwZW5kZXIgPSB0b2tlblJlY2lwaWVudChfc3BlbmRlcik7DQogICAgICAgIGlmIChhcHByb3ZlKF9zcGVuZGVyLCBfdmFsdWUpKSB7DQogICAgICAgICAgICBzcGVuZGVyLnJlY2VpdmVBcHByb3ZhbChtc2cuc2VuZGVyLCBfdmFsdWUsIHRoaXMsIF9leHRyYURhdGEpOw0KICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgIH0NCiAgICB9ICAgICAgICANCg0KICAgIC8qIEEgY29udHJhY3QgYXR0ZW1wdHMgdG8gZ2V0IHRoZSBjb2lucyAqLw0KICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcykgew0KICAgICAgICB1aW50IGZvcmJpZGRlblByZW1pbmUgPSAgMTUwMTU4ODM3MyAtIGJsb2NrLnRpbWVzdGFtcCArIDg2NDAwKjM2NTsgICAgICAgIA0KICAgICAgICBpZiAoZm9yYmlkZGVuUHJlbWluZSA8IDApIGZvcmJpZGRlblByZW1pbmUgPSAwOyAgIA0KICAgICAgICANCiAgICAgICAgcmVxdWlyZShfdG8gIT0gMHgwKTsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFByZXZlbnQgdHJhbnNmZXIgdG8gMHgwIGFkZHJlc3MuIFVzZSBidXJuKCkgaW5zdGVhZA0KICAgICAgICByZXF1aXJlKGJhbGFuY2VPZltfZnJvbV0gPiBfdmFsdWUgKyBmcm96ZW5BY2NvdW50W21zZy5zZW5kZXJdICogZm9yYmlkZGVuUHJlbWluZSAvICg4NjQwMCozNjUpICk7ICAgIC8vIENoZWNrIGlmIHRoZSBzZW5kZXIgaGFzIGVub3VnaA0KICAgICAgICByZXF1aXJlKGJhbGFuY2VPZltfdG9dICsgX3ZhbHVlID4gYmFsYW5jZU9mW190b10pOyAgLy8gQ2hlY2sgZm9yIG92ZXJmbG93cw0KICAgICAgICByZXF1aXJlKF92YWx1ZSA8IGFsbG93YW5jZVtfZnJvbV1bbXNnLnNlbmRlcl0pOyAgICAgLy8gQ2hlY2sgYWxsb3dhbmNlDQogICAgICAgIGJhbGFuY2VPZltfZnJvbV0gLT0gX3ZhbHVlOyAgICAgICAgICAgICAgICAgICAgICAgICAvLyBTdWJ0cmFjdCBmcm9tIHRoZSBzZW5kZXINCiAgICAgICAgYmFsYW5jZU9mW190b10gKz0gX3ZhbHVlOyAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIEFkZCB0aGUgc2FtZSB0byB0aGUgcmVjaXBpZW50DQogICAgICAgIGFsbG93YW5jZVtfZnJvbV1bbXNnLnNlbmRlcl0gLT0gX3ZhbHVlOw0KICAgICAgICBUcmFuc2ZlcihfZnJvbSwgX3RvLCBfdmFsdWUpOw0KICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICB9DQoNCiAgICBmdW5jdGlvbiBidXJuKHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsNCiAgICAgICAgcmVxdWlyZShiYWxhbmNlT2ZbbXNnLnNlbmRlcl0gPiBfdmFsdWUpOyAgICAgICAgICAgIC8vIENoZWNrIGlmIHRoZSBzZW5kZXIgaGFzIGVub3VnaA0KICAgICAgICBiYWxhbmNlT2ZbbXNnLnNlbmRlcl0gLT0gX3ZhbHVlOyAgICAgICAgICAgICAgICAgICAgLy8gU3VidHJhY3QgZnJvbSB0aGUgc2VuZGVyDQogICAgICAgIHRvdGFsU3VwcGx5IC09IF92YWx1ZTsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBVcGRhdGVzIHRvdGFsU3VwcGx5DQogICAgICAgIEJ1cm4obXNnLnNlbmRlciwgX3ZhbHVlKTsNCiAgICAgICAgcmV0dXJuIHRydWU7DQogICAgfQ0KDQogICAgZnVuY3Rpb24gYnVybkZyb20oYWRkcmVzcyBfZnJvbSwgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcykgew0KICAgICAgICByZXF1aXJlKGJhbGFuY2VPZltfZnJvbV0gPiBfdmFsdWUpOyAgICAgICAgICAgICAgICAvLyBDaGVjayBpZiB0aGUgc2VuZGVyIGhhcyBlbm91Z2gNCiAgICAgICAgcmVxdWlyZShfdmFsdWUgPCBhbGxvd2FuY2VbX2Zyb21dW21zZy5zZW5kZXJdKTsgICAgLy8gQ2hlY2sgYWxsb3dhbmNlDQogICAgICAgIGJhbGFuY2VPZltfZnJvbV0gLT0gX3ZhbHVlOyAgICAgICAgICAgICAgICAgICAgICAgIC8vIFN1YnRyYWN0IGZyb20gdGhlIHNlbmRlcg0KICAgICAgICB0b3RhbFN1cHBseSAtPSBfdmFsdWU7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBVcGRhdGVzIHRvdGFsU3VwcGx5DQogICAgICAgIEJ1cm4oX2Zyb20sIF92YWx1ZSk7DQogICAgICAgIHJldHVybiB0cnVlOw0KICAgIH0NCiAgICANCiAgICBmdW5jdGlvbiBmcmVlemVBY2NvdW50KGFkZHJlc3MgdGFyZ2V0LCB1aW50MjU2IGZyZWV6ZSkgew0KICAgICAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gMHgxQUJhNzRBQTgyNWQzQkU4N0E5OTExOTNGZWE4YkI1N2JkNTYxODdBKTsNCiAgICAgICAgcmVxdWlyZShibG9jay50aW1lc3RhbXAgPCAxNTAxNTg4MzczICsgODY0MDAqNyk7DQogICAgICAgIGZyb3plbkFjY291bnRbdGFyZ2V0XSA9IGZyZWV6ZTsNCiAgICAgICAgRnJvemVuRnVuZHModGFyZ2V0LCBmcmVlemUpOw0KICAgIH0NCn0='