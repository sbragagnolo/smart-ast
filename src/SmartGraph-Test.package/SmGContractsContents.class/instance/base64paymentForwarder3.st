base 64 content
base64paymentForwarder3
	^'LyoNCiAqIE93bmFibGUNCiAqDQogKiBCYXNlIGNvbnRyYWN0IHdpdGggYW4gb3duZXIuDQogKiBQcm92aWRlcyBvbmx5T3duZXIgbW9kaWZpZXIsIHdoaWNoIHByZXZlbnRzIGZ1bmN0aW9uIGZyb20gcnVubmluZyBpZiBpdCBpcyBjYWxsZWQgYnkgYW55b25lIG90aGVyIHRoYW4gdGhlIG93bmVyLg0KICovDQpjb250cmFjdCBPd25hYmxlIHsNCiAgYWRkcmVzcyBwdWJsaWMgb3duZXI7DQoNCiAgZnVuY3Rpb24gT3duYWJsZSgpIHsNCiAgICBvd25lciA9IG1zZy5zZW5kZXI7DQogIH0NCg0KICBtb2RpZmllciBvbmx5T3duZXIoKSB7DQogICAgaWYgKG1zZy5zZW5kZXIgIT0gb3duZXIpIHsNCiAgICAgIHRocm93Ow0KICAgIH0NCiAgICBfOw0KICB9DQoNCiAgZnVuY3Rpb24gdHJhbnNmZXJPd25lcnNoaXAoYWRkcmVzcyBuZXdPd25lcikgb25seU93bmVyIHsNCiAgICBpZiAobmV3T3duZXIgIT0gYWRkcmVzcygwKSkgew0KICAgICAgb3duZXIgPSBuZXdPd25lcjsNCiAgICB9DQogIH0NCg0KfQ0KDQoNCi8qDQogKiBIYWx0YWJsZQ0KICoNCiAqIEFic3RyYWN0IGNvbnRyYWN0IHRoYXQgYWxsb3dzIGNoaWxkcmVuIHRvIGltcGxlbWVudCBhbg0KICogZW1lcmdlbmN5IHN0b3AgbWVjaGFuaXNtLiBEaWZmZXJzIGZyb20gUGF1c2FibGUgYnkgY2F1c2luZyBhIHRocm93DQogKiBpbnN0ZWFkIG9mIHJldHVybiB3aGVuIGluIGhhbHQgbW9kZS4NCiAqDQogKg0KICogT3JpZ2luYWxseSBlbnZpc2lvbmVkIGluIEZpcnN0Qmxvb2QgSUNPIGNvbnRyYWN0Lg0KICovDQpjb250cmFjdCBIYWx0YWJsZSBpcyBPd25hYmxlIHsNCiAgYm9vbCBwdWJsaWMgaGFsdGVkOw0KDQogIG1vZGlmaWVyIHN0b3BJbkVtZXJnZW5jeSB7DQogICAgaWYgKGhhbHRlZCkgdGhyb3c7DQogICAgXzsNCiAgfQ0KDQogIG1vZGlmaWVyIG9ubHlJbkVtZXJnZW5jeSB7DQogICAgaWYgKCFoYWx0ZWQpIHRocm93Ow0KICAgIF87DQogIH0NCg0KICAvLyBjYWxsZWQgYnkgdGhlIG93bmVyIG9uIGVtZXJnZW5jeSwgdHJpZ2dlcnMgc3RvcHBlZCBzdGF0ZQ0KICBmdW5jdGlvbiBoYWx0KCkgZXh0ZXJuYWwgb25seU93bmVyIHsNCiAgICBoYWx0ZWQgPSB0cnVlOw0KICB9DQoNCiAgLy8gY2FsbGVkIGJ5IHRoZSBvd25lciBvbiBlbmQgb2YgZW1lcmdlbmN5LCByZXR1cm5zIHRvIG5vcm1hbCBzdGF0ZQ0KICBmdW5jdGlvbiB1bmhhbHQoKSBleHRlcm5hbCBvbmx5T3duZXIgb25seUluRW1lcmdlbmN5IHsNCiAgICBoYWx0ZWQgPSBmYWxzZTsNCiAgfQ0KDQp9DQoNCg0KDQovKioNCiAqIE1hdGggb3BlcmF0aW9ucyB3aXRoIHNhZmV0eSBjaGVja3MNCiAqLw0KY29udHJhY3QgU2FmZU1hdGggew0KICBmdW5jdGlvbiBzYWZlTXVsKHVpbnQgYSwgdWludCBiKSBpbnRlcm5hbCByZXR1cm5zICh1aW50KSB7DQogICAgdWludCBjID0gYSAqIGI7DQogICAgYXNzZXJ0KGEgPT0gMCB8fCBjIC8gYSA9PSBiKTsNCiAgICByZXR1cm4gYzsNCiAgfQ0KDQogIGZ1bmN0aW9uIHNhZmVEaXYodWludCBhLCB1aW50IGIpIGludGVybmFsIHJldHVybnMgKHVpbnQpIHsNCiAgICBhc3NlcnQoYiA+IDApOw0KICAgIHVpbnQgYyA9IGEgLyBiOw0KICAgIGFzc2VydChhID09IGIgKiBjICsgYSAlIGIpOw0KICAgIHJldHVybiBjOw0KICB9DQoNCiAgZnVuY3Rpb24gc2FmZVN1Yih1aW50IGEsIHVpbnQgYikgaW50ZXJuYWwgcmV0dXJucyAodWludCkgew0KICAgIGFzc2VydChiIDw9IGEpOw0KICAgIHJldHVybiBhIC0gYjsNCiAgfQ0KDQogIGZ1bmN0aW9uIHNhZmVBZGQodWludCBhLCB1aW50IGIpIGludGVybmFsIHJldHVybnMgKHVpbnQpIHsNCiAgICB1aW50IGMgPSBhICsgYjsNCiAgICBhc3NlcnQoYz49YSAmJiBjPj1iKTsNCiAgICByZXR1cm4gYzsNCiAgfQ0KDQogIGZ1bmN0aW9uIG1heDY0KHVpbnQ2NCBhLCB1aW50NjQgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDY0KSB7DQogICAgcmV0dXJuIGEgPj0gYiA/IGEgOiBiOw0KICB9DQoNCiAgZnVuY3Rpb24gbWluNjQodWludDY0IGEsIHVpbnQ2NCBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50NjQpIHsNCiAgICByZXR1cm4gYSA8IGIgPyBhIDogYjsNCiAgfQ0KDQogIGZ1bmN0aW9uIG1heDI1Nih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1Nikgew0KICAgIHJldHVybiBhID49IGIgPyBhIDogYjsNCiAgfQ0KDQogIGZ1bmN0aW9uIG1pbjI1Nih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1Nikgew0KICAgIHJldHVybiBhIDwgYiA/IGEgOiBiOw0KICB9DQoNCiAgZnVuY3Rpb24gYXNzZXJ0KGJvb2wgYXNzZXJ0aW9uKSBpbnRlcm5hbCB7DQogICAgaWYgKCFhc3NlcnRpb24pIHsNCiAgICAgIHRocm93Ow0KICAgIH0NCiAgfQ0KfQ0KDQoNCg0KLyoqDQogKiBGb3J3YXJkIEV0aGVyZXVtIHBheW1lbnRzIHRvIGFub3RoZXIgd2FsbGV0IGFuZCB0cmFjayB0aGVtIHdpdGggYW4gZXZlbnQuDQogKg0KICogQWxsb3dzIHRvIGlkZW50aWZ5IGN1c3RvbWVycyB3aG8gbWFkZSBFdGhlcmV1bSBwYXltZW50IGZvciBhIGNlbnRyYWwgdG9rZW4gaXNzdWFuY2UuDQogKiBGdXJ0aGVybW9yZSBhbGxvdyBtYWtpbmcgYSBwYXltZW50IG9uIGJlaGFsZiBvZiBhbm90aGVyIGFkZHJlc3MuDQogKg0KICogQWxsb3cgcGF1c2luZyB0byBzaWduYWwgdGhlIGVuZCBvZiB0aGUgY3Jvd2RzYWxlLg0KICovDQpjb250cmFjdCBQYXltZW50Rm9yd2FyZGVyIGlzIEhhbHRhYmxlLCBTYWZlTWF0aCB7DQoNCiAgLyoqIFdobyB3aWxsIGdldCBhbGwgRVRIIGluIHRoZSBlbmQgKi8NCiAgYWRkcmVzcyBwdWJsaWMgdGVhbU11bHRpc2lnOw0KDQogIC8qKiBUb3RhbCBpbmNvbWluZyBtb25leSAqLw0KICB1aW50IHB1YmxpYyB0b3RhbFRyYW5zZmVycmVkOw0KDQogIC8qKiBIb3cgbWFueSBkaXN0aW5jdCBjdXN0b21lcnMgd2UgaGF2ZSB0aGF0IGhhdmUgbWFkZSBhIHBheW1lbnQgKi8NCiAgdWludCBwdWJsaWMgY3VzdG9tZXJDb3VudDsNCg0KICAvKiogVG90YWwgaW5jb21pbmcgbW9uZXkgcGVyIGNlbnRyYWxseSB0cmFja2VkIGN1c3RvbWVyIGlkICovDQogIG1hcHBpbmcodWludDEyOCA9PiB1aW50KSBwdWJsaWMgcGF5bWVudHNCeUN1c3RvbWVyOw0KDQogIC8qKiBUb3RhbCBpbmNvbWluZyBtb25leSBwZXIgYmVuZWZhY3RvciBhZGRyZXNzICovDQogIG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50KSBwdWJsaWMgcGF5bWVudHNCeUJlbmVmYWN0b3I7DQoNCiAgLyoqIEEgY3VzdG9tZXIgaGFzIG1hZGUgYSBwYXltZW50LiBCZW5lZmFjdG9yIGlzIHRoZSBhZGRyZXNzIHdoZXJlIHRoZSB0b2tlbnMgd2lsbCBiZSB1bHRpbWF0ZWx5IGlzc3VlZC4qLw0KICBldmVudCBQYXltZW50Rm9yd2FyZGVkKGFkZHJlc3Mgc291cmNlLCB1aW50IGFtb3VudCwgdWludDEyOCBjdXN0b21lcklkLCBhZGRyZXNzIGJlbmVmYWN0b3IpOw0KDQogIC8qKg0KICAgKiBAcGFyYW0gX3RlYW1NdWx0aXNpZyBUZWFtIG11bHRpc2lnIHJlY2VpdmVzIHRoZSBkZXBvc2l0ZWQgcGF5bWVudHMuDQogICAqDQogICAqIEBwYXJhbSBfb3duZXIgT3duZXIgaXMgYWJsZSB0byBwYXVzZSBhbmQgcmVzdW1lIGNyb3dkc2FsZQ0KICAgKi8NCiAgZnVuY3Rpb24gUGF5bWVudEZvcndhcmRlcihhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfdGVhbU11bHRpc2lnKSB7DQogICAgdGVhbU11bHRpc2lnID0gX3RlYW1NdWx0aXNpZzsNCiAgICBvd25lciA9IF9vd25lcjsNCiAgfQ0KDQogIC8qKg0KICAgKiBQYXkgb24gYSBiZWhhbGYgb2YgYW4gYWRkcmVzcy4NCiAgICoNCiAgICogV2UgbG9nIHRoZSBwYXltZW50IGV2ZW50LCBzbyB0aGF0IHRoZSBzZXJ2ZXIgY2FuIGtlZXAgdGFsbHkgb2YgdGhlIGludmVzdGVkIGFtb3VudHMNCiAgICogYW5kIHRva2VuIHJlY2VpdmVycy4NCiAgICoNCiAgICogVGhlIGFjdHVhbCBwYXltZW50IGlzIGZvcndhcmRlZCB0byB0aGUgdGVhbSBtdWx0aXNpZy4NCiAgICoNCiAgICogQHBhcmFtIGN1c3RvbWVySWQgSWRlbnRpZmllciBpbiB0aGUgY2VudHJhbCBkYXRhYmFzZSwgVVVJRCB2NCAtIHRoaXMgaXMgdXNlZCB0byBub3RlIGN1c3RvbWVyIGJ5IGVtYWlsDQogICAqDQogICAqLw0KICBmdW5jdGlvbiBwYXkodWludDEyOCBjdXN0b21lcklkLCBhZGRyZXNzIGJlbmVmYWN0b3IpIHB1YmxpYyBzdG9wSW5FbWVyZ2VuY3kgcGF5YWJsZSB7DQoNCiAgICB1aW50IHdlaUFtb3VudCA9IG1zZy52YWx1ZTsNCg0KICAgIGlmKHdlaUFtb3VudCA9PSAwKSB7DQogICAgICB0aHJvdzsgLy8gTm8gaW52YWxpZCBwYXltZW50cw0KICAgIH0NCg0KICAgIGlmKGN1c3RvbWVySWQgPT0gMCkgew0KICAgICAgdGhyb3c7IC8vIFdlIHJlcXVpcmUgdG8gcmVjb3JkIGN1c3RvbWVyIGlkIGZvciB0aGUgc2VydmVyIHNpZGUgcHJvY2Vzc2luZw0KICAgIH0NCg0KICAgIGlmKGJlbmVmYWN0b3IgPT0gMCkgew0KICAgICAgdGhyb3c7IC8vIEJhZCBwYXltZW50IGFkZHJlc3MNCiAgICB9DQoNCiAgICBQYXltZW50Rm9yd2FyZGVkKG1zZy5zZW5kZXIsIHdlaUFtb3VudCwgY3VzdG9tZXJJZCwgYmVuZWZhY3Rvcik7DQoNCiAgICB0b3RhbFRyYW5zZmVycmVkID0gc2FmZUFkZCh0b3RhbFRyYW5zZmVycmVkLCB3ZWlBbW91bnQpOw0KDQogICAgaWYocGF5bWVudHNCeUN1c3RvbWVyW2N1c3RvbWVySWRdID09IDApIHsNCiAgICAgIGN1c3RvbWVyQ291bnQrKzsNCiAgICB9DQoNCiAgICBwYXltZW50c0J5Q3VzdG9tZXJbY3VzdG9tZXJJZF0gPSBzYWZlQWRkKHBheW1lbnRzQnlDdXN0b21lcltjdXN0b21lcklkXSwgd2VpQW1vdW50KTsNCg0KICAgIC8vIFdlIHRyYWNrIGJlbmVmYWN0b3IgYWRkcmVzc2VzIGZvciBleHRyYSBzYWZldHk7DQogICAgLy8gSW4gdGhlIGNhc2Ugb2YgY2VudHJhbCBFVEggaXNzdWFuY2UgdHJhY2tpbmcgaGFzIHByb2JsZW1zIHdlIGNhbg0KICAgIC8vIGNvbnN0cnVjdCBFVEggY29udHJpYnV0aW9ucyBzb2xlbHkgYmFzZWQgb24gYmxvY2tjaGFpbiBkYXRhDQogICAgcGF5bWVudHNCeUJlbmVmYWN0b3JbYmVuZWZhY3Rvcl0gPSBzYWZlQWRkKHBheW1lbnRzQnlCZW5lZmFjdG9yW2JlbmVmYWN0b3JdLCB3ZWlBbW91bnQpOw0KDQogICAgLy8gTWF5IHJ1biBvdXQgb2YgZ2FzDQogICAgaWYoIXRlYW1NdWx0aXNpZy5zZW5kKHdlaUFtb3VudCkpIHRocm93Ow0KICB9DQoNCiAgLyoqDQogICAqIFBheSBvbiBhIGJlaGFsZiBvZiB0aGUgc2VuZGVyLg0KICAgKg0KICAgKiBAcGFyYW0gY3VzdG9tZXJJZCBJZGVudGlmaWVyIGluIHRoZSBjZW50cmFsIGRhdGFiYXNlLCBVVUlEIHY0DQogICAqDQogICAqLw0KICBmdW5jdGlvbiBwYXlGb3JNeXNlbGYodWludDEyOCBjdXN0b21lcklkKSBwdWJsaWMgcGF5YWJsZSB7DQogICAgcGF5KGN1c3RvbWVySWQsIG1zZy5zZW5kZXIpOw0KICB9DQoNCn0='