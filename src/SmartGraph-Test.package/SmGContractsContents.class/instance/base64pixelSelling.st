base 64 content
base64pixelSelling
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC40Ow0KDQpjb250cmFjdCBQaXhlbFNlbGxpbmcgew0KDQogICAgc3RydWN0IExvY2F0aW9uew0KICAgICAgICBhZGRyZXNzIG93bmVyOw0KICAgICAgICBzdHJpbmcgaW1hZ2U7DQogICAgICAgIHN0cmluZyBtZXNzYWdlOw0KICAgICAgICBib29sIHNhbGU7DQogICAgICAgIGFkZHJlc3Mgc2FsZVRvOw0KICAgICAgICB1aW50IHByaWNlOw0KICAgIH0NCg0KICAgIHN0cnVjdCBTaGFyZXsNCiAgICAgICAgYWRkcmVzcyBvd25lcjsNCiAgICAgICAgdWludCBsYXN0Q2FzaG91dDsNCiAgICAgICAgYm9vbCBzYWxlOw0KICAgICAgICBhZGRyZXNzIHNhbGVUbzsNCiAgICAgICAgdWludCBwcmljZTsNCiAgICB9DQoNCiAgICB1aW50IHB1YmxpYyBsYXRlc3RwcmljZTsNCiAgICB1aW50IHB1YmxpYyBub1NoYXJlczsNCiAgICB1aW50IHB1YmxpYyBub1NhbGVzOw0KICAgIG1hcHBpbmcgKGFkZHJlc3M9PnVpbnQpIHB1YmxpYyBiYWxhbmNlczsNCg0KICAgIHVpbnQgZW1wdHlMb2NhdGlvblByb3Zpc2lvbjsNCiAgICB1aW50IHByaXZTYWxlUHJvdmlzaW9uOw0KICAgIHVpbnQgcHJpY2VSaXNlOw0KICAgIGFkZHJlc3MgY3JlYXRvcjsNCg0KICAgIG1hcHBpbmcgKHVpbnQ9PkxvY2F0aW9uKSBwdWJsaWMgbG9jYXRpb25zOw0KICAgIG1hcHBpbmcgKHVpbnQ9PlNoYXJlKSBwdWJsaWMgc2hhcmVzOw0KDQogICAgdWludFtdIHByb3Zpc2lvbnM7DQoNCiAgICBldmVudCBDaGFuZ2UodWludCBpZCwgc3RyaW5nIGV2ZW50VHlwZSk7DQoNCiAgICBtb2RpZmllciBpc1ZhbGlkTG9jSWQodWludCBpZCl7DQogICAgICAgIGlmKCEoaWQ+PTAgJiYgaWQ8MTAwMDApKQ0KICAgICAgICAgICAgdGhyb3c7DQogICAgICAgIF87DQogICAgfQ0KDQogICAgZnVuY3Rpb24gUGl4ZWxTZWxsaW5nKCkgew0KICAgICAgICBjcmVhdG9yPW1zZy5zZW5kZXI7DQogICAgICAgIGxhdGVzdHByaWNlPTEwMDAwMDAwMDAwMDAwMDAwOw0KICAgICAgICBwcmljZVJpc2UgID0yMDAwMDAwMDAwMDAwMDAwMDsNCiAgICAgICAgbm9TaGFyZXM9MDsNCiAgICAgICAgbm9TYWxlcz0wOw0KICAgICAgICBlbXB0eUxvY2F0aW9uUHJvdmlzaW9uPTkwOw0KICAgICAgICBwcml2U2FsZVByb3Zpc2lvbj05Ow0KICAgIH0NCg0KICAgIGZ1bmN0aW9uKCl7dGhyb3c7fQ0KDQogICAgZnVuY3Rpb24gYnV5RW1wdHlMb2NhdGlvbih1aW50IGlkKSBpc1ZhbGlkTG9jSWQoaWQpIHBheWFibGV7DQogICAgICAgIExvY2F0aW9uIGw9bG9jYXRpb25zW2lkXTsNCiAgICAgICAgaWYobC5vd25lcj09MHgwICYmIG1zZy52YWx1ZT09bGF0ZXN0cHJpY2Upew0KICAgICAgICAgICAgbC5vd25lcj1tc2cuc2VuZGVyOw0KICAgICAgICAgICAgbC5pbWFnZT0nJzsNCiAgICAgICAgICAgIGwubWVzc2FnZT0nJzsNCg0KICAgICAgICAgICAgbC5zYWxlPWZhbHNlOw0KICAgICAgICAgICAgbC5zYWxlVG89MHgwOw0KICAgICAgICAgICAgbC5wcmljZT1sYXRlc3RwcmljZTsNCg0KICAgICAgICAgICAgc2hhcmVzW2lkXSA9IFNoYXJlKG1zZy5zZW5kZXIsbm9TYWxlcyxmYWxzZSwweDAsbGF0ZXN0cHJpY2UpOw0KDQogICAgICAgICAgICBpZihub1NoYXJlcz4wKXsNCiAgICAgICAgICAgICAgICBiYWxhbmNlc1tjcmVhdG9yXSs9KGxhdGVzdHByaWNlLzEwMCkqKDEwMC1lbXB0eUxvY2F0aW9uUHJvdmlzaW9uKTsNCiAgICAgICAgICAgICAgICBjcmVkaXRTaGFyZVByb3Zpc2lvbihsYXRlc3RwcmljZSwgZW1wdHlMb2NhdGlvblByb3Zpc2lvbik7DQogICAgICAgICAgICB9ZWxzZXsNCiAgICAgICAgICAgICAgICBiYWxhbmNlc1tjcmVhdG9yXSs9bGF0ZXN0cHJpY2U7DQogICAgICAgICAgICAgICAgcHJvdmlzaW9ucy5wdXNoKDApOw0KICAgICAgICAgICAgICAgIG5vU2FsZXMrPTE7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIG5vU2hhcmVzKz0xOw0KDQogICAgICAgICAgICBsYXRlc3RwcmljZSs9cHJpY2VSaXNlOw0KDQogICAgICAgICAgICBDaGFuZ2UoaWQsJ293bmVyJyk7DQogICAgICAgIH1lbHNlew0KICAgICAgICAgICAgdGhyb3c7DQogICAgICAgIH0NCiAgICB9DQoNCiAgICBmdW5jdGlvbiBidXlJbWFnZVByaXYodWludCBpZCkgaXNWYWxpZExvY0lkKGlkKSBwYXlhYmxlew0KICAgICAgICBMb2NhdGlvbiBsPWxvY2F0aW9uc1tpZF07DQogICAgICAgIGlmKA0KICAgICAgICAgICAgbC5vd25lciE9MHgwICYmDQogICAgICAgICAgICBsLnNhbGU9PXRydWUgJiYNCiAgICAgICAgICAgIChsLnNhbGVUbz09bXNnLnNlbmRlcnx8bC5zYWxlVG89PTB4MCkgJiYNCiAgICAgICAgICAgIG1zZy52YWx1ZT09bC5wcmljZQ0KICAgICAgICApew0KICAgICAgICAgICAgbC5pbWFnZT0nJzsNCiAgICAgICAgICAgIGwubWVzc2FnZT0nJzsNCiAgICAgICAgICAgIGwuc2FsZT1mYWxzZTsNCiAgICAgICAgICAgIGwuc2FsZVRvPTB4MDsNCg0KICAgICAgICAgICAgYmFsYW5jZXNbY3JlYXRvcl0rPShtc2cudmFsdWUvMTAwKTsNCiAgICAgICAgICAgIGJhbGFuY2VzW2wub3duZXJdKz0obXNnLnZhbHVlLzEwMCkqKDk5LXByaXZTYWxlUHJvdmlzaW9uKTsNCg0KICAgICAgICAgICAgbC5vd25lcj1tc2cuc2VuZGVyOw0KDQogICAgICAgICAgICBjcmVkaXRTaGFyZVByb3Zpc2lvbihtc2cudmFsdWUsIHByaXZTYWxlUHJvdmlzaW9uKTsNCg0KICAgICAgICAgICAgQ2hhbmdlKGlkLCdpbWcgb3duZXInKTsNCiAgICAgICAgfWVsc2V7DQogICAgICAgICAgICB0aHJvdzsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIGZ1bmN0aW9uIGJ1eVNoYXJlUHJpdih1aW50IGlkKSBpc1ZhbGlkTG9jSWQoaWQpIHBheWFibGV7DQogICAgICAgIFNoYXJlIHM9c2hhcmVzW2lkXTsNCgkJaWYoDQoJCQlzLm93bmVyIT0weDAgJiYNCgkJCXMuc2FsZT09dHJ1ZSAmJg0KCQkJKHMuc2FsZVRvPT1tc2cuc2VuZGVyfHxzLnNhbGVUbz09MHgwKSAmJg0KCQkJbXNnLnZhbHVlPT1zLnByaWNlDQoJCSl7DQogICAgICAgICAgICBzLnNhbGU9ZmFsc2U7DQogICAgICAgICAgICBzLnNhbGVUbz0weDA7DQoNCiAgICAgICAgICAgIGJhbGFuY2VzW2NyZWF0b3JdKz0obXNnLnZhbHVlLzEwMCk7DQogICAgICAgICAgICBiYWxhbmNlc1tzaGFyZXNbaWRdLm93bmVyXSs9KG1zZy52YWx1ZS8xMDApKig5OS1wcml2U2FsZVByb3Zpc2lvbik7DQoNCiAgICAgICAgICAgIHNoYXJlc1tpZF0ub3duZXI9bXNnLnNlbmRlcjsNCg0KICAgICAgICAgICAgY3JlZGl0U2hhcmVQcm92aXNpb24obXNnLnZhbHVlLCBwcml2U2FsZVByb3Zpc2lvbik7DQoNCiAgICAgICAgICAgIENoYW5nZShpZCwnc2hhcmUgb3duZXInKTsNCiAgICAgICAgfWVsc2V7DQogICAgICAgICAgICB0aHJvdzsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIGZ1bmN0aW9uIHNldEltYWdlKHVpbnQgaWQsIHN0cmluZyBpbWcpIGlzVmFsaWRMb2NJZChpZCkgew0KCQlMb2NhdGlvbiBsPWxvY2F0aW9uc1tpZF07DQogICAgICAgIGlmKGwub3duZXI9PW1zZy5zZW5kZXIgJiYgYnl0ZXMoaW1nKS5sZW5ndGg8NTAwMSl7DQogICAgICAgICAgICBsLmltYWdlPWltZzsNCiAgICAgICAgICAgIENoYW5nZShpZCwnaW1hZ2UnKTsNCiAgICAgICAgfWVsc2V7DQogICAgICAgICAgICB0aHJvdzsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIGZ1bmN0aW9uIHNldE1lc3NhZ2UodWludCBpZCwgc3RyaW5nIG1zc2cpIGlzVmFsaWRMb2NJZChpZCkgew0KCQlMb2NhdGlvbiBsPWxvY2F0aW9uc1tpZF07DQogICAgICAgIGlmKGwub3duZXI9PW1zZy5zZW5kZXIgJiYgYnl0ZXMobXNzZykubGVuZ3RoPDUwMSl7DQogICAgICAgICAgICBsLm1lc3NhZ2U9bXNzZzsNCiAgICAgICAgICAgIENoYW5nZShpZCwnbWVzc2FnZScpOw0KICAgICAgICB9ZWxzZXsNCgkJCXRocm93Ow0KCQl9DQogICAgfQ0KDQogICAgZnVuY3Rpb24gc2V0U2FsZUltZyh1aW50IGlkLCBib29sIHNldFNhbGUsIGFkZHJlc3MgdG8sIHVpbnQgcCkgaXNWYWxpZExvY0lkKGlkKSB7DQogICAgICAgIExvY2F0aW9uIGw9bG9jYXRpb25zW2lkXTsNCgkJaWYobC5vd25lcj09bXNnLnNlbmRlcil7DQogICAgICAgICAgICBsLnNhbGU9c2V0U2FsZTsNCiAgICAgICAgICAgIGwucHJpY2U9cDsNCiAgICAgICAgICAgIGwuc2FsZVRvPXRvOw0KICAgICAgICAgICAgQ2hhbmdlKGlkLCdpbWcgc2FsZScpOw0KICAgICAgICB9ZWxzZXsNCgkJCXRocm93Ow0KCQl9DQogICAgfQ0KDQogICAgZnVuY3Rpb24gc2V0U2FsZVNoYXJlKHVpbnQgaWQsIGJvb2wgc2V0U2FsZSwgYWRkcmVzcyB0bywgdWludCBwKSBpc1ZhbGlkTG9jSWQoaWQpIHsNCiAgICAgICAgU2hhcmUgcz1zaGFyZXNbaWRdOw0KCQlpZihzLm93bmVyPT1tc2cuc2VuZGVyKXsNCiAgICAgICAgICAgIHMuc2FsZT1zZXRTYWxlOw0KICAgICAgICAgICAgcy5wcmljZT1wOw0KICAgICAgICAgICAgcy5zYWxlVG89dG87DQogICAgICAgICAgICBDaGFuZ2UoaWQsJ3NoYXJlIHNhbGUnKTsNCiAgICAgICAgfWVsc2V7DQoJCQl0aHJvdzsNCgkJfQ0KICAgIH0NCg0KICAgIGZ1bmN0aW9uIGNyZWRpdFNoYXJlUHJvdmlzaW9uKHVpbnQgcHJpY2UsIHVpbnQgcHJvdmlzaW9uKSBwcml2YXRlIHsNCiAgICAgICAgcHJvdmlzaW9ucy5wdXNoKHByb3Zpc2lvbnNbbm9TYWxlcy0xXSsoKChwcmljZS8xMDApKnByb3Zpc2lvbikvbm9TaGFyZXMpKTsNCiAgICAgICAgbm9TYWxlcys9MTsNCiAgICB9DQoNCiAgICBmdW5jdGlvbiBnZXRQcm92aXNpb25CYWxhbmNlKHVpbnQgaWQpIGlzVmFsaWRMb2NJZChpZCkgY29uc3RhbnQgcmV0dXJucyAodWludCBiYWxhbmNlKSB7DQogICAgICAgIFNoYXJlIHM9c2hhcmVzW2lkXTsNCiAgICAgICAgaWYocy5vd25lciE9MHgwKXsNCiAgICAgICAgICAgIHJldHVybiBwcm92aXNpb25zW25vU2FsZXMtMV0tcHJvdmlzaW9uc1tzLmxhc3RDYXNob3V0XTsNCiAgICAgICAgfWVsc2V7DQogICAgICAgICAgICByZXR1cm4gMDsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIGZ1bmN0aW9uIGNvbGxlY3RQcm92aXNpb25zKHVpbnQgaWQpIGlzVmFsaWRMb2NJZChpZCkgew0KICAgICAgICBTaGFyZSBzPXNoYXJlc1tpZF07DQogICAgICAgIGlmKHMub3duZXI9PW1zZy5zZW5kZXIpew0KICAgICAgICAgICAgYmFsYW5jZXNbcy5vd25lcl0rPXByb3Zpc2lvbnNbbm9TYWxlcy0xXS1wcm92aXNpb25zW3MubGFzdENhc2hvdXRdOw0KICAgICAgICAgICAgcy5sYXN0Q2FzaG91dD1ub1NhbGVzLTE7DQogICAgICAgIH1lbHNlew0KICAgICAgICAgICAgdGhyb3c7DQogICAgICAgIH0NCiAgICB9DQoNCiAgICBmdW5jdGlvbiB3aXRoZHJhd0JhbGFuY2UoKSB7DQogICAgICAgIGlmKGJhbGFuY2VzW21zZy5zZW5kZXJdPjApew0KICAgICAgICAgICAgdWludCBhbXRUb1dpdGhkcmF3PWJhbGFuY2VzW21zZy5zZW5kZXJdOw0KICAgICAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl09MDsNCiAgICAgICAgICAgIGlmKCFtc2cuc2VuZGVyLnNlbmQoYW10VG9XaXRoZHJhdykpIHRocm93Ow0KICAgICAgICB9ZWxzZXsNCiAgICAgICAgICAgIHRocm93Ow0KICAgICAgICB9DQogICAgfQ0KfQ=='