base 64 content
base64prayersTokenICO
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC4xMzsNCg0KY29udHJhY3QgUHJheWVyc1Rva2VuIHsNCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpOw0KICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCk7DQp9DQoNCmNvbnRyYWN0IFByYXllcnNUb2tlbklDTyB7DQogICAgYWRkcmVzcyBvd25lciA9IG1zZy5zZW5kZXI7DQoNCiAgICBib29sIHB1YmxpYyBwdXJjaGFzaW5nQWxsb3dlZCA9IHRydWU7DQoNCiAgICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIGJhbGFuY2VzOw0KICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgYWxsb3dlZDsNCg0KICAgIHVpbnQyNTYgcHVibGljIHRvdGFsQ29udHJpYnV0aW9uID0gMDsNCg0KICAgIHVpbnQyNTYgcHVibGljIHRvdGFsU3VwcGx5ID0gMDsNCg0KICAgIGZ1bmN0aW9uIG5hbWUoKSBjb25zdGFudCByZXR1cm5zIChzdHJpbmcpIHsgcmV0dXJuICJQcmF5ZXJzIFRva2VuIjsgfQ0KICAgIGZ1bmN0aW9uIHN5bWJvbCgpIGNvbnN0YW50IHJldHVybnMgKHN0cmluZykgeyByZXR1cm4gIlBSU1QiOyB9DQogICAgZnVuY3Rpb24gZGVjaW1hbHMoKSBjb25zdGFudCByZXR1cm5zICh1aW50OCkgeyByZXR1cm4gMTg7IH0NCiAgICANCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsgcmV0dXJuIGJhbGFuY2VzW19vd25lcl07IH0NCiAgICANCiAgICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcykgew0KICAgICAgICAvLyBtaXRpZ2F0ZXMgdGhlIEVSQzIwIHNob3J0IGFkZHJlc3MgYXR0YWNrDQogICAgICAgIGlmKG1zZy5kYXRhLmxlbmd0aCA8ICgyICogMzIpICsgNCkgeyByZXZlcnQoKTsgfQ0KICAgICAgICBpZiAobXNnLnNlbmRlciAhPSBvd25lcikgeyByZXZlcnQoKTsgfQ0KDQogICAgICAgIGlmIChfdmFsdWUgPT0gMCkgeyByZXR1cm4gZmFsc2U7IH0NCg0KICAgICAgICB1aW50MjU2IGZyb21CYWxhbmNlID0gYmFsYW5jZXNbbXNnLnNlbmRlcl07DQoNCiAgICAgICAgYm9vbCBzdWZmaWNpZW50RnVuZHMgPSBmcm9tQmFsYW5jZSA+PSBfdmFsdWU7DQogICAgICAgIGJvb2wgb3ZlcmZsb3dlZCA9IGJhbGFuY2VzW190b10gKyBfdmFsdWUgPCBiYWxhbmNlc1tfdG9dOw0KICAgICAgICANCiAgICAgICAgaWYgKHN1ZmZpY2llbnRGdW5kcyAmJiAhb3ZlcmZsb3dlZCkgew0KICAgICAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gLT0gX3ZhbHVlOw0KICAgICAgICAgICAgYmFsYW5jZXNbX3RvXSArPSBfdmFsdWU7DQogICAgICAgICAgICANCiAgICAgICAgICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsNCiAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICB9IGVsc2UgeyByZXR1cm4gZmFsc2U7IH0NCiAgICB9DQogICAgDQogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7DQogICAgICAgIC8vIG1pdGlnYXRlcyB0aGUgRVJDMjAgc2hvcnQgYWRkcmVzcyBhdHRhY2sNCiAgICAgICAgaWYobXNnLmRhdGEubGVuZ3RoIDwgKDMgKiAzMikgKyA0KSB7IHJldmVydCgpOyB9DQogICAgICAgIGlmIChtc2cuc2VuZGVyICE9IG93bmVyKSB7IHJldmVydCgpOyB9DQoNCiAgICAgICAgaWYgKF92YWx1ZSA9PSAwKSB7IHJldHVybiBmYWxzZTsgfQ0KICAgICAgICANCiAgICAgICAgdWludDI1NiBmcm9tQmFsYW5jZSA9IGJhbGFuY2VzW19mcm9tXTsNCiAgICAgICAgdWludDI1NiBhbGxvd2FuY2UgPSBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXTsNCg0KICAgICAgICBib29sIHN1ZmZpY2llbnRGdW5kcyA9IGZyb21CYWxhbmNlIDw9IF92YWx1ZTsNCiAgICAgICAgYm9vbCBzdWZmaWNpZW50QWxsb3dhbmNlID0gYWxsb3dhbmNlIDw9IF92YWx1ZTsNCiAgICAgICAgYm9vbCBvdmVyZmxvd2VkID0gYmFsYW5jZXNbX3RvXSArIF92YWx1ZSA+IGJhbGFuY2VzW190b107DQoNCiAgICAgICAgaWYgKHN1ZmZpY2llbnRGdW5kcyAmJiBzdWZmaWNpZW50QWxsb3dhbmNlICYmICFvdmVyZmxvd2VkKSB7DQogICAgICAgICAgICBiYWxhbmNlc1tfdG9dICs9IF92YWx1ZTsNCiAgICAgICAgICAgIGJhbGFuY2VzW19mcm9tXSAtPSBfdmFsdWU7DQogICAgICAgICAgICANCiAgICAgICAgICAgIGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdIC09IF92YWx1ZTsNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsNCiAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICB9IGVsc2UgeyByZXR1cm4gZmFsc2U7IH0NCiAgICB9DQogICAgDQogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7DQogICAgICAgIC8vIG1pdGlnYXRlcyB0aGUgRVJDMjAgc3BlbmQvYXBwcm92YWwgcmFjZSBjb25kaXRpb24NCiAgICAgICAgaWYgKF92YWx1ZSAhPSAwICYmIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdICE9IDApIHsgcmV0dXJuIGZhbHNlOyB9DQogICAgICAgIGlmIChtc2cuc2VuZGVyICE9IG93bmVyKSB7IHJldmVydCgpOyB9DQogICAgICAgIA0KICAgICAgICBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IF92YWx1ZTsNCiAgICAgICAgDQogICAgICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfdmFsdWUpOw0KICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICB9DQogICAgDQogICAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7DQogICAgICAgIHJldHVybiBhbGxvd2VkW19vd25lcl1bX3NwZW5kZXJdOw0KICAgIH0NCg0KICAgIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgYWRkcmVzcyBpbmRleGVkIF90bywgdWludDI1NiBfdmFsdWUpOw0KICAgIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBfb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpOw0KDQogICAgZnVuY3Rpb24gZW5hYmxlUHVyY2hhc2luZygpIHsNCiAgICAgICAgaWYgKG1zZy5zZW5kZXIgIT0gb3duZXIpIHsgcmV2ZXJ0KCk7IH0NCiAgICAgICAgcHVyY2hhc2luZ0FsbG93ZWQgPSB0cnVlOw0KICAgIH0NCg0KICAgIGZ1bmN0aW9uIGRpc2FibGVQdXJjaGFzaW5nKCkgew0KICAgICAgICBpZiAobXNnLnNlbmRlciAhPSBvd25lcikgeyByZXZlcnQoKTsgfQ0KICAgICAgICBwdXJjaGFzaW5nQWxsb3dlZCA9IGZhbHNlOw0KICAgIH0NCg0KICAgIGZ1bmN0aW9uIHdpdGhkcmF3Rm9yZWlnblRva2VucyhhZGRyZXNzIF90b2tlbkNvbnRyYWN0KSByZXR1cm5zIChib29sKSB7DQogICAgICAgIGlmIChtc2cuc2VuZGVyICE9IG93bmVyKSB7IHJldmVydCgpOyB9DQoNCiAgICAgICAgUHJheWVyc1Rva2VuIHRva2VuID0gUHJheWVyc1Rva2VuKF90b2tlbkNvbnRyYWN0KTsNCg0KICAgICAgICB1aW50MjU2IGFtb3VudCA9IHRva2VuLmJhbGFuY2VPZihhZGRyZXNzKHRoaXMpKTsNCiAgICAgICAgcmV0dXJuIHRva2VuLnRyYW5zZmVyKG93bmVyLCBhbW91bnQpOw0KICAgIH0NCg0KICAgIGZ1bmN0aW9uIGdldFN0YXRzKCkgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiwgdWludDI1NiwgYm9vbCkgew0KICAgICAgICByZXR1cm4gKHRvdGFsQ29udHJpYnV0aW9uLCB0b3RhbFN1cHBseSwgcHVyY2hhc2luZ0FsbG93ZWQpOw0KICAgIH0NCg0KICAgIGZ1bmN0aW9uKCkgcGF5YWJsZSB7DQogICAgICAgIGlmICghcHVyY2hhc2luZ0FsbG93ZWQpIHsgcmV2ZXJ0KCk7IH0NCiAgICAgICAgDQogICAgICAgIGlmIChtc2cudmFsdWUgPT0gMCkgeyByZXR1cm47IH0NCg0KICAgICAgICBvd25lci50cmFuc2Zlcihtc2cudmFsdWUpOw0KICAgICAgICB0b3RhbENvbnRyaWJ1dGlvbiArPSBtc2cudmFsdWU7DQoNCiAgICAgICAgdWludDI1NiB0b2tlbnNJc3N1ZWQgPSAobXNnLnZhbHVlICogMTAwKTsNCg0KICAgICAgICBpZiAobXNnLnZhbHVlID49IDEwIGZpbm5leSkgew0KICAgICAgICAgICAgdG9rZW5zSXNzdWVkICs9IHRvdGFsQ29udHJpYnV0aW9uOw0KICAgICAgICB9DQoNCiAgICAgICAgdG90YWxTdXBwbHkgKz0gdG9rZW5zSXNzdWVkOw0KICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSArPSB0b2tlbnNJc3N1ZWQ7DQogICAgICAgIA0KICAgICAgICBUcmFuc2ZlcihhZGRyZXNzKHRoaXMpLCBtc2cuc2VuZGVyLCB0b2tlbnNJc3N1ZWQpOw0KICAgIH0NCn0='