base 64 content
base64presale7
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC42Ow0KDQovLw0KLy8gPT09PSBESVNDTEFJTUVSID09PT0NCi8vDQovLyBFVEhFUkVVTSBJUyBTVElMTCBBTiBFWFBFUkVNRU5UQUwgVEVDSE5PTE9HWS4NCi8vIEFMVEhPVUdIIFRISVMgU01BUlQgQ09OVFJBQ1QgV0FTIENSRUFURUQgV0lUSCBHUkVBVCBDQVJFIEFORCBJTiBUSEUgSE9QRSBPRiBCRUlORyBVU0VGVUwsIE5PIEdVQVJBTlRFRVMgT0YgRkxBV0xFU1MgT1BFUkFUSU9OIENBTiBCRSBHSVZFTi4gDQovLyBJTiBQQVJUSUNVTEFSIC0gU1VCVElMRSBCVUdTLCBIQUNLRVIgQVRUQUNLUyBPUiBNQUxGVU5DVElPTiBPRiBVTkRFUkxZSU5HIFRFQ0hOT0xPR1kgQ0FOIENBVVNFIFVOSU5URU5USU9OQUwgQkVIQVZJT1VSLiANCi8vIFlPVSBBUkUgU1RST05HTFkgRU5DT1VSQUdFRCBUTyBTVFVEWSBUSElTIFNNQVJUIENPTlRSQUNUIENBUkVGVUxMWSBJTiBPUkRFUiBUTyBVTkRFUlNUQU5EIFBPU1NJQkxFIEVER0UgQ0FTRVMgQU5EIFJJU0tTLiANCi8vIERPTidUIFVTRSBUSElTIFNNQVJUIENPTlRSQUNUIElGIFlPVSBIQVZFIFNVQlNUQU5USUFMIERPVUJUUyBPUiBJRiBZT1UgRE9OJ1QgS05PVyBXSEFUIFlPVSBBUkUgRE9JTkcuDQovLw0KLy8gVEhJUyBTT0ZUV0FSRSBJUyBQUk9WSURFRCAiQVMgSVMiIEFORCBBTlkgRVhQUkVTUyBPUiBJTVBMSUVEIFdBUlJBTlRJRVMsIElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBUSEUgSU1QTElFRCBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSANCi8vIEFORCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBUkUgRElTQ0xBSU1FRC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFIENPUFlSSUdIVCBPV05FUiBPUiBDT05UUklCVVRPUlMgQkUgTElBQkxFIEZPUiBBTlkgRElSRUNULCBJTkRJUkVDVCwgDQovLyBJTkNJREVOVEFMLCBTUEVDSUFMLCBFWEVNUExBUlksIE9SIENPTlNFUVVFTlRJQUwgREFNQUdFUyAoSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURUQgVE8sIFBST0NVUkVNRU5UIE9GIFNVQlNUSVRVVEUgR09PRFMgT1IgU0VSVklDRVM7IExPU1MgT0YgVVNFLCBEQVRBLCANCi8vIE9SIFBST0ZJVFM7IE9SIEJVU0lORVNTIElOVEVSUlVQVElPTikgSE9XRVZFUiBDQVVTRUQgQU5EIE9OIEFOWSBUSEVPUlkgT0YgTElBQklMSVRZLCBXSEVUSEVSIElOIENPTlRSQUNULCBTVFJJQ1QgTElBQklMSVRZLCANCi8vIE9SIFRPUlQgKElOQ0xVRElORyBORUdMSUdFTkNFIE9SIE9USEVSV0lTRSkgQVJJU0lORyBJTiBBTlkgV0FZIE9VVCBPRiBUSEUgVVNFIE9GIFRISVMgU09GVFdBUkUsIEVWRU4gSUYgQURWSVNFRCBPRiBUSEUgUE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0UuDQovLyA9PT09DQovLw0KLy8NCi8vID09PT0gUEFSQU5PSUEgTk9USUNFID09PT0gDQovLyBBIGNhcmVmdWwgcmVhZGVyIHdpbGwgZmluZCBzb21lIGFkZGl0aW9uYWwgY2hlY2tzIGFuZCBleGNlc3NpdmUgY29kZSwgY29uc3VtaW5nIHNvbWUgZXh0cmEgZ2FzLiBUaGlzIGlzIGludGVudGlvbmFsLiANCi8vIEV2ZW4gdGhvdWdoIHRoZSBjb250cmFjdCBzaG91bGQgd29yayB3aXRob3V0IHRoZXNlIHBhcnRzLCB0aGV5IG1ha2UgdGhlIGNvZGUgbW9yZSBzZWN1cmUgaW4gcHJvZHVjdGlvbiBhbmQgZm9yIGZ1dHVyZSByZWZhY3RvcmluZy4NCi8vIEFsc28sIHRoZXkgc2hvdyBtb3JlIGNsZWFybHkgd2hhdCB3ZSBoYXZlIGNvbnNpZGVyZWQgYW5kIGFkZHJlc3NlZCBkdXJpbmcgZGV2ZWxvcG1lbnQuDQovLyBEaXNjdXNzaW9uIGlzIHdlbGNvbWUhDQovLyA9PT09DQovLw0KDQovLy8gQGF1dGhvciBldGhlcm5pYW4NCi8vLyBAbm90aWNlIHJlcG9ydCBidWdzIHRvOiBidWdzQGV0aGVybmlhbi5jb20NCi8vLyBAdGl0bGUgUHJlc2FsZSBDb250cmFjdA0KDQpjb250cmFjdCBQcmVzYWxlIHsNCg0KICAgIHN0cmluZyBwdWJsaWMgY29uc3RhbnQgVkVSU0lPTiA9ICIwLjEuNC1iZXRhIjsNCg0KICAgIC8qID09PT09PSBjb25maWd1cmF0aW9uIFNUQVJUID09PT09PSAqLw0KICAgIHVpbnQgcHVibGljIGNvbnN0YW50IFBSRVNBTEVfU1RBUlQgID0gMzE0NzM3MDsgLyogYXBwcm94LiAwOC4wMi4yMDE3IDIwOjE1ICovDQogICAgdWludCBwdWJsaWMgY29uc3RhbnQgUFJFU0FMRV9FTkQgICAgPSAzMTU1NTk0OyAvKiBhcHByb3guIDEwLjAyLjIwMTcgMjA6MDAgKi8NCiAgICB1aW50IHB1YmxpYyBjb25zdGFudCBXSVRIRFJBV0FMX0VORCA9IDMxNjEzNTM7IC8qIGFwcHJveC4gMTEuMDIuMjAxNyAyMDowMCAqLw0KDQoNCiAgICBhZGRyZXNzIHB1YmxpYyBjb25zdGFudCBPV05FUiA9IDB4RTc2ZkU1MmEyNTFDOEYzYTVkY0Q2NTdFNDdBNkM4RDE2RmRmNGJGQTsNCg0KICAgIHVpbnQgcHVibGljIGNvbnN0YW50IE1JTl9UT1RBTF9BTU9VTlRfVE9fUkVDRUlWRV9FVEggPSAxOw0KICAgIHVpbnQgcHVibGljIGNvbnN0YW50IE1BWF9UT1RBTF9BTU9VTlRfVE9fUkVDRUlWRV9FVEggPSA1Ow0KICAgIHVpbnQgcHVibGljIGNvbnN0YW50IE1JTl9BQ0NFUFRFRF9BTU9VTlRfRklOTkVZID0gMTsNCg0KICAgIC8qID09PT09PSBjb25maWd1cmF0aW9uIEVORCA9PT09PT0gKi8NCg0KICAgIHN0cmluZ1s1XSBwcml2YXRlIHN0YXRlTmFtZXMgPSBbIkJFRk9SRV9TVEFSVCIsICAiUFJFU0FMRV9SVU5OSU5HIiwgIldJVEhEUkFXQUxfUlVOTklORyIsICJSRUZVTkRfUlVOTklORyIsICJDTE9TRUQiIF07DQogICAgZW51bSBTdGF0ZSB7IEJFRk9SRV9TVEFSVCwgIFBSRVNBTEVfUlVOTklORywgV0lUSERSQVdBTF9SVU5OSU5HLCBSRUZVTkRfUlVOTklORywgQ0xPU0VEIH0NCg0KICAgIHVpbnQgcHVibGljIHRvdGFsX3JlY2VpdmVkX2Ftb3VudDsNCiAgICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQpIHB1YmxpYyBiYWxhbmNlczsNCg0KICAgIHVpbnQgcHJpdmF0ZSBjb25zdGFudCBNSU5fVE9UQUxfQU1PVU5UX1RPX1JFQ0VJVkUgPSBNSU5fVE9UQUxfQU1PVU5UX1RPX1JFQ0VJVkVfRVRIICogMSBldGhlcjsNCiAgICB1aW50IHByaXZhdGUgY29uc3RhbnQgTUFYX1RPVEFMX0FNT1VOVF9UT19SRUNFSVZFID0gTUFYX1RPVEFMX0FNT1VOVF9UT19SRUNFSVZFX0VUSCAqIDEgZXRoZXI7DQogICAgdWludCBwcml2YXRlIGNvbnN0YW50IE1JTl9BQ0NFUFRFRF9BTU9VTlQgPSBNSU5fQUNDRVBURURfQU1PVU5UX0ZJTk5FWSAqIDEgZmlubmV5Ow0KICAgIGJvb2wgcHVibGljIGlzQWJvcnRlZCA9IGZhbHNlOw0KDQoNCiAgICAvL2NvbnN0cnVjdG9yDQogICAgZnVuY3Rpb24gUHJlc2FsZSAoKSB2YWxpZFNldHVwT25seSgpIHsgfQ0KDQogICAgLy8NCiAgICAvLyA9PT09PT09IGludGVyZmFjZSBtZXRob2RzID09PT09PT0NCiAgICAvLw0KDQogICAgLy9hY2NlcHQgcGF5bWVudHMgaGVyZQ0KICAgIGZ1bmN0aW9uICgpDQogICAgcGF5YWJsZQ0KICAgIG5vUmVlbnRyYW5jeQ0KICAgIHsNCiAgICAgICAgU3RhdGUgc3RhdGUgPSBjdXJyZW50U3RhdGUoKTsNCiAgICAgICAgaWYgKHN0YXRlID09IFN0YXRlLlBSRVNBTEVfUlVOTklORykgew0KICAgICAgICAgICAgcmVjZWl2ZUZ1bmRzKCk7DQogICAgICAgIH0gZWxzZSBpZiAoc3RhdGUgPT0gU3RhdGUuUkVGVU5EX1JVTk5JTkcpIHsNCiAgICAgICAgICAgIC8vIGFueSBlbnRyaW5nIGNhbGwgaW4gUmVmdW5kIFBoYXNlIHdpbGwgY2F1c2UgZnVsbCByZWZ1bmQNCiAgICAgICAgICAgIHNlbmRSZWZ1bmQoKTsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIHRocm93Ow0KICAgICAgICB9DQogICAgfQ0KDQogICAgZnVuY3Rpb24gcmVmdW5kKCkgZXh0ZXJuYWwNCiAgICBpblN0YXRlKFN0YXRlLlJFRlVORF9SVU5OSU5HKQ0KICAgIG5vUmVlbnRyYW5jeQ0KICAgIHsNCiAgICAgICAgc2VuZFJlZnVuZCgpOw0KICAgIH0NCg0KDQogICAgZnVuY3Rpb24gd2l0aGRyYXdGdW5kcygpIGV4dGVybmFsDQogICAgaW5TdGF0ZShTdGF0ZS5XSVRIRFJBV0FMX1JVTk5JTkcpDQogICAgb25seU93bmVyDQogICAgbm9SZWVudHJhbmN5DQogICAgew0KICAgICAgICAvLyB0cmFuc2ZlciBmdW5kcyB0byBvd25lciBpZiBhbnkNCiAgICAgICAgaWYgKCFPV05FUi5zZW5kKHRoaXMuYmFsYW5jZSkpIHRocm93Ow0KICAgIH0NCg0KICAgIGZ1bmN0aW9uIGFib3J0KCkgZXh0ZXJuYWwNCiAgICBpblN0YXRlQmVmb3JlKFN0YXRlLlJFRlVORF9SVU5OSU5HKQ0KICAgIG9ubHlPd25lcg0KICAgIHsNCiAgICAgICAgaXNBYm9ydGVkID0gdHJ1ZTsNCiAgICB9DQoNCiAgICAvL2Rpc3BsYXlzIGN1cnJlbnQgY29udHJhY3Qgc3RhdGUgaW4gaHVtYW4gcmVhZGFibGUgZm9ybQ0KICAgIGZ1bmN0aW9uIHN0YXRlKCkgIGV4dGVybmFsIGNvbnN0YW50DQogICAgcmV0dXJucyAoc3RyaW5nKQ0KICAgIHsNCiAgICAgICAgcmV0dXJuIHN0YXRlTmFtZXNbIHVpbnQoY3VycmVudFN0YXRlKCkpIF07DQogICAgfQ0KDQoNCiAgICAvLw0KICAgIC8vID09PT09PT0gaW1wbGVtZW50YXRpb24gbWV0aG9kcyA9PT09PT09DQogICAgLy8NCg0KICAgIGZ1bmN0aW9uIHNlbmRSZWZ1bmQoKSBwcml2YXRlIHRva2VuSG9sZGVyc09ubHkgew0KICAgICAgICAvLyBsb2FkIGJhbGFuY2UgdG8gcmVmdW5kIHBsdXMgYW1vdW50IGN1cnJlbnRseSBzZW50DQogICAgICAgIHZhciBhbW91bnRfdG9fcmVmdW5kID0gYmFsYW5jZXNbbXNnLnNlbmRlcl0gKyBtc2cudmFsdWU7DQogICAgICAgIC8vIHJlc2V0IGJhbGFuY2UNCiAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSAwOw0KICAgICAgICAvLyBzZW5kIHJlZnVuZCBiYWNrIHRvIHNlbmRlcg0KICAgICAgICBpZiAoIW1zZy5zZW5kZXIuc2VuZChhbW91bnRfdG9fcmVmdW5kKSkgdGhyb3c7DQogICAgfQ0KDQoNCiAgICBmdW5jdGlvbiByZWNlaXZlRnVuZHMoKSBwcml2YXRlIG5vdFRvb1NtYWxsQW1vdW50T25seSB7DQogICAgICAvLyBubyBvdmVyZmxvdyBpcyBwb3NzaWJsZSBoZXJlOiBub2JvZHkgaGF2ZSBzb28gbXVjaCBtb25leSB0byBzcGVuZC4NCiAgICAgIGlmICh0b3RhbF9yZWNlaXZlZF9hbW91bnQgKyBtc2cudmFsdWUgPiBNQVhfVE9UQUxfQU1PVU5UX1RPX1JFQ0VJVkUpIHsNCiAgICAgICAgICAvLyBhY2NlcHQgYW1vdW50IG9ubHkgYW5kIHJldHVybiBjaGFuZ2UNCiAgICAgICAgICB2YXIgY2hhbmdlX3RvX3JldHVybiA9IHRvdGFsX3JlY2VpdmVkX2Ftb3VudCArIG1zZy52YWx1ZSAtIE1BWF9UT1RBTF9BTU9VTlRfVE9fUkVDRUlWRTsNCiAgICAgICAgICBpZiAoIW1zZy5zZW5kZXIuc2VuZChjaGFuZ2VfdG9fcmV0dXJuKSkgdGhyb3c7DQoNCiAgICAgICAgICB2YXIgYWNjZXB0YWJsZV9yZW1haW5kZXIgPSBNQVhfVE9UQUxfQU1PVU5UX1RPX1JFQ0VJVkUgLSB0b3RhbF9yZWNlaXZlZF9hbW91bnQ7DQogICAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gKz0gYWNjZXB0YWJsZV9yZW1haW5kZXI7DQogICAgICAgICAgdG90YWxfcmVjZWl2ZWRfYW1vdW50ICs9IGFjY2VwdGFibGVfcmVtYWluZGVyOw0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAvLyBhY2NlcHQgZnVsbCBhbW91bnQNCiAgICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSArPSBtc2cudmFsdWU7DQogICAgICAgICAgdG90YWxfcmVjZWl2ZWRfYW1vdW50ICs9IG1zZy52YWx1ZTsNCiAgICAgIH0NCiAgICB9DQoNCg0KICAgIGZ1bmN0aW9uIGN1cnJlbnRTdGF0ZSgpIHByaXZhdGUgY29uc3RhbnQgcmV0dXJucyAoU3RhdGUpIHsNCiAgICAgICAgaWYgKGlzQWJvcnRlZCkgew0KICAgICAgICAgICAgcmV0dXJuIHRoaXMuYmFsYW5jZSA+IDAgDQogICAgICAgICAgICAgICAgICAgPyBTdGF0ZS5SRUZVTkRfUlVOTklORyANCiAgICAgICAgICAgICAgICAgICA6IFN0YXRlLkNMT1NFRDsNCiAgICAgICAgfSBlbHNlIGlmIChibG9jay5udW1iZXIgPCBQUkVTQUxFX1NUQVJUKSB7DQogICAgICAgICAgICByZXR1cm4gU3RhdGUuQkVGT1JFX1NUQVJUOw0KICAgICAgICB9IGVsc2UgaWYgKGJsb2NrLm51bWJlciA8PSBQUkVTQUxFX0VORCAmJiB0b3RhbF9yZWNlaXZlZF9hbW91bnQgPCBNQVhfVE9UQUxfQU1PVU5UX1RPX1JFQ0VJVkUpIHsNCiAgICAgICAgICAgIHJldHVybiBTdGF0ZS5QUkVTQUxFX1JVTk5JTkc7DQogICAgICAgIH0gZWxzZSBpZiAodGhpcy5iYWxhbmNlID09IDApIHsNCiAgICAgICAgICAgIHJldHVybiBTdGF0ZS5DTE9TRUQ7DQogICAgICAgIH0gZWxzZSBpZiAoYmxvY2subnVtYmVyIDw9IFdJVEhEUkFXQUxfRU5EICYmIHRvdGFsX3JlY2VpdmVkX2Ftb3VudCA+PSBNSU5fVE9UQUxfQU1PVU5UX1RPX1JFQ0VJVkUpIHsNCiAgICAgICAgICAgIHJldHVybiBTdGF0ZS5XSVRIRFJBV0FMX1JVTk5JTkc7DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICByZXR1cm4gU3RhdGUuUkVGVU5EX1JVTk5JTkc7DQogICAgICAgIH0gDQogICAgfQ0KDQogICAgLy8NCiAgICAvLyA9PT09PT09PT09PT0gbW9kaWZpZXJzID09PT09PT09PT09PQ0KICAgIC8vDQoNCiAgICAvL2ZhaWxzIGlmIHN0YXRlIGRvc24ndCBtYXRjaA0KICAgIG1vZGlmaWVyIGluU3RhdGUoU3RhdGUgc3RhdGUpIHsNCiAgICAgICAgaWYgKHN0YXRlICE9IGN1cnJlbnRTdGF0ZSgpKSB0aHJvdzsNCiAgICAgICAgXzsNCiAgICB9DQoNCiAgICAvL2ZhaWxzIGlmIHRoZSBjdXJyZW50IHN0YXRlIGlzIG5vdCBiZWZvcmUgdGhhbiB0aGUgZ2l2ZW4gb25lLg0KICAgIG1vZGlmaWVyIGluU3RhdGVCZWZvcmUoU3RhdGUgc3RhdGUpIHsNCiAgICAgICAgaWYgKGN1cnJlbnRTdGF0ZSgpID49IHN0YXRlKSB0aHJvdzsNCiAgICAgICAgXzsNCiAgICB9DQoNCiAgICAvL2ZhaWxzIGlmIHNvbWV0aGluZyBpbiBzZXR1cCBpcyBsb29raW5nIHdlaXJkDQogICAgbW9kaWZpZXIgdmFsaWRTZXR1cE9ubHkoKSB7DQogICAgICAgIGlmICggT1dORVIgPT0gMHgwIA0KICAgICAgICAgICAgfHwgUFJFU0FMRV9TVEFSVCA9PSAwIA0KICAgICAgICAgICAgfHwgUFJFU0FMRV9FTkQgPT0gMCANCiAgICAgICAgICAgIHx8IFdJVEhEUkFXQUxfRU5EID09MA0KICAgICAgICAgICAgfHwgUFJFU0FMRV9TVEFSVCA8PSBibG9jay5udW1iZXINCiAgICAgICAgICAgIHx8IFBSRVNBTEVfU1RBUlQgPj0gUFJFU0FMRV9FTkQNCiAgICAgICAgICAgIHx8IFBSRVNBTEVfRU5EICAgPj0gV0lUSERSQVdBTF9FTkQNCiAgICAgICAgICAgIHx8IE1JTl9UT1RBTF9BTU9VTlRfVE9fUkVDRUlWRSA+IE1BWF9UT1RBTF9BTU9VTlRfVE9fUkVDRUlWRSApDQogICAgICAgICAgICAgICAgdGhyb3c7DQogICAgICAgIF87DQogICAgfQ0KDQoNCiAgICAvL2FjY2VwdHMgY2FsbHMgZnJvbSBvd25lciBvbmx5DQogICAgbW9kaWZpZXIgb25seU93bmVyKCl7DQogICAgICAgIGlmIChtc2cuc2VuZGVyICE9IE9XTkVSKSAgdGhyb3c7DQogICAgICAgIF87DQogICAgfQ0KDQoNCiAgICAvL2FjY2VwdHMgY2FsbHMgZnJvbSB0b2tlbiBob2xkZXJzIG9ubHkNCiAgICBtb2RpZmllciB0b2tlbkhvbGRlcnNPbmx5KCl7DQogICAgICAgIGlmIChiYWxhbmNlc1ttc2cuc2VuZGVyXSA9PSAwKSB0aHJvdzsNCiAgICAgICAgXzsNCiAgICB9DQoNCg0KICAgIC8vIGRvbmB0IGFjY2VwdCB0cmFuc2FjdGlvbnMgd2l0aCB2YWx1ZSBsZXNzIHRoYW4gYWxsb3dlZCBtaW5pbXVtDQogICAgbW9kaWZpZXIgbm90VG9vU21hbGxBbW91bnRPbmx5KCl7CQ0KICAgICAgICBpZiAobXNnLnZhbHVlIDwgTUlOX0FDQ0VQVEVEX0FNT1VOVCkgdGhyb3c7DQogICAgICAgIF87DQogICAgfQ0KDQoNCiAgICAvL3ByZXZlbnRzIHJlZW50cmFuY3kgYXR0YWNzDQogICAgYm9vbCBwcml2YXRlIGxvY2tlZCA9IGZhbHNlOw0KICAgIG1vZGlmaWVyIG5vUmVlbnRyYW5jeSgpIHsNCiAgICAgICAgaWYgKGxvY2tlZCkgdGhyb3c7DQogICAgICAgIGxvY2tlZCA9IHRydWU7DQogICAgICAgIF87DQogICAgICAgIGxvY2tlZCA9IGZhbHNlOw0KICAgIH0NCn0vL2NvbnRyYWN0'