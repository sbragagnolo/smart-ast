base 64 content
base64presaleToken2
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC40Ow0KDQovLyBFUkMyMCB0b2tlbiBpbnRlcmZhY2UgaXMgaW1wbGVtZW50ZWQgb25seSBwYXJ0aWFsbHkNCi8vIChubyBTYWZlTWF0aCBpcyB1c2VkIGJlY2F1c2UgY29udHJhY3QgY29kZSBpcyB2ZXJ5IHNpbXBsZSkNCi8vIA0KLy8gU29tZSBmdW5jdGlvbnMgbGVmdCB1bmRlZmluZWQ6DQovLyAgLSB0cmFuc2ZlciwgdHJhbnNmZXJGcm9tLA0KLy8gIC0gYXBwcm92ZSwgYWxsb3dhbmNlLg0KY29udHJhY3QgUHJlc2FsZVRva2VuDQp7DQovLy8gRmllbGRzOg0KICAgIHN0cmluZyBwdWJsaWMgY29uc3RhbnQgbmFtZSA9ICJJTU1MQSBQcmVzYWxlIFRva2VuIjsNCiAgICBzdHJpbmcgcHVibGljIGNvbnN0YW50IHN5bWJvbCA9ICJJTUwiOw0KICAgIHVpbnQgcHVibGljIGNvbnN0YW50IGRlY2ltYWxzID0gMTg7DQogICAgdWludCBwdWJsaWMgY29uc3RhbnQgUFJJQ0UgPSA1MjAwOyAgLy8gcGVyIDEgRXRoZXINCg0KICAgIC8vICBwcmljZQ0KICAgIC8vIENhcCBpcyAyNzQ3IEVUSA0KICAgIC8vIDEgZXRoID0gNTIwMDsgIHByZXNhbGUgSU1NTEEgdG9rZW5zDQogICAgLy8gMSBJTUwgPSAwLDAwMDE5MiBFVEgNCiAgICAvLyBFVEggcHJpY2UgfjIyMCQgLSAxMC4wNy4yMDE3DQogICAgdWludCBwdWJsaWMgY29uc3RhbnQgVE9LRU5fU1VQUExZX0xJTUlUID0gUFJJQ0UgKiAyNzQ3ICogKDEgZXRoZXIgLyAxIHdlaSk7DQoNCiAgICBlbnVtIFN0YXRlew0KICAgICAgIEluaXQsDQogICAgICAgUnVubmluZywNCiAgICAgICBQYXVzZWQsDQogICAgICAgTWlncmF0aW5nLA0KICAgICAgIE1pZ3JhdGVkDQogICAgfQ0KDQogICAgU3RhdGUgcHVibGljIGN1cnJlbnRTdGF0ZSA9IFN0YXRlLlJ1bm5pbmc7DQogICAgdWludCBwdWJsaWMgdG90YWxTdXBwbHkgPSAwOyAvLyBhbW91bnQgb2YgdG9rZW5zIGFscmVhZHkgc29sZA0KDQogICAgLy8gR2F0aGVyZWQgZnVuZHMgY2FuIGJlIHdpdGhkcmF3biBvbmx5IHRvIGVzY3JvdydzIGFkZHJlc3MuDQogICAgYWRkcmVzcyBwdWJsaWMgZXNjcm93ID0gMDsNCg0KICAgIC8vIFRva2VuIG1hbmFnZXIgaGFzIGV4Y2x1c2l2ZSBwcml2ZWxlZ2VzIHRvIGNhbGwgYWRtaW5pc3RyYXRpdmUNCiAgICAvLyBmdW5jdGlvbnMgb24gdGhpcyBjb250cmFjdC4NCiAgICBhZGRyZXNzIHB1YmxpYyB0b2tlbk1hbmFnZXIgPSAwOw0KDQogICAgLy8gQ3Jvd2RzYWxlIG1hbmFnZXIgaGFzIGV4Y2x1c2l2ZSBwcml2ZWxlZ2VzIHRvIGJ1cm4gcHJlc2FsZSB0b2tlbnMuDQogICAgYWRkcmVzcyBwdWJsaWMgY3Jvd2RzYWxlTWFuYWdlciA9IDA7DQoNCiAgICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIHByaXZhdGUgYmFsYW5jZTsNCg0KLy8vIE1vZGlmaWVyczoNCiAgICBtb2RpZmllciBvbmx5VG9rZW5NYW5hZ2VyKCkgICAgIHsgaWYobXNnLnNlbmRlciAhPSB0b2tlbk1hbmFnZXIpIHRocm93OyBfOyB9DQogICAgbW9kaWZpZXIgb25seUNyb3dkc2FsZU1hbmFnZXIoKSB7IGlmKG1zZy5zZW5kZXIgIT0gY3Jvd2RzYWxlTWFuYWdlcikgdGhyb3c7IF87IH0NCiAgICBtb2RpZmllciBvbmx5SW5TdGF0ZShTdGF0ZSBzdGF0ZSl7IGlmKHN0YXRlICE9IGN1cnJlbnRTdGF0ZSkgdGhyb3c7IF87IH0NCg0KLy8vIEV2ZW50czoNCiAgICBldmVudCBMb2dCdXkoYWRkcmVzcyBpbmRleGVkIG93bmVyLCB1aW50IHZhbHVlKTsNCiAgICBldmVudCBMb2dCdXJuKGFkZHJlc3MgaW5kZXhlZCBvd25lciwgdWludCB2YWx1ZSk7DQogICAgZXZlbnQgTG9nU3RhdGVTd2l0Y2goU3RhdGUgbmV3U3RhdGUpOw0KDQovLy8gRnVuY3Rpb25zOg0KICAgIC8vLyBAZGV2IENvbnN0cnVjdG9yDQogICAgLy8vIEBwYXJhbSBfdG9rZW5NYW5hZ2VyIFRva2VuIG1hbmFnZXIgYWRkcmVzcy4NCiAgICBmdW5jdGlvbiBQcmVzYWxlVG9rZW4oYWRkcmVzcyBfdG9rZW5NYW5hZ2VyLCBhZGRyZXNzIF9lc2Nyb3cpIA0KICAgIHsNCiAgICAgICAgaWYoX3Rva2VuTWFuYWdlcj09MCkgdGhyb3c7DQogICAgICAgIGlmKF9lc2Nyb3c9PTApIHRocm93Ow0KDQogICAgICAgIHRva2VuTWFuYWdlciA9IF90b2tlbk1hbmFnZXI7DQogICAgICAgIGVzY3JvdyA9IF9lc2Nyb3c7DQogICAgfQ0KDQogICAgZnVuY3Rpb24gYnV5VG9rZW5zKGFkZHJlc3MgX2J1eWVyKSBwdWJsaWMgcGF5YWJsZSBvbmx5SW5TdGF0ZShTdGF0ZS5SdW5uaW5nKQ0KICAgIHsNCiAgICAgICAgaWYobXNnLnZhbHVlID09IDApIHRocm93Ow0KICAgICAgICB1aW50IG5ld1Rva2VucyA9IG1zZy52YWx1ZSAqIFBSSUNFOw0KDQogICAgICAgIGlmICh0b3RhbFN1cHBseSArIG5ld1Rva2VucyA+IFRPS0VOX1NVUFBMWV9MSU1JVCkgdGhyb3c7DQoNCiAgICAgICAgYmFsYW5jZVtfYnV5ZXJdICs9IG5ld1Rva2VuczsNCiAgICAgICAgdG90YWxTdXBwbHkgKz0gbmV3VG9rZW5zOw0KDQogICAgICAgIExvZ0J1eShfYnV5ZXIsIG5ld1Rva2Vucyk7DQogICAgfQ0KDQogICAgLy8vIEBkZXYgUmV0dXJucyBudW1iZXIgb2YgdG9rZW5zIG93bmVkIGJ5IGdpdmVuIGFkZHJlc3MuDQogICAgLy8vIEBwYXJhbSBfb3duZXIgQWRkcmVzcyBvZiB0b2tlbiBvd25lci4NCiAgICBmdW5jdGlvbiBidXJuVG9rZW5zKGFkZHJlc3MgX293bmVyKSBwdWJsaWMgb25seUNyb3dkc2FsZU1hbmFnZXIgb25seUluU3RhdGUoU3RhdGUuTWlncmF0aW5nKQ0KICAgIHsNCiAgICAgICAgdWludCB0b2tlbnMgPSBiYWxhbmNlW19vd25lcl07DQogICAgICAgIGlmKHRva2VucyA9PSAwKSB0aHJvdzsNCg0KICAgICAgICBiYWxhbmNlW19vd25lcl0gPSAwOw0KICAgICAgICB0b3RhbFN1cHBseSAtPSB0b2tlbnM7DQoNCiAgICAgICAgTG9nQnVybihfb3duZXIsIHRva2Vucyk7DQoNCiAgICAgICAgLy8gQXV0b21hdGljYWxseSBzd2l0Y2ggcGhhc2Ugd2hlbiBtaWdyYXRpb24gaXMgZG9uZS4NCiAgICAgICAgaWYodG90YWxTdXBwbHkgPT0gMCkgDQogICAgICAgIHsNCiAgICAgICAgICAgIGN1cnJlbnRTdGF0ZSA9IFN0YXRlLk1pZ3JhdGVkOw0KICAgICAgICAgICAgTG9nU3RhdGVTd2l0Y2goU3RhdGUuTWlncmF0ZWQpOw0KICAgICAgICB9DQogICAgfQ0KDQogICAgLy8vIEBkZXYgUmV0dXJucyBudW1iZXIgb2YgdG9rZW5zIG93bmVkIGJ5IGdpdmVuIGFkZHJlc3MuDQogICAgLy8vIEBwYXJhbSBfb3duZXIgQWRkcmVzcyBvZiB0b2tlbiBvd25lci4NCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIA0KICAgIHsNCiAgICAgICAgcmV0dXJuIGJhbGFuY2VbX293bmVyXTsNCiAgICB9DQoNCiAgICBmdW5jdGlvbiBzZXRQcmVzYWxlU3RhdGUoU3RhdGUgX25leHRTdGF0ZSkgcHVibGljIG9ubHlUb2tlbk1hbmFnZXINCiAgICB7DQogICAgICAgIC8vIEluaXQgLT4gUnVubmluZw0KICAgICAgICAvLyBSdW5uaW5nIC0+IFBhdXNlZA0KICAgICAgICAvLyBSdW5uaW5nIC0+IE1pZ3JhdGluZw0KICAgICAgICAvLyBQYXVzZWQgLT4gUnVubmluZw0KICAgICAgICAvLyBQYXVzZWQgLT4gTWlncmF0aW5nDQogICAgICAgIC8vIE1pZ3JhdGluZyAtPiBNaWdyYXRlZA0KICAgICAgICBib29sIGNhblN3aXRjaFN0YXRlDQogICAgICAgICAgICAgPSAgKGN1cnJlbnRTdGF0ZSA9PSBTdGF0ZS5Jbml0ICYmIF9uZXh0U3RhdGUgPT0gU3RhdGUuUnVubmluZykNCiAgICAgICAgICAgICB8fCAoY3VycmVudFN0YXRlID09IFN0YXRlLlJ1bm5pbmcgJiYgX25leHRTdGF0ZSA9PSBTdGF0ZS5QYXVzZWQpDQogICAgICAgICAgICAgLy8gc3dpdGNoIHRvIG1pZ3JhdGlvbiBwaGFzZSBvbmx5IGlmIGNyb3dkc2FsZSBtYW5hZ2VyIGlzIHNldA0KICAgICAgICAgICAgIHx8ICgoY3VycmVudFN0YXRlID09IFN0YXRlLlJ1bm5pbmcgfHwgY3VycmVudFN0YXRlID09IFN0YXRlLlBhdXNlZCkNCiAgICAgICAgICAgICAgICAgJiYgX25leHRTdGF0ZSA9PSBTdGF0ZS5NaWdyYXRpbmcNCiAgICAgICAgICAgICAgICAgJiYgY3Jvd2RzYWxlTWFuYWdlciAhPSAweDApDQogICAgICAgICAgICAgfHwgKGN1cnJlbnRTdGF0ZSA9PSBTdGF0ZS5QYXVzZWQgJiYgX25leHRTdGF0ZSA9PSBTdGF0ZS5SdW5uaW5nKQ0KICAgICAgICAgICAgIC8vIHN3aXRjaCB0byBtaWdyYXRlZCBvbmx5IGlmIGV2ZXJ5dGluZyBpcyBtaWdyYXRlZA0KICAgICAgICAgICAgIHx8IChjdXJyZW50U3RhdGUgPT0gU3RhdGUuTWlncmF0aW5nICYmIF9uZXh0U3RhdGUgPT0gU3RhdGUuTWlncmF0ZWQNCiAgICAgICAgICAgICAgICAgJiYgdG90YWxTdXBwbHkgPT0gMCk7DQoNCiAgICAgICAgaWYoIWNhblN3aXRjaFN0YXRlKSB0aHJvdzsNCg0KICAgICAgICBjdXJyZW50U3RhdGUgPSBfbmV4dFN0YXRlOw0KICAgICAgICBMb2dTdGF0ZVN3aXRjaChfbmV4dFN0YXRlKTsNCiAgICB9DQoNCiAgICBmdW5jdGlvbiB3aXRoZHJhd0V0aGVyKCkgcHVibGljIG9ubHlUb2tlbk1hbmFnZXINCiAgICB7DQogICAgICAgIGlmKHRoaXMuYmFsYW5jZSA+IDApIA0KICAgICAgICB7DQogICAgICAgICAgICBpZighZXNjcm93LnNlbmQodGhpcy5iYWxhbmNlKSkgdGhyb3c7DQogICAgICAgIH0NCiAgICB9DQoNCi8vLyBTZXR0ZXJzL2dldHRlcnMNCiAgICBmdW5jdGlvbiBzZXRUb2tlbk1hbmFnZXIoYWRkcmVzcyBfbWdyKSBwdWJsaWMgb25seVRva2VuTWFuYWdlcg0KICAgIHsNCiAgICAgICAgdG9rZW5NYW5hZ2VyID0gX21ncjsNCiAgICB9DQoNCiAgICBmdW5jdGlvbiBzZXRDcm93ZHNhbGVNYW5hZ2VyKGFkZHJlc3MgX21ncikgcHVibGljIG9ubHlUb2tlbk1hbmFnZXINCiAgICB7DQogICAgICAgIC8vIFlvdSBjYW4ndCBjaGFuZ2UgY3Jvd2RzYWxlIGNvbnRyYWN0IHdoZW4gbWlncmF0aW9uIGlzIGluIHByb2dyZXNzLg0KICAgICAgICBpZihjdXJyZW50U3RhdGUgPT0gU3RhdGUuTWlncmF0aW5nKSB0aHJvdzsNCg0KICAgICAgICBjcm93ZHNhbGVNYW5hZ2VyID0gX21ncjsNCiAgICB9DQoNCiAgICBmdW5jdGlvbiBnZXRUb2tlbk1hbmFnZXIoKWNvbnN0YW50IHJldHVybnMoYWRkcmVzcykNCiAgICB7DQogICAgICAgIHJldHVybiB0b2tlbk1hbmFnZXI7DQogICAgfQ0KDQogICAgZnVuY3Rpb24gZ2V0Q3Jvd2RzYWxlTWFuYWdlcigpY29uc3RhbnQgcmV0dXJucyhhZGRyZXNzKQ0KICAgIHsNCiAgICAgICAgcmV0dXJuIGNyb3dkc2FsZU1hbmFnZXI7DQogICAgfQ0KDQogICAgZnVuY3Rpb24gZ2V0Q3VycmVudFN0YXRlKCljb25zdGFudCByZXR1cm5zKFN0YXRlKQ0KICAgIHsNCiAgICAgICAgcmV0dXJuIGN1cnJlbnRTdGF0ZTsNCiAgICB9DQoNCiAgICBmdW5jdGlvbiBnZXRQcmljZSgpY29uc3RhbnQgcmV0dXJucyh1aW50KQ0KICAgIHsNCiAgICAgICAgcmV0dXJuIFBSSUNFOw0KICAgIH0NCg0KICAgIGZ1bmN0aW9uIGdldFRvdGFsU3VwcGx5KCljb25zdGFudCByZXR1cm5zKHVpbnQpDQogICAgew0KICAgICAgICByZXR1cm4gdG90YWxTdXBwbHk7DQogICAgfQ0KDQoNCiAgICAvLyBEZWZhdWx0IGZhbGxiYWNrIGZ1bmN0aW9uDQogICAgZnVuY3Rpb24oKSBwYXlhYmxlIA0KICAgIHsNCiAgICAgICAgYnV5VG9rZW5zKG1zZy5zZW5kZXIpOw0KICAgIH0NCn0='