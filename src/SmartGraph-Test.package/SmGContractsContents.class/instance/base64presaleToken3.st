base 64 content
base64presaleToken3
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC40Ow0KDQoNCi8vIEVSQzIwIHRva2VuIGludGVyZmFjZSBpcyBpbXBsZW1lbnRlZCBvbmx5IHBhcnRpYWxseS4NCi8vIFRva2VuIHRyYW5zZmVyIGlzIHByb2hpYml0ZWQgZHVlIHRvIHNwZWMgKHNlZSBQUkVTQUxFLVNQRUMubWQpLA0KLy8gaGVuY2Ugc29tZSBmdW5jdGlvbnMgYXJlIGxlZnQgdW5kZWZpbmVkOg0KLy8gIC0gdHJhbnNmZXIsIHRyYW5zZmVyRnJvbSwNCi8vICAtIGFwcHJvdmUsIGFsbG93YW5jZS4NCg0KY29udHJhY3QgUHJlc2FsZVRva2VuIHsNCg0KICAgIC8vLyBAZGV2IENvbnN0cnVjdG9yDQogICAgLy8vIEBwYXJhbSBfdG9rZW5NYW5hZ2VyIFRva2VuIG1hbmFnZXIgYWRkcmVzcy4NCiAgICBmdW5jdGlvbiBQcmVzYWxlVG9rZW4oYWRkcmVzcyBfdG9rZW5NYW5hZ2VyLCBhZGRyZXNzIF9lc2Nyb3cpIHsNCiAgICAgICAgdG9rZW5NYW5hZ2VyID0gX3Rva2VuTWFuYWdlcjsNCiAgICAgICAgZXNjcm93ID0gX2VzY3JvdzsNCiAgICB9DQoNCg0KICAgIC8qLw0KICAgICAqICBDb25zdGFudHMNCiAgICAvKi8NCg0KICAgIHN0cmluZyBwdWJsaWMgY29uc3RhbnQgbmFtZSA9ICJTT05NIFByZXNhbGUgVG9rZW4iOw0KICAgIHN0cmluZyBwdWJsaWMgY29uc3RhbnQgc3ltYm9sID0gIlNQVCI7DQogICAgdWludCAgIHB1YmxpYyBjb25zdGFudCBkZWNpbWFscyA9IDE4Ow0KDQogICAgdWludCBwdWJsaWMgY29uc3RhbnQgUFJJQ0UgPSA2MDY7IC8vIDYwNiBTUFQgcGVyIEV0aGVyDQoNCiAgICAvLyAgcHJpY2UNCiAgICAvLyBDdXAgaXMgMTAgMDAwIEVUSA0KICAgIC8vIDEgZXRoID0gNjA2IHByZXNhbGUgdG9rZW5zDQogICAgLy8gRVRIIHByaWNlIH41MCQgZm9yIDI4LjAzLjIwMTcNCiAgICAvLyBDdXAgaW4gJCBpcyB+IDUwMCAwMDAkDQoNCiAgICB1aW50IHB1YmxpYyBjb25zdGFudCBUT0tFTl9TVVBQTFlfTElNSVQgPSA2MDYgKiAxMDAwMCAqICgxIGV0aGVyIC8gMSB3ZWkpOw0KDQoNCg0KICAgIC8qLw0KICAgICAqICBUb2tlbiBzdGF0ZQ0KICAgIC8qLw0KDQogICAgZW51bSBQaGFzZSB7DQogICAgICAgIENyZWF0ZWQsDQogICAgICAgIFJ1bm5pbmcsDQogICAgICAgIFBhdXNlZCwNCiAgICAgICAgTWlncmF0aW5nLA0KICAgICAgICBNaWdyYXRlZA0KICAgIH0NCg0KICAgIFBoYXNlIHB1YmxpYyBjdXJyZW50UGhhc2UgPSBQaGFzZS5DcmVhdGVkOw0KICAgIHVpbnQgcHVibGljIHRvdGFsU3VwcGx5ID0gMDsgLy8gYW1vdW50IG9mIHRva2VucyBhbHJlYWR5IHNvbGQNCg0KICAgIC8vIFRva2VuIG1hbmFnZXIgaGFzIGV4Y2x1c2l2ZSBwcml2ZWxlZ2VzIHRvIGNhbGwgYWRtaW5pc3RyYXRpdmUNCiAgICAvLyBmdW5jdGlvbnMgb24gdGhpcyBjb250cmFjdC4NCiAgICBhZGRyZXNzIHB1YmxpYyB0b2tlbk1hbmFnZXI7DQoNCiAgICAvLyBHYXRoZXJlZCBmdW5kcyBjYW4gYmUgd2l0aGRyYXduIG9ubHkgdG8gZXNjcm93J3MgYWRkcmVzcy4NCiAgICBhZGRyZXNzIHB1YmxpYyBlc2Nyb3c7DQoNCiAgICAvLyBDcm93ZHNhbGUgbWFuYWdlciBoYXMgZXhjbHVzaXZlIHByaXZlbGVnZXMgdG8gYnVybiBwcmVzYWxlIHRva2Vucy4NCiAgICBhZGRyZXNzIHB1YmxpYyBjcm93ZHNhbGVNYW5hZ2VyOw0KDQogICAgbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSBwcml2YXRlIGJhbGFuY2U7DQoNCg0KICAgIG1vZGlmaWVyIG9ubHlUb2tlbk1hbmFnZXIoKSAgICAgeyBpZihtc2cuc2VuZGVyICE9IHRva2VuTWFuYWdlcikgdGhyb3c7IF87IH0NCiAgICBtb2RpZmllciBvbmx5Q3Jvd2RzYWxlTWFuYWdlcigpIHsgaWYobXNnLnNlbmRlciAhPSBjcm93ZHNhbGVNYW5hZ2VyKSB0aHJvdzsgXzsgfQ0KDQoNCiAgICAvKi8NCiAgICAgKiAgRXZlbnRzDQogICAgLyovDQoNCiAgICBldmVudCBMb2dCdXkoYWRkcmVzcyBpbmRleGVkIG93bmVyLCB1aW50IHZhbHVlKTsNCiAgICBldmVudCBMb2dCdXJuKGFkZHJlc3MgaW5kZXhlZCBvd25lciwgdWludCB2YWx1ZSk7DQogICAgZXZlbnQgTG9nUGhhc2VTd2l0Y2goUGhhc2UgbmV3UGhhc2UpOw0KDQoNCiAgICAvKi8NCiAgICAgKiAgUHVibGljIGZ1bmN0aW9ucw0KICAgIC8qLw0KDQogICAgZnVuY3Rpb24oKSBwYXlhYmxlIHsNCiAgICAgICAgYnV5VG9rZW5zKG1zZy5zZW5kZXIpOw0KICAgIH0NCg0KICAgIC8vLyBAZGV2IExldHMgYnV5IHlvdSBzb21lIHRva2Vucy4NCiAgICBmdW5jdGlvbiBidXlUb2tlbnMoYWRkcmVzcyBfYnV5ZXIpIHB1YmxpYyBwYXlhYmxlIHsNCiAgICAgICAgLy8gQXZhaWxhYmxlIG9ubHkgaWYgcHJlc2FsZSBpcyBydW5uaW5nLg0KICAgICAgICBpZihjdXJyZW50UGhhc2UgIT0gUGhhc2UuUnVubmluZykgdGhyb3c7DQoNCiAgICAgICAgaWYobXNnLnZhbHVlID09IDApIHRocm93Ow0KICAgICAgICB1aW50IG5ld1Rva2VucyA9IG1zZy52YWx1ZSAqIFBSSUNFOw0KICAgICAgICBpZiAodG90YWxTdXBwbHkgKyBuZXdUb2tlbnMgPiBUT0tFTl9TVVBQTFlfTElNSVQpIHRocm93Ow0KICAgICAgICBiYWxhbmNlW19idXllcl0gKz0gbmV3VG9rZW5zOw0KICAgICAgICB0b3RhbFN1cHBseSArPSBuZXdUb2tlbnM7DQogICAgICAgIExvZ0J1eShfYnV5ZXIsIG5ld1Rva2Vucyk7DQogICAgfQ0KDQoNCiAgICAvLy8gQGRldiBSZXR1cm5zIG51bWJlciBvZiB0b2tlbnMgb3duZWQgYnkgZ2l2ZW4gYWRkcmVzcy4NCiAgICAvLy8gQHBhcmFtIF9vd25lciBBZGRyZXNzIG9mIHRva2VuIG93bmVyLg0KICAgIGZ1bmN0aW9uIGJ1cm5Ub2tlbnMoYWRkcmVzcyBfb3duZXIpIHB1YmxpYw0KICAgICAgICBvbmx5Q3Jvd2RzYWxlTWFuYWdlcg0KICAgIHsNCiAgICAgICAgLy8gQXZhaWxhYmxlIG9ubHkgZHVyaW5nIG1pZ3JhdGlvbiBwaGFzZQ0KICAgICAgICBpZihjdXJyZW50UGhhc2UgIT0gUGhhc2UuTWlncmF0aW5nKSB0aHJvdzsNCg0KICAgICAgICB1aW50IHRva2VucyA9IGJhbGFuY2VbX293bmVyXTsNCiAgICAgICAgaWYodG9rZW5zID09IDApIHRocm93Ow0KICAgICAgICBiYWxhbmNlW19vd25lcl0gPSAwOw0KICAgICAgICB0b3RhbFN1cHBseSAtPSB0b2tlbnM7DQogICAgICAgIExvZ0J1cm4oX293bmVyLCB0b2tlbnMpOw0KDQogICAgICAgIC8vIEF1dG9tYXRpY2FsbHkgc3dpdGNoIHBoYXNlIHdoZW4gbWlncmF0aW9uIGlzIGRvbmUuDQogICAgICAgIGlmKHRvdGFsU3VwcGx5ID09IDApIHsNCiAgICAgICAgICAgIGN1cnJlbnRQaGFzZSA9IFBoYXNlLk1pZ3JhdGVkOw0KICAgICAgICAgICAgTG9nUGhhc2VTd2l0Y2goUGhhc2UuTWlncmF0ZWQpOw0KICAgICAgICB9DQogICAgfQ0KDQoNCiAgICAvLy8gQGRldiBSZXR1cm5zIG51bWJlciBvZiB0b2tlbnMgb3duZWQgYnkgZ2l2ZW4gYWRkcmVzcy4NCiAgICAvLy8gQHBhcmFtIF9vd25lciBBZGRyZXNzIG9mIHRva2VuIG93bmVyLg0KICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1Nikgew0KICAgICAgICByZXR1cm4gYmFsYW5jZVtfb3duZXJdOw0KICAgIH0NCg0KDQogICAgLyovDQogICAgICogIEFkbWluaXN0cmF0aXZlIGZ1bmN0aW9ucw0KICAgIC8qLw0KDQogICAgZnVuY3Rpb24gc2V0UHJlc2FsZVBoYXNlKFBoYXNlIF9uZXh0UGhhc2UpIHB1YmxpYw0KICAgICAgICBvbmx5VG9rZW5NYW5hZ2VyDQogICAgew0KICAgICAgICBib29sIGNhblN3aXRjaFBoYXNlDQogICAgICAgICAgICA9ICAoY3VycmVudFBoYXNlID09IFBoYXNlLkNyZWF0ZWQgJiYgX25leHRQaGFzZSA9PSBQaGFzZS5SdW5uaW5nKQ0KICAgICAgICAgICAgfHwgKGN1cnJlbnRQaGFzZSA9PSBQaGFzZS5SdW5uaW5nICYmIF9uZXh0UGhhc2UgPT0gUGhhc2UuUGF1c2VkKQ0KICAgICAgICAgICAgICAgIC8vIHN3aXRjaCB0byBtaWdyYXRpb24gcGhhc2Ugb25seSBpZiBjcm93ZHNhbGUgbWFuYWdlciBpcyBzZXQNCiAgICAgICAgICAgIHx8ICgoY3VycmVudFBoYXNlID09IFBoYXNlLlJ1bm5pbmcgfHwgY3VycmVudFBoYXNlID09IFBoYXNlLlBhdXNlZCkNCiAgICAgICAgICAgICAgICAmJiBfbmV4dFBoYXNlID09IFBoYXNlLk1pZ3JhdGluZw0KICAgICAgICAgICAgICAgICYmIGNyb3dkc2FsZU1hbmFnZXIgIT0gMHgwKQ0KICAgICAgICAgICAgfHwgKGN1cnJlbnRQaGFzZSA9PSBQaGFzZS5QYXVzZWQgJiYgX25leHRQaGFzZSA9PSBQaGFzZS5SdW5uaW5nKQ0KICAgICAgICAgICAgICAgIC8vIHN3aXRjaCB0byBtaWdyYXRlZCBvbmx5IGlmIGV2ZXJ5dGluZyBpcyBtaWdyYXRlZA0KICAgICAgICAgICAgfHwgKGN1cnJlbnRQaGFzZSA9PSBQaGFzZS5NaWdyYXRpbmcgJiYgX25leHRQaGFzZSA9PSBQaGFzZS5NaWdyYXRlZA0KICAgICAgICAgICAgICAgICYmIHRvdGFsU3VwcGx5ID09IDApOw0KDQogICAgICAgIGlmKCFjYW5Td2l0Y2hQaGFzZSkgdGhyb3c7DQogICAgICAgIGN1cnJlbnRQaGFzZSA9IF9uZXh0UGhhc2U7DQogICAgICAgIExvZ1BoYXNlU3dpdGNoKF9uZXh0UGhhc2UpOw0KICAgIH0NCg0KDQogICAgZnVuY3Rpb24gd2l0aGRyYXdFdGhlcigpIHB1YmxpYw0KICAgICAgICBvbmx5VG9rZW5NYW5hZ2VyDQogICAgew0KICAgICAgICAvLyBBdmFpbGFibGUgYXQgYW55IHBoYXNlLg0KICAgICAgICBpZih0aGlzLmJhbGFuY2UgPiAwKSB7DQogICAgICAgICAgICBpZighZXNjcm93LnNlbmQodGhpcy5iYWxhbmNlKSkgdGhyb3c7DQogICAgICAgIH0NCiAgICB9DQoNCg0KICAgIGZ1bmN0aW9uIHNldENyb3dkc2FsZU1hbmFnZXIoYWRkcmVzcyBfbWdyKSBwdWJsaWMNCiAgICAgICAgb25seVRva2VuTWFuYWdlcg0KICAgIHsNCiAgICAgICAgLy8gWW91IGNhbid0IGNoYW5nZSBjcm93ZHNhbGUgY29udHJhY3Qgd2hlbiBtaWdyYXRpb24gaXMgaW4gcHJvZ3Jlc3MuDQogICAgICAgIGlmKGN1cnJlbnRQaGFzZSA9PSBQaGFzZS5NaWdyYXRpbmcpIHRocm93Ow0KICAgICAgICBjcm93ZHNhbGVNYW5hZ2VyID0gX21ncjsNCiAgICB9DQp9'