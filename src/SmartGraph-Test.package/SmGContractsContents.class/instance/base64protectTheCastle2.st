base 64 content
base64protectTheCastle2
	^'Y29udHJhY3QgUHJvdGVjdFRoZUNhc3RsZSB7DQogICAgLy8gS2luZydzIEplc3Rlcg0KICAgIGFkZHJlc3MgcHVibGljIGplc3RlcjsNCiAgICAvLyBSZWNvcmQgdGhlIGxhc3QgUmVwYXJhdGlvbiB0aW1lDQogICAgdWludCBwdWJsaWMgbGFzdFJlcGFyYXRpb247DQogICAgLy8gUGlnZ3kgQmFuayBBbW91bnQNCiAgICB1aW50IHB1YmxpYyBwaWdneUJhbms7DQoNCiAgICAvLyBDb2xsZWN0ZWQgRmVlIEFtb3VudA0KICAgIHVpbnQgcHVibGljIGNvbGxlY3RlZEZlZTsNCg0KICAgIC8vIFRyYWNrIHRoZSBjaXRpemVucyB3aG8gaGVscGVkIHRvIHJlcGFpciB0aGUgY2FzdGxlDQogICAgYWRkcmVzc1tdIHB1YmxpYyBjaXRpemVuc0FkZHJlc3NlczsNCiAgICB1aW50W10gcHVibGljIGNpdGl6ZW5zQW1vdW50czsNCiAgICB1aW50MzIgcHVibGljIHRvdGFsQ2l0aXplbnM7DQogICAgdWludDMyIHB1YmxpYyBsYXN0Q2l0aXplblBhaWQ7DQogICAgLy8gQnJpZGVkIENpdGl6ZW4gd2hvIG1hZGUgdGhlIHN5c3RlbSB3b3Jrcw0KICAgIGFkZHJlc3MgcHVibGljIGJyaWJlZENpdGl6ZW47DQogICAgLy8gUmVjb3JkIGhvdyBtYW55IHRpbWVzIHRoZSBjYXN0bGUgaGFkIGZlbGwNCiAgICB1aW50MzIgcHVibGljIHJvdW5kOw0KICAgIC8vIEFtb3VudCBhbHJlYWR5IHBhaWQgYmFjayBpbiB0aGlzIHJvdW5kDQogICAgdWludCBwdWJsaWMgYW1vdW50QWxyZWFkeVBhaWRCYWNrOw0KICAgIC8vIEFtb3VudCBpbnZlc3RlZCBpbiB0aGlzIHJvdW5kDQogICAgdWludCBwdWJsaWMgYW1vdW50SW52ZXN0ZWQ7DQoNCiAgICB1aW50IGNvbnN0YW50IFNJWF9IT1VSUyA9IDYwICogNjAgKiA2Ow0KDQogICAgZnVuY3Rpb24gUHJvdGVjdFRoZUNhc3RsZSgpIHsNCiAgICAgICAgLy8gRGVmaW5lIHRoZSBmaXJzdCBjYXN0bGUNCiAgICAgICAgYnJpYmVkQ2l0aXplbiA9IG1zZy5zZW5kZXI7DQogICAgICAgIGplc3RlciA9IG1zZy5zZW5kZXI7DQogICAgICAgIGxhc3RSZXBhcmF0aW9uID0gYmxvY2sudGltZXN0YW1wOw0KICAgICAgICBhbW91bnRBbHJlYWR5UGFpZEJhY2sgPSAwOw0KICAgICAgICBhbW91bnRJbnZlc3RlZCA9IDA7DQogICAgICAgIHRvdGFsQ2l0aXplbnMgPSAwOw0KICAgIH0NCg0KICAgIGZ1bmN0aW9uIHJlcGFpclRoZUNhc3RsZSgpIHJldHVybnMoYm9vbCkgew0KICAgICAgICB1aW50IGFtb3VudCA9IG1zZy52YWx1ZTsNCiAgICAgICAgLy8gQ2hlY2sgaWYgdGhlIG1pbmltdW0gYW1vdW50IGlmIHJlYWNoZWQNCiAgICAgICAgaWYgKGFtb3VudCA8IDEwIGZpbm5leSkgew0KICAgICAgICAgICAgbXNnLnNlbmRlci5zZW5kKG1zZy52YWx1ZSk7DQogICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgIH0NCiAgICAgICAgLy8gSWYgdGhlIGFtb3VudCByZWNlaXZlZCBpcyBtb3JlIHRoYW4gMTAwIEVUSCByZXR1cm4gdGhlIGRpZmZlcmVuY2UNCiAgICAgICAgaWYgKGFtb3VudCA+IDEwMCBldGhlcikgew0KICAgICAgICAgICAgbXNnLnNlbmRlci5zZW5kKG1zZy52YWx1ZSAtIDEwMCBldGhlcik7DQogICAgICAgICAgICBhbW91bnQgPSAxMDAgZXRoZXI7DQogICAgICAgIH0NCg0KICAgICAgICAvLyBDaGVjayBpZiB0aGUgQ2FzdGxlIGhhcyBmZWxsDQogICAgICAgIGlmIChsYXN0UmVwYXJhdGlvbiArIFNJWF9IT1VSUyA8IGJsb2NrLnRpbWVzdGFtcCkgew0KICAgICAgICAgICAgLy8gU2VuZCB0aGUgUGlnZ3kgQmFuayB0byB0aGUgbGFzdCAzIGNpdGl6ZW5zDQogICAgICAgICAgICAvLyBJZiB0aGVyZSBpcyBubyBvbmUgd2hvIGNvbnRyaWJ1dGVkIHRoaXMgbGFzdCA2IGhvdXJzLCBubyBhY3Rpb24gbmVlZGVkDQogICAgICAgICAgICBpZiAodG90YWxDaXRpemVucyA9PSAxKSB7DQogICAgICAgICAgICAgICAgLy8gSWYgdGhlcmUgaXMgb25seSBvbmUgQ2l0aXplbiB3aG8gY29udHJpYnV0ZWQsIGhlIGdldHMgdGhlIGZ1bGwgUGlnZyBCYW5rDQogICAgICAgICAgICAgICAgY2l0aXplbnNBZGRyZXNzZXNbY2l0aXplbnNBZGRyZXNzZXMubGVuZ3RoIC0gMV0uc2VuZChwaWdneUJhbmspOw0KICAgICAgICAgICAgfSBlbHNlIGlmICh0b3RhbENpdGl6ZW5zID09IDIpIHsNCiAgICAgICAgICAgICAgICAvLyBJZiBvbmx5IDIgY2l0aXplbnMgY29udHJpYnV0ZWQNCiAgICAgICAgICAgICAgICBjaXRpemVuc0FkZHJlc3Nlc1tjaXRpemVuc0FkZHJlc3Nlcy5sZW5ndGggLSAxXS5zZW5kKHBpZ2d5QmFuayAqIDY1IC8gMTAwKTsNCiAgICAgICAgICAgICAgICBjaXRpemVuc0FkZHJlc3Nlc1tjaXRpemVuc0FkZHJlc3Nlcy5sZW5ndGggLSAyXS5zZW5kKHBpZ2d5QmFuayAqIDM1IC8gMTAwKTsNCiAgICAgICAgICAgIH0gZWxzZSBpZiAodG90YWxDaXRpemVucyA+PSAzKSB7DQogICAgICAgICAgICAgICAgLy8gSWYgdGhlcmUgaXMgMyBvciBtb3JlIGNpdGl6ZW5zIHdobyBjb250cmlidXRlZA0KICAgICAgICAgICAgICAgIGNpdGl6ZW5zQWRkcmVzc2VzW2NpdGl6ZW5zQWRkcmVzc2VzLmxlbmd0aCAtIDFdLnNlbmQocGlnZ3lCYW5rICogNTUgLyAxMDApOw0KICAgICAgICAgICAgICAgIGNpdGl6ZW5zQWRkcmVzc2VzW2NpdGl6ZW5zQWRkcmVzc2VzLmxlbmd0aCAtIDJdLnNlbmQocGlnZ3lCYW5rICogMzAgLyAxMDApOw0KICAgICAgICAgICAgICAgIGNpdGl6ZW5zQWRkcmVzc2VzW2NpdGl6ZW5zQWRkcmVzc2VzLmxlbmd0aCAtIDNdLnNlbmQocGlnZ3lCYW5rICogMTUgLyAxMDApOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyBEZWZpbmUgdGhlIG5ldyBQaWdneSBCYW5rDQogICAgICAgICAgICBwaWdneUJhbmsgPSAwOw0KDQogICAgICAgICAgICAvLyBEZWZpbmUgdGhlIG5ldyBDYXN0bGUNCiAgICAgICAgICAgIGplc3RlciA9IG1zZy5zZW5kZXI7DQogICAgICAgICAgICBsYXN0UmVwYXJhdGlvbiA9IGJsb2NrLnRpbWVzdGFtcDsNCiAgICAgICAgICAgIGNpdGl6ZW5zQWRkcmVzc2VzLnB1c2gobXNnLnNlbmRlcik7DQogICAgICAgICAgICBjaXRpemVuc0Ftb3VudHMucHVzaChhbW91bnQgKiAyKTsNCiAgICAgICAgICAgIHRvdGFsQ2l0aXplbnMgKz0gMTsNCiAgICAgICAgICAgIGFtb3VudEludmVzdGVkICs9IGFtb3VudDsNCg0KICAgICAgICAgICAgLy8gQWxsIGdvZXMgdG8gdGhlIFBpZ2d5IEJhbmsNCiAgICAgICAgICAgIHBpZ2d5QmFuayArPSBhbW91bnQ7DQoNCiAgICAgICAgICAgIC8vIFRoZSBKZXRzdGVyIHRha2UgMyUNCiAgICAgICAgICAgIGplc3Rlci5zZW5kKGFtb3VudCAqIDMgLyAxMDApOw0KDQogICAgICAgICAgICAvLyBUaGUgYnJpZGVkIENpdGl6ZW4gdGFrZXMgMyUNCiAgICAgICAgICAgIGNvbGxlY3RlZEZlZSArPSBhbW91bnQgKiAzIC8gMTAwOw0KDQogICAgICAgICAgICByb3VuZCArPSAxOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgLy8gVGhlIENhc3RsZSBpcyBzdGlsbCB1cA0KICAgICAgICAgICAgbGFzdFJlcGFyYXRpb24gPSBibG9jay50aW1lc3RhbXA7DQogICAgICAgICAgICBjaXRpemVuc0FkZHJlc3Nlcy5wdXNoKG1zZy5zZW5kZXIpOw0KICAgICAgICAgICAgY2l0aXplbnNBbW91bnRzLnB1c2goYW1vdW50ICogMik7DQogICAgICAgICAgICB0b3RhbENpdGl6ZW5zICs9IDE7DQogICAgICAgICAgICBhbW91bnRJbnZlc3RlZCArPSBhbW91bnQ7DQoNCiAgICAgICAgICAgIC8vIDUlIGdvZXMgdG8gdGhlIFBpZ2d5IEJhbmsNCiAgICAgICAgICAgIHBpZ2d5QmFuayArPSAoYW1vdW50ICogNSAvIDEwMCk7DQoNCiAgICAgICAgICAgIC8vIFRoZSBKZXRzdGVyIHRha2VzIDMlDQogICAgICAgICAgICBqZXN0ZXIuc2VuZChhbW91bnQgKiAzIC8gMTAwKTsNCg0KICAgICAgICAgICAgLy8gVGhlIGJyaWRlZCBDaXRpemVuIHRha2VzIDMlDQogICAgICAgICAgICBjb2xsZWN0ZWRGZWUgKz0gYW1vdW50ICogMyAvIDEwMDsNCg0KICAgICAgICAgICAgd2hpbGUgKGNpdGl6ZW5zQW1vdW50c1tsYXN0Q2l0aXplblBhaWRdIDwgKGFkZHJlc3ModGhpcykuYmFsYW5jZSAtIHBpZ2d5QmFuayAtIGNvbGxlY3RlZEZlZSkgJiYgbGFzdENpdGl6ZW5QYWlkIDw9IHRvdGFsQ2l0aXplbnMpIHsNCiAgICAgICAgICAgICAgICBjaXRpemVuc0FkZHJlc3Nlc1tsYXN0Q2l0aXplblBhaWRdLnNlbmQoY2l0aXplbnNBbW91bnRzW2xhc3RDaXRpemVuUGFpZF0pOw0KICAgICAgICAgICAgICAgIGFtb3VudEFscmVhZHlQYWlkQmFjayArPSBjaXRpemVuc0Ftb3VudHNbbGFzdENpdGl6ZW5QYWlkXTsNCiAgICAgICAgICAgICAgICBsYXN0Q2l0aXplblBhaWQgKz0gMTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIC8vIGZhbGxiYWNrIGZ1bmN0aW9uDQogICAgZnVuY3Rpb24oKSB7DQogICAgICAgIHJlcGFpclRoZUNhc3RsZSgpOw0KICAgIH0NCg0KICAgIC8vIFdoZW4gdGhlIGNhc3RsZSB3b3VsZCBiZSBubyBtb3JlLi4uDQogICAgZnVuY3Rpb24gc3VycmVuZGVyKCkgew0KICAgICAgICBpZiAobXNnLnNlbmRlciA9PSBicmliZWRDaXRpemVuKSB7DQogICAgICAgICAgICBicmliZWRDaXRpemVuLnNlbmQoYWRkcmVzcyh0aGlzKS5iYWxhbmNlKTsNCiAgICAgICAgICAgIHNlbGZkZXN0cnVjdChicmliZWRDaXRpemVuKTsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIC8vIFdoZW4gdGhlIGJyaWRlZCBDaXRpemVuIGRlY2lkZXMgdG8gZ2l2ZSBoaXMgc2VhdCB0byBzb21lb25lIGVsc2UNCiAgICBmdW5jdGlvbiBuZXdCcmliZWRDaXRpemVuKGFkZHJlc3MgbmV3QnJpYmVkQ2l0aXplbikgew0KICAgICAgICBpZiAobXNnLnNlbmRlciA9PSBicmliZWRDaXRpemVuKSB7DQogICAgICAgICAgICBicmliZWRDaXRpemVuID0gbmV3QnJpYmVkQ2l0aXplbjsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIC8vIFdoZW4gdGhlIGJyaWRlZCBDaXRpemVuIGRlY2lkZXMgdG8gY29sbGVjdCBoaXMgZmVlcw0KICAgIGZ1bmN0aW9uIGNvbGxlY3RGZWUoKSB7DQogICAgICAgIGlmIChtc2cuc2VuZGVyID09IGJyaWJlZENpdGl6ZW4pIHsNCiAgICAgICAgICAgIGJyaWJlZENpdGl6ZW4uc2VuZChjb2xsZWN0ZWRGZWUpOw0KICAgICAgICB9DQogICAgfQ0KDQogICAgLy8gV2hlbiB0aGUgamVzdGVyIGNhbid0IGhhbmRsZSBpdCBhbnltb3JlLCBoZSBjYW4gZ2l2ZSBoaXMgcG9zaXRpb24gdG8gc29tZW9uZSBlbHNlDQogICAgZnVuY3Rpb24gbmV3SmVzdGVyKGFkZHJlc3MgbmV3SmVzdGVyKSB7DQogICAgICAgIGlmIChtc2cuc2VuZGVyID09IGplc3Rlcikgew0KICAgICAgICAgICAgamVzdGVyID0gbmV3SmVzdGVyOw0KICAgICAgICB9DQogICAgfSAgICAgICANCn0='