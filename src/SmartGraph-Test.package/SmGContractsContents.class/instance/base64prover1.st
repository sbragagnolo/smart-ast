base 64 content
base64prover1
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC4xMzsNCg0KbGlicmFyeSBTZXRzIHsNCiAgICAvLyBhZGRyZXNzIHNldA0KICAgIHN0cnVjdCBhZGRyZXNzU2V0IHsNCiAgICAgICAgYWRkcmVzc1tdIG1lbWJlcnM7DQogICAgICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gYm9vbCkgbWVtYmVyRXhpc3RzOw0KICAgICAgICBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQpIG1lbWJlckluZGV4Ow0KICAgIH0NCg0KICAgIGZ1bmN0aW9uIGluc2VydChhZGRyZXNzU2V0IHN0b3JhZ2Ugc2VsZiwgYWRkcmVzcyBvdGhlcikgew0KICAgICAgICBpZiAoIXNlbGYubWVtYmVyRXhpc3RzW290aGVyXSkgew0KICAgICAgICAgICAgc2VsZi5tZW1iZXJFeGlzdHNbb3RoZXJdID0gdHJ1ZTsNCiAgICAgICAgICAgIHNlbGYubWVtYmVySW5kZXhbb3RoZXJdID0gc2VsZi5tZW1iZXJzLmxlbmd0aDsNCiAgICAgICAgICAgIHNlbGYubWVtYmVycy5wdXNoKG90aGVyKTsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIGZ1bmN0aW9uIHJlbW92ZShhZGRyZXNzU2V0IHN0b3JhZ2Ugc2VsZiwgYWRkcmVzcyBvdGhlcikgew0KICAgICAgICBpZiAoc2VsZi5tZW1iZXJFeGlzdHNbb3RoZXJdKSAgew0KICAgICAgICAgICAgc2VsZi5tZW1iZXJFeGlzdHNbb3RoZXJdID0gZmFsc2U7DQogICAgICAgICAgICB1aW50IGluZGV4ID0gc2VsZi5tZW1iZXJJbmRleFtvdGhlcl07DQogICAgICAgICAgICAvLyBjaGFuZ2UgaW5kZXggb2YgbGFzdCB2YWx1ZSB0byBpbmRleCBvZiBvdGhlciANCiAgICAgICAgICAgIHNlbGYubWVtYmVySW5kZXhbc2VsZi5tZW1iZXJzW3NlbGYubWVtYmVycy5sZW5ndGggLSAxXV0gPSBpbmRleDsNCiAgICAgICAgICAgIC8vIGNvcHkgbGFzdCB2YWx1ZSBvdmVyIG90aGVyIGFuZCBkZWNyZW1lbnQgbGVuZ3RoDQogICAgICAgICAgICBzZWxmLm1lbWJlcnNbaW5kZXhdID0gc2VsZi5tZW1iZXJzW3NlbGYubWVtYmVycy5sZW5ndGggLSAxXTsNCiAgICAgICAgICAgIHNlbGYubWVtYmVycy5sZW5ndGgtLTsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIGZ1bmN0aW9uIGNvbnRhaW5zKGFkZHJlc3NTZXQgc3RvcmFnZSBzZWxmLCBhZGRyZXNzIG90aGVyKSByZXR1cm5zIChib29sKSB7DQogICAgICAgIHJldHVybiBzZWxmLm1lbWJlckV4aXN0c1tvdGhlcl07DQogICAgfQ0KDQogICAgZnVuY3Rpb24gbGVuZ3RoKGFkZHJlc3NTZXQgc3RvcmFnZSBzZWxmKSByZXR1cm5zICh1aW50MjU2KSB7DQogICAgICAgIHJldHVybiBzZWxmLm1lbWJlcnMubGVuZ3RoOw0KICAgIH0NCg0KDQogICAgLy8gdWludCBzZXQNCiAgICBzdHJ1Y3QgdWludFNldCB7DQogICAgICAgIHVpbnRbXSBtZW1iZXJzOw0KICAgICAgICBtYXBwaW5nICh1aW50ID0+IGJvb2wpIG1lbWJlckV4aXN0czsNCiAgICAgICAgbWFwcGluZyAodWludCA9PiB1aW50KSBtZW1iZXJJbmRleDsNCiAgICB9DQoNCiAgICBmdW5jdGlvbiBpbnNlcnQodWludFNldCBzdG9yYWdlIHNlbGYsIHVpbnQgb3RoZXIpIHsNCiAgICAgICAgaWYgKCFzZWxmLm1lbWJlckV4aXN0c1tvdGhlcl0pIHsNCiAgICAgICAgICAgIHNlbGYubWVtYmVyRXhpc3RzW290aGVyXSA9IHRydWU7DQogICAgICAgICAgICBzZWxmLm1lbWJlckluZGV4W290aGVyXSA9IHNlbGYubWVtYmVycy5sZW5ndGg7DQogICAgICAgICAgICBzZWxmLm1lbWJlcnMucHVzaChvdGhlcik7DQogICAgICAgIH0NCiAgICB9DQoNCiAgICBmdW5jdGlvbiByZW1vdmUodWludFNldCBzdG9yYWdlIHNlbGYsIHVpbnQgb3RoZXIpIHsNCiAgICAgICAgaWYgKHNlbGYubWVtYmVyRXhpc3RzW290aGVyXSkgIHsNCiAgICAgICAgICAgIHNlbGYubWVtYmVyRXhpc3RzW290aGVyXSA9IGZhbHNlOw0KICAgICAgICAgICAgdWludCBpbmRleCA9IHNlbGYubWVtYmVySW5kZXhbb3RoZXJdOw0KICAgICAgICAgICAgLy8gY2hhbmdlIGluZGV4IG9mIGxhc3QgdmFsdWUgdG8gaW5kZXggb2Ygb3RoZXIgDQogICAgICAgICAgICBzZWxmLm1lbWJlckluZGV4W3NlbGYubWVtYmVyc1tzZWxmLm1lbWJlcnMubGVuZ3RoIC0gMV1dID0gaW5kZXg7DQogICAgICAgICAgICAvLyBjb3B5IGxhc3QgdmFsdWUgb3ZlciBvdGhlciBhbmQgZGVjcmVtZW50IGxlbmd0aA0KICAgICAgICAgICAgc2VsZi5tZW1iZXJzW2luZGV4XSA9IHNlbGYubWVtYmVyc1tzZWxmLm1lbWJlcnMubGVuZ3RoIC0gMV07DQogICAgICAgICAgICBzZWxmLm1lbWJlcnMubGVuZ3RoLS07DQogICAgICAgIH0NCiAgICB9DQoNCiAgICBmdW5jdGlvbiBjb250YWlucyh1aW50U2V0IHN0b3JhZ2Ugc2VsZiwgdWludCBvdGhlcikgcmV0dXJucyAoYm9vbCkgew0KICAgICAgICByZXR1cm4gc2VsZi5tZW1iZXJFeGlzdHNbb3RoZXJdOw0KICAgIH0NCg0KICAgIGZ1bmN0aW9uIGxlbmd0aCh1aW50U2V0IHN0b3JhZ2Ugc2VsZikgcmV0dXJucyAodWludDI1Nikgew0KICAgICAgICByZXR1cm4gc2VsZi5tZW1iZXJzLmxlbmd0aDsNCiAgICB9DQoNCg0KICAgIC8vIHVpbnQ4IHNldA0KICAgIHN0cnVjdCB1aW50OFNldCB7DQogICAgICAgIHVpbnQ4W10gbWVtYmVyczsNCiAgICAgICAgbWFwcGluZyAodWludDggPT4gYm9vbCkgbWVtYmVyRXhpc3RzOw0KICAgICAgICBtYXBwaW5nICh1aW50OCA9PiB1aW50KSBtZW1iZXJJbmRleDsNCiAgICB9DQoNCiAgICBmdW5jdGlvbiBpbnNlcnQodWludDhTZXQgc3RvcmFnZSBzZWxmLCB1aW50OCBvdGhlcikgew0KICAgICAgICBpZiAoIXNlbGYubWVtYmVyRXhpc3RzW290aGVyXSkgew0KICAgICAgICAgICAgc2VsZi5tZW1iZXJFeGlzdHNbb3RoZXJdID0gdHJ1ZTsNCiAgICAgICAgICAgIHNlbGYubWVtYmVySW5kZXhbb3RoZXJdID0gc2VsZi5tZW1iZXJzLmxlbmd0aDsNCiAgICAgICAgICAgIHNlbGYubWVtYmVycy5wdXNoKG90aGVyKTsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIGZ1bmN0aW9uIHJlbW92ZSh1aW50OFNldCBzdG9yYWdlIHNlbGYsIHVpbnQ4IG90aGVyKSB7DQogICAgICAgIGlmIChzZWxmLm1lbWJlckV4aXN0c1tvdGhlcl0pICB7DQogICAgICAgICAgICBzZWxmLm1lbWJlckV4aXN0c1tvdGhlcl0gPSBmYWxzZTsNCiAgICAgICAgICAgIHVpbnQgaW5kZXggPSBzZWxmLm1lbWJlckluZGV4W290aGVyXTsNCiAgICAgICAgICAgIC8vIGNoYW5nZSBpbmRleCBvZiBsYXN0IHZhbHVlIHRvIGluZGV4IG9mIG90aGVyIA0KICAgICAgICAgICAgc2VsZi5tZW1iZXJJbmRleFtzZWxmLm1lbWJlcnNbc2VsZi5tZW1iZXJzLmxlbmd0aCAtIDFdXSA9IGluZGV4Ow0KICAgICAgICAgICAgLy8gY29weSBsYXN0IHZhbHVlIG92ZXIgb3RoZXIgYW5kIGRlY3JlbWVudCBsZW5ndGgNCiAgICAgICAgICAgIHNlbGYubWVtYmVyc1tpbmRleF0gPSBzZWxmLm1lbWJlcnNbc2VsZi5tZW1iZXJzLmxlbmd0aCAtIDFdOw0KICAgICAgICAgICAgc2VsZi5tZW1iZXJzLmxlbmd0aC0tOw0KICAgICAgICB9DQogICAgfQ0KDQogICAgZnVuY3Rpb24gY29udGFpbnModWludDhTZXQgc3RvcmFnZSBzZWxmLCB1aW50OCBvdGhlcikgcmV0dXJucyAoYm9vbCkgew0KICAgICAgICByZXR1cm4gc2VsZi5tZW1iZXJFeGlzdHNbb3RoZXJdOw0KICAgIH0NCg0KICAgIGZ1bmN0aW9uIGxlbmd0aCh1aW50OFNldCBzdG9yYWdlIHNlbGYpIHJldHVybnMgKHVpbnQyNTYpIHsNCiAgICAgICAgcmV0dXJuIHNlbGYubWVtYmVycy5sZW5ndGg7DQogICAgfQ0KDQoNCiAgICAvLyBpbnQgc2V0DQogICAgc3RydWN0IGludFNldCB7DQogICAgICAgIGludFtdIG1lbWJlcnM7DQogICAgICAgIG1hcHBpbmcgKGludCA9PiBib29sKSBtZW1iZXJFeGlzdHM7DQogICAgICAgIG1hcHBpbmcgKGludCA9PiB1aW50KSBtZW1iZXJJbmRleDsNCiAgICB9DQoNCiAgICBmdW5jdGlvbiBpbnNlcnQoaW50U2V0IHN0b3JhZ2Ugc2VsZiwgaW50IG90aGVyKSB7DQogICAgICAgIGlmICghc2VsZi5tZW1iZXJFeGlzdHNbb3RoZXJdKSB7DQogICAgICAgICAgICBzZWxmLm1lbWJlckV4aXN0c1tvdGhlcl0gPSB0cnVlOw0KICAgICAgICAgICAgc2VsZi5tZW1iZXJJbmRleFtvdGhlcl0gPSBzZWxmLm1lbWJlcnMubGVuZ3RoOw0KICAgICAgICAgICAgc2VsZi5tZW1iZXJzLnB1c2gob3RoZXIpOw0KICAgICAgICB9DQogICAgfQ0KDQogICAgZnVuY3Rpb24gcmVtb3ZlKGludFNldCBzdG9yYWdlIHNlbGYsIGludCBvdGhlcikgew0KICAgICAgICBpZiAoc2VsZi5tZW1iZXJFeGlzdHNbb3RoZXJdKSAgew0KICAgICAgICAgICAgc2VsZi5tZW1iZXJFeGlzdHNbb3RoZXJdID0gZmFsc2U7DQogICAgICAgICAgICB1aW50IGluZGV4ID0gc2VsZi5tZW1iZXJJbmRleFtvdGhlcl07DQogICAgICAgICAgICAvLyBjaGFuZ2UgaW5kZXggb2YgbGFzdCB2YWx1ZSB0byBpbmRleCBvZiBvdGhlciANCiAgICAgICAgICAgIHNlbGYubWVtYmVySW5kZXhbc2VsZi5tZW1iZXJzW3NlbGYubWVtYmVycy5sZW5ndGggLSAxXV0gPSBpbmRleDsNCiAgICAgICAgICAgIC8vIGNvcHkgbGFzdCB2YWx1ZSBvdmVyIG90aGVyIGFuZCBkZWNyZW1lbnQgbGVuZ3RoDQogICAgICAgICAgICBzZWxmLm1lbWJlcnNbaW5kZXhdID0gc2VsZi5tZW1iZXJzW3NlbGYubWVtYmVycy5sZW5ndGggLSAxXTsNCiAgICAgICAgICAgIHNlbGYubWVtYmVycy5sZW5ndGgtLTsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIGZ1bmN0aW9uIGNvbnRhaW5zKGludFNldCBzdG9yYWdlIHNlbGYsIGludCBvdGhlcikgcmV0dXJucyAoYm9vbCkgew0KICAgICAgICByZXR1cm4gc2VsZi5tZW1iZXJFeGlzdHNbb3RoZXJdOw0KICAgIH0NCg0KICAgIGZ1bmN0aW9uIGxlbmd0aChpbnRTZXQgc3RvcmFnZSBzZWxmKSByZXR1cm5zICh1aW50MjU2KSB7DQogICAgICAgIHJldHVybiBzZWxmLm1lbWJlcnMubGVuZ3RoOw0KICAgIH0NCg0KDQogICAgLy8gaW50OCBzZXQNCiAgICBzdHJ1Y3QgaW50OFNldCB7DQogICAgICAgIGludDhbXSBtZW1iZXJzOw0KICAgICAgICBtYXBwaW5nIChpbnQ4ID0+IGJvb2wpIG1lbWJlckV4aXN0czsNCiAgICAgICAgbWFwcGluZyAoaW50OCA9PiB1aW50KSBtZW1iZXJJbmRleDsNCiAgICB9DQoNCiAgICBmdW5jdGlvbiBpbnNlcnQoaW50OFNldCBzdG9yYWdlIHNlbGYsIGludDggb3RoZXIpIHsNCiAgICAgICAgaWYgKCFzZWxmLm1lbWJlckV4aXN0c1tvdGhlcl0pIHsNCiAgICAgICAgICAgIHNlbGYubWVtYmVyRXhpc3RzW290aGVyXSA9IHRydWU7DQogICAgICAgICAgICBzZWxmLm1lbWJlckluZGV4W290aGVyXSA9IHNlbGYubWVtYmVycy5sZW5ndGg7DQogICAgICAgICAgICBzZWxmLm1lbWJlcnMucHVzaChvdGhlcik7DQogICAgICAgIH0NCiAgICB9DQoNCiAgICBmdW5jdGlvbiByZW1vdmUoaW50OFNldCBzdG9yYWdlIHNlbGYsIGludDggb3RoZXIpIHsNCiAgICAgICAgaWYgKHNlbGYubWVtYmVyRXhpc3RzW290aGVyXSkgIHsNCiAgICAgICAgICAgIHNlbGYubWVtYmVyRXhpc3RzW290aGVyXSA9IGZhbHNlOw0KICAgICAgICAgICAgdWludCBpbmRleCA9IHNlbGYubWVtYmVySW5kZXhbb3RoZXJdOw0KICAgICAgICAgICAgLy8gY2hhbmdlIGluZGV4IG9mIGxhc3QgdmFsdWUgdG8gaW5kZXggb2Ygb3RoZXIgDQogICAgICAgICAgICBzZWxmLm1lbWJlckluZGV4W3NlbGYubWVtYmVyc1tzZWxmLm1lbWJlcnMubGVuZ3RoIC0gMV1dID0gaW5kZXg7DQogICAgICAgICAgICAvLyBjb3B5IGxhc3QgdmFsdWUgb3ZlciBvdGhlciBhbmQgZGVjcmVtZW50IGxlbmd0aA0KICAgICAgICAgICAgc2VsZi5tZW1iZXJzW2luZGV4XSA9IHNlbGYubWVtYmVyc1tzZWxmLm1lbWJlcnMubGVuZ3RoIC0gMV07DQogICAgICAgICAgICBzZWxmLm1lbWJlcnMubGVuZ3RoLS07DQogICAgICAgIH0NCiAgICB9DQoNCiAgICBmdW5jdGlvbiBjb250YWlucyhpbnQ4U2V0IHN0b3JhZ2Ugc2VsZiwgaW50OCBvdGhlcikgcmV0dXJucyAoYm9vbCkgew0KICAgICAgICByZXR1cm4gc2VsZi5tZW1iZXJFeGlzdHNbb3RoZXJdOw0KICAgIH0NCg0KICAgIGZ1bmN0aW9uIGxlbmd0aChpbnQ4U2V0IHN0b3JhZ2Ugc2VsZikgcmV0dXJucyAodWludDI1Nikgew0KICAgICAgICByZXR1cm4gc2VsZi5tZW1iZXJzLmxlbmd0aDsNCiAgICB9DQoNCg0KICAgIC8vIGJ5dGUgc2V0DQogICAgc3RydWN0IGJ5dGVTZXQgew0KICAgICAgICBieXRlW10gbWVtYmVyczsNCiAgICAgICAgbWFwcGluZyAoYnl0ZSA9PiBib29sKSBtZW1iZXJFeGlzdHM7DQogICAgICAgIG1hcHBpbmcgKGJ5dGUgPT4gdWludCkgbWVtYmVySW5kZXg7DQogICAgfQ0KDQogICAgZnVuY3Rpb24gaW5zZXJ0KGJ5dGVTZXQgc3RvcmFnZSBzZWxmLCBieXRlIG90aGVyKSB7DQogICAgICAgIGlmICghc2VsZi5tZW1iZXJFeGlzdHNbb3RoZXJdKSB7DQogICAgICAgICAgICBzZWxmLm1lbWJlckV4aXN0c1tvdGhlcl0gPSB0cnVlOw0KICAgICAgICAgICAgc2VsZi5tZW1iZXJJbmRleFtvdGhlcl0gPSBzZWxmLm1lbWJlcnMubGVuZ3RoOw0KICAgICAgICAgICAgc2VsZi5tZW1iZXJzLnB1c2gob3RoZXIpOw0KICAgICAgICB9DQogICAgfQ0KDQogICAgZnVuY3Rpb24gcmVtb3ZlKGJ5dGVTZXQgc3RvcmFnZSBzZWxmLCBieXRlIG90aGVyKSB7DQogICAgICAgIGlmIChzZWxmLm1lbWJlckV4aXN0c1tvdGhlcl0pICB7DQogICAgICAgICAgICBzZWxmLm1lbWJlckV4aXN0c1tvdGhlcl0gPSBmYWxzZTsNCiAgICAgICAgICAgIHVpbnQgaW5kZXggPSBzZWxmLm1lbWJlckluZGV4W290aGVyXTsNCiAgICAgICAgICAgIC8vIGNoYW5nZSBpbmRleCBvZiBsYXN0IHZhbHVlIHRvIGluZGV4IG9mIG90aGVyIA0KICAgICAgICAgICAgc2VsZi5tZW1iZXJJbmRleFtzZWxmLm1lbWJlcnNbc2VsZi5tZW1iZXJzLmxlbmd0aCAtIDFdXSA9IGluZGV4Ow0KICAgICAgICAgICAgLy8gY29weSBsYXN0IHZhbHVlIG92ZXIgb3RoZXIgYW5kIGRlY3JlbWVudCBsZW5ndGgNCiAgICAgICAgICAgIHNlbGYubWVtYmVyc1tpbmRleF0gPSBzZWxmLm1lbWJlcnNbc2VsZi5tZW1iZXJzLmxlbmd0aCAtIDFdOw0KICAgICAgICAgICAgc2VsZi5tZW1iZXJzLmxlbmd0aC0tOw0KICAgICAgICB9DQogICAgfQ0KDQogICAgZnVuY3Rpb24gY29udGFpbnMoYnl0ZVNldCBzdG9yYWdlIHNlbGYsIGJ5dGUgb3RoZXIpIHJldHVybnMgKGJvb2wpIHsNCiAgICAgICAgcmV0dXJuIHNlbGYubWVtYmVyRXhpc3RzW290aGVyXTsNCiAgICB9DQoNCiAgICBmdW5jdGlvbiBsZW5ndGgoYnl0ZVNldCBzdG9yYWdlIHNlbGYpIHJldHVybnMgKHVpbnQyNTYpIHsNCiAgICAgICAgcmV0dXJuIHNlbGYubWVtYmVycy5sZW5ndGg7DQogICAgfQ0KDQoNCiAgICAvLyBieXRlczMyIHNldA0KICAgIHN0cnVjdCBieXRlczMyU2V0IHsNCiAgICAgICAgYnl0ZXMzMltdIG1lbWJlcnM7DQogICAgICAgIG1hcHBpbmcgKGJ5dGVzMzIgPT4gYm9vbCkgbWVtYmVyRXhpc3RzOw0KICAgICAgICBtYXBwaW5nIChieXRlczMyID0+IHVpbnQpIG1lbWJlckluZGV4Ow0KICAgIH0NCg0KICAgIGZ1bmN0aW9uIGluc2VydChieXRlczMyU2V0IHN0b3JhZ2Ugc2VsZiwgYnl0ZXMzMiBvdGhlcikgew0KICAgICAgICBpZiAoIXNlbGYubWVtYmVyRXhpc3RzW290aGVyXSkgew0KICAgICAgICAgICAgc2VsZi5tZW1iZXJFeGlzdHNbb3RoZXJdID0gdHJ1ZTsNCiAgICAgICAgICAgIHNlbGYubWVtYmVySW5kZXhbb3RoZXJdID0gc2VsZi5tZW1iZXJzLmxlbmd0aDsNCiAgICAgICAgICAgIHNlbGYubWVtYmVycy5wdXNoKG90aGVyKTsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIGZ1bmN0aW9uIHJlbW92ZShieXRlczMyU2V0IHN0b3JhZ2Ugc2VsZiwgYnl0ZXMzMiBvdGhlcikgew0KICAgICAgICBpZiAoc2VsZi5tZW1iZXJFeGlzdHNbb3RoZXJdKSAgew0KICAgICAgICAgICAgc2VsZi5tZW1iZXJFeGlzdHNbb3RoZXJdID0gZmFsc2U7DQogICAgICAgICAgICB1aW50IGluZGV4ID0gc2VsZi5tZW1iZXJJbmRleFtvdGhlcl07DQogICAgICAgICAgICAvLyBjaGFuZ2UgaW5kZXggb2YgbGFzdCB2YWx1ZSB0byBpbmRleCBvZiBvdGhlciANCiAgICAgICAgICAgIHNlbGYubWVtYmVySW5kZXhbc2VsZi5tZW1iZXJzW3NlbGYubWVtYmVycy5sZW5ndGggLSAxXV0gPSBpbmRleDsNCiAgICAgICAgICAgIC8vIGNvcHkgbGFzdCB2YWx1ZSBvdmVyIG90aGVyIGFuZCBkZWNyZW1lbnQgbGVuZ3RoDQogICAgICAgICAgICBzZWxmLm1lbWJlcnNbaW5kZXhdID0gc2VsZi5tZW1iZXJzW3NlbGYubWVtYmVycy5sZW5ndGggLSAxXTsNCiAgICAgICAgICAgIHNlbGYubWVtYmVycy5sZW5ndGgtLTsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIGZ1bmN0aW9uIGNvbnRhaW5zKGJ5dGVzMzJTZXQgc3RvcmFnZSBzZWxmLCBieXRlczMyIG90aGVyKSByZXR1cm5zIChib29sKSB7DQogICAgICAgIHJldHVybiBzZWxmLm1lbWJlckV4aXN0c1tvdGhlcl07DQogICAgfQ0KDQogICAgZnVuY3Rpb24gbGVuZ3RoKGJ5dGVzMzJTZXQgc3RvcmFnZSBzZWxmKSByZXR1cm5zICh1aW50MjU2KSB7DQogICAgICAgIHJldHVybiBzZWxmLm1lbWJlcnMubGVuZ3RoOw0KICAgIH0NCn0NCg0KY29udHJhY3QgUHJvdmVyIHsNCiAgICAvLyBhdHRhY2ggbGlicmFyeQ0KICAgIHVzaW5nIFNldHMgZm9yICo7DQoNCg0KICAgIC8vIHN0b3JhZ2UgdmFycw0KICAgIGFkZHJlc3Mgb3duZXI7DQogICAgU2V0cy5hZGRyZXNzU2V0IGludGVybmFsIHVzZXJzOw0KICAgIG1hcHBpbmcgKGFkZHJlc3MgPT4gVXNlckFjY291bnQpIGludGVybmFsIGxlZGdlcjsNCiAgICANCiAgICANCiAgICAvLyBzdHJ1Y3RzDQogICAgc3RydWN0IFVzZXJBY2NvdW50IHsNCiAgICAgICAgU2V0cy5ieXRlczMyU2V0IGhhc2hlczsNCiAgICAgICAgbWFwcGluZyAoYnl0ZXMzMiA9PiBFbnRyeSkgZW50cmllczsNCiAgICB9DQoNCiAgICBzdHJ1Y3QgRW50cnkgew0KICAgICAgICB1aW50MjU2IHRpbWU7DQogICAgICAgIHVpbnQyNTYgdmFsdWU7DQogICAgfQ0KDQoNCiAgICAvLyBjb25zdHJ1Y3Rvcg0KICAgIGZ1bmN0aW9uIFByb3ZlcigpIHsNCiAgICAgICAgb3duZXIgPSBtc2cuc2VuZGVyOw0KICAgIH0NCiAgICANCiAgICANCiAgICAvLyBmYWxsYmFjazogdW5tYXRjaGVkIHRyYW5zYWN0aW9ucyB3aWxsIGJlIHJldHVybmVkDQogICAgZnVuY3Rpb24gKCkgew0KICAgICAgICByZXZlcnQoKTsNCiAgICB9DQoNCg0KICAgIC8vIG1vZGlmaWVyIHRvIGNoZWNrIGlmIHNlbmRlciBoYXMgYW4gYWNjb3VudA0KICAgIG1vZGlmaWVyIGhhc0FjY291bnQoKSB7DQogICAgICAgIGFzc2VydChsZWRnZXJbbXNnLnNlbmRlcl0uaGFzaGVzLmxlbmd0aCgpID49IDEpOw0KICAgICAgICBfOw0KICAgIH0NCg0KDQogICAgLy8gZXh0ZXJuYWwgZnVuY3Rpb25zDQogICAgLy8gcHJvdmluZw0KICAgIGZ1bmN0aW9uIHByb3ZlSXQoYWRkcmVzcyB0YXJnZXQsIGJ5dGVzMzIgZGF0YUhhc2gpIGV4dGVybmFsIGNvbnN0YW50DQogICAgICAgIHJldHVybnMgKGJvb2wgcHJvdmVkLCB1aW50MjU2IHRpbWUsIHVpbnQyNTYgdmFsdWUpDQogICAgew0KICAgICAgICByZXR1cm4gc3RhdHVzKHRhcmdldCwgZGF0YUhhc2gpOw0KICAgIH0NCg0KICAgIGZ1bmN0aW9uIHByb3ZlSXQoYWRkcmVzcyB0YXJnZXQsIHN0cmluZyBkYXRhU3RyaW5nKSBleHRlcm5hbCBjb25zdGFudA0KICAgICAgICByZXR1cm5zIChib29sIHByb3ZlZCwgdWludDI1NiB0aW1lLCB1aW50MjU2IHZhbHVlKQ0KICAgIHsNCiAgICAgICAgcmV0dXJuIHN0YXR1cyh0YXJnZXQsIHNoYTMoZGF0YVN0cmluZykpOw0KICAgIH0NCiAgICANCiAgICAvLyBhbGxvdyBhY2Nlc3MgdG8gb3VyIHN0cnVjdHMgdmlhIGZ1bmN0aW9ucyB3aXRoIGNvbnZlbmllbnQgcmV0dXJuIHZhbHVlcw0KICAgIGZ1bmN0aW9uIHVzZXJzR2V0dGVyKCkgcHVibGljIGNvbnN0YW50DQogICAgICAgIHJldHVybnMgKHVpbnQyNTYgbnVtYmVyX3VuaXF1ZV9hZGRyZXNzZXMsIGFkZHJlc3NbXSB1bmlxdWVfYWRkcmVzc2VzKQ0KICAgIHsNCiAgICAgICAgcmV0dXJuICh1c2Vycy5sZW5ndGgoKSwgdXNlcnMubWVtYmVycyk7DQogICAgfQ0KDQogICAgZnVuY3Rpb24gdXNlckVudHJpZXMoYWRkcmVzcyB0YXJnZXQpIGV4dGVybmFsIGNvbnN0YW50IHJldHVybnMgKGJ5dGVzMzJbXSkgew0KICAgICAgICByZXR1cm4gbGVkZ2VyW3RhcmdldF0uaGFzaGVzLm1lbWJlcnM7DQogICAgfQ0KICAgIA0KICAgIA0KICAgIC8vIHB1YmxpYyBmdW5jdGlvbnMNCiAgICAvLyBhZGRpbmcgZW50cmllcw0KICAgIGZ1bmN0aW9uIGFkZEVudHJ5KGJ5dGVzMzIgZGF0YUhhc2gpIHBheWFibGUgew0KICAgICAgICBfYWRkRW50cnkoZGF0YUhhc2gpOw0KICAgIH0NCg0KICAgIGZ1bmN0aW9uIGFkZEVudHJ5KHN0cmluZyBkYXRhU3RyaW5nKSBwYXlhYmxlIHsNCiAgICAgICAgX2FkZEVudHJ5KHNoYTMoZGF0YVN0cmluZykpOw0KICAgIH0NCg0KICAgIC8vIGRlbGV0aW5nIGVudHJpZXMNCiAgICBmdW5jdGlvbiBkZWxldGVFbnRyeShieXRlczMyIGRhdGFIYXNoKSBoYXNBY2NvdW50IHsNCiAgICAgICAgX2RlbGV0ZUVudHJ5KGRhdGFIYXNoKTsNCiAgICB9DQoNCiAgICBmdW5jdGlvbiBkZWxldGVFbnRyeShzdHJpbmcgZGF0YVN0cmluZykgaGFzQWNjb3VudCB7DQogICAgICAgIF9kZWxldGVFbnRyeShzaGEzKGRhdGFTdHJpbmcpKTsNCiAgICB9DQogICAgDQogICAgLy8gYWxsb3cgb3duZXIgdG8gZGVsZXRlIGNvbnRyYWN0IGlmIG5vIGFjY291bnRzIGV4aXN0DQogICAgZnVuY3Rpb24gc2VsZkRlc3RydWN0KCkgew0KICAgICAgICBpZiAoKG1zZy5zZW5kZXIgPT0gb3duZXIpICYmICh1c2Vycy5sZW5ndGgoKSA9PSAwKSkgew0KICAgICAgICAgICAgc2VsZmRlc3RydWN0KG93bmVyKTsNCiAgICAgICAgfQ0KICAgIH0NCg0KDQogICAgLy8gaW50ZXJuYWwgZnVuY3Rpb25zDQogICAgZnVuY3Rpb24gX2FkZEVudHJ5KGJ5dGVzMzIgZGF0YUhhc2gpIGludGVybmFsIHsNCiAgICAgICAgLy8gZW5zdXJlIHRoZSBlbnRyeSBkb2Vzbid0IGV4aXN0DQogICAgICAgIGFzc2VydCghbGVkZ2VyW21zZy5zZW5kZXJdLmhhc2hlcy5jb250YWlucyhkYXRhSGFzaCkpOw0KICAgICAgICAvLyB1cGRhdGUgVXNlckFjY291bnQgKGhhc2hlcyB0aGVuIGVudHJpZXMpDQogICAgICAgIGxlZGdlclttc2cuc2VuZGVyXS5oYXNoZXMuaW5zZXJ0KGRhdGFIYXNoKTsNCiAgICAgICAgbGVkZ2VyW21zZy5zZW5kZXJdLmVudHJpZXNbZGF0YUhhc2hdID0gRW50cnkobm93LCBtc2cudmFsdWUpOw0KICAgICAgICAvLyBhZGQgc2VuZGVyIHRvIHVzZXJsaXN0DQogICAgICAgIHVzZXJzLmluc2VydChtc2cuc2VuZGVyKTsNCiAgICB9DQoNCiAgICBmdW5jdGlvbiBfZGVsZXRlRW50cnkoYnl0ZXMzMiBkYXRhSGFzaCkgaW50ZXJuYWwgew0KICAgICAgICAvLyBlbnN1cmUgdGhlIGVudHJ5IGRvZXMgZXhpc3QNCiAgICAgICAgYXNzZXJ0KGxlZGdlclttc2cuc2VuZGVyXS5oYXNoZXMuY29udGFpbnMoZGF0YUhhc2gpKTsNCiAgICAgICAgdWludDI1NiByZWJhdGUgPSBsZWRnZXJbbXNnLnNlbmRlcl0uZW50cmllc1tkYXRhSGFzaF0udmFsdWU7DQogICAgICAgIC8vIHVwZGF0ZSBVc2VyQWNjb3VudCAoaGFzaGVzIHRoZW4gZW50cmllcykNCiAgICAgICAgbGVkZ2VyW21zZy5zZW5kZXJdLmhhc2hlcy5yZW1vdmUoZGF0YUhhc2gpOw0KICAgICAgICBkZWxldGUgbGVkZ2VyW21zZy5zZW5kZXJdLmVudHJpZXNbZGF0YUhhc2hdOw0KICAgICAgICAvLyBzZW5kIHRoZSByZWJhdGUNCiAgICAgICAgaWYgKHJlYmF0ZSA+IDApIHsNCiAgICAgICAgICAgIG1zZy5zZW5kZXIudHJhbnNmZXIocmViYXRlKTsNCiAgICAgICAgfQ0KICAgICAgICAvLyBkZWxldGUgZnJvbSB1c2VybGlzdCBpZiB0aGlzIHdhcyB0aGUgdXNlcidzIGxhc3QgZW50cnkNCiAgICAgICAgaWYgKGxlZGdlclttc2cuc2VuZGVyXS5oYXNoZXMubGVuZ3RoKCkgPT0gMCkgew0KICAgICAgICAgICAgdXNlcnMucmVtb3ZlKG1zZy5zZW5kZXIpOw0KICAgICAgICB9DQogICAgfQ0KDQogICAgLy8gcmV0dXJuIHN0YXR1cyBvZiBhcmJpdHJhcnkgYWRkcmVzcyBhbmQgZGF0YUhhc2gNCiAgICBmdW5jdGlvbiBzdGF0dXMoYWRkcmVzcyB0YXJnZXQsIGJ5dGVzMzIgZGF0YUhhc2gpIGludGVybmFsIGNvbnN0YW50DQogICAgICAgIHJldHVybnMgKGJvb2wgcHJvdmVkLCB1aW50MjU2IHRpbWUsIHVpbnQyNTYgdmFsdWUpDQogICAgew0KICAgICAgICByZXR1cm4gKGxlZGdlclttc2cuc2VuZGVyXS5oYXNoZXMuY29udGFpbnMoZGF0YUhhc2gpLA0KICAgICAgICAgICAgICAgIGxlZGdlclt0YXJnZXRdLmVudHJpZXNbZGF0YUhhc2hdLnRpbWUsDQogICAgICAgICAgICAgICAgbGVkZ2VyW3RhcmdldF0uZW50cmllc1tkYXRhSGFzaF0udmFsdWUpOw0KICAgIH0NCn0='