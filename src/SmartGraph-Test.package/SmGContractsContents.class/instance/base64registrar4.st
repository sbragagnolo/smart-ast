base 64 content
base64registrar4
	^'Ly8gQ29weXJpZ2h0IChjKSAyMDE2IENocm9uaWNsZWQsIEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC4NCi8vIGh0dHA6Ly9leHBsb3Jlci5jaHJvbmljbGVkLm9yZw0KLy8gaHR0cDovL2RlbW8uY2hyb25pY2xlZC5vcmcNCi8vIGh0dHA6Ly9jaHJvbmljbGVkLm9yZw0KDQpjb250cmFjdCBSZWdpc3RyYXIgew0KICAgIGFkZHJlc3MgcHVibGljIHJlZ2lzdHJhcjsNCg0KICAgIC8qKg0KDQogICAgKiBDcmVhdGVkIGV2ZW50LCBnZXRzIHRyaWdnZXJlZCB3aGVuIGEgbmV3IHJlZ2lzdHJhbnQgZ2V0cyBjcmVhdGVkDQogICAgKiBldmVudA0KICAgICogQHBhcmFtIHJlZ2lzdHJhbnQgLSBUaGUgcmVnaXN0cmFudCBhZGRyZXNzLg0KICAgICogQHBhcmFtIHJlZ2lzdHJhciAtIFRoZSByZWdpc3RyYXIgYWRkcmVzcy4NCiAgICAqIEBwYXJhbSBkYXRhIC0gVGhlIGRhdGEgb2YgdGhlIHJlZ2lzdHJhbnQuDQogICAgKi8NCiAgICBldmVudCBDcmVhdGVkKGFkZHJlc3MgaW5kZXhlZCByZWdpc3RyYW50LCBhZGRyZXNzIHJlZ2lzdHJhciwgYnl0ZXMgZGF0YSk7DQoNCiAgICAvKioNCiAgICAqIFVwZGF0ZWQgZXZlbnQsIGdldHMgdHJpZ2dlcmVkIHdoZW4gYSBuZXcgcmVnaXN0cmFudCBpZCBVcGRhdGVkDQogICAgKiBldmVudA0KICAgICogQHBhcmFtIHJlZ2lzdHJhbnQgLSBUaGUgcmVnaXN0cmFudCBhZGRyZXNzLg0KICAgICogQHBhcmFtIHJlZ2lzdHJhciAtIFRoZSByZWdpc3RyYXIgYWRkcmVzcy4NCiAgICAqIEBwYXJhbSBkYXRhIC0gVGhlIGRhdGEgb2YgdGhlIHJlZ2lzdHJhbnQuDQogICAgKi8NCiAgICBldmVudCBVcGRhdGVkKGFkZHJlc3MgaW5kZXhlZCByZWdpc3RyYW50LCBhZGRyZXNzIHJlZ2lzdHJhciwgYnl0ZXMgZGF0YSwgYm9vbCBhY3RpdmUpOw0KDQogICAgLyoqDQogICAgKiBFcnJvciBldmVudC4NCiAgICAqIGV2ZW50DQogICAgKiBAcGFyYW0gY29kZSAtIFRoZSBlcnJvciBjb2RlLg0KICAgICogMTogUGVybWlzc2lvbiBkZW5pZWQuDQogICAgKiAyOiBEdXBsaWNhdGUgUmVnaXN0cmFudCBhZGRyZXNzLg0KICAgICogMzogTm8gc3VjaCBSZWdpc3RyYW50Lg0KICAgICovDQogICAgZXZlbnQgRXJyb3IodWludCBjb2RlKTsNCg0KICAgIHN0cnVjdCBSZWdpc3RyYW50IHsNCiAgICAgICAgYWRkcmVzcyBhZGRyOw0KICAgICAgICBieXRlcyBkYXRhOw0KICAgICAgICBib29sIGFjdGl2ZTsNCiAgICB9DQoNCiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gdWludCkgcHVibGljIHJlZ2lzdHJhbnRJbmRleDsNCiAgICBSZWdpc3RyYW50W10gcHVibGljIHJlZ2lzdHJhbnRzOw0KDQogICAgLyoqDQogICAgKiBGdW5jdGlvbiBjYW4ndCBoYXZlIGV0aGVyLg0KICAgICogbW9kaWZpZXINCiAgICAqLw0KICAgIG1vZGlmaWVyIG5vRXRoZXIoKSB7DQogICAgICAgIGlmIChtc2cudmFsdWUgPiAwKSB0aHJvdzsNCiAgICAgICAgXzsNCiAgICB9DQoNCiAgICBtb2RpZmllciBpc1JlZ2lzdHJhcigpIHsNCiAgICAgIGlmIChtc2cuc2VuZGVyICE9IHJlZ2lzdHJhcikgew0KICAgICAgICBFcnJvcigxKTsNCiAgICAgICAgcmV0dXJuOw0KICAgICAgfQ0KICAgICAgZWxzZSB7DQogICAgICAgIF87DQogICAgICB9DQogICAgfQ0KDQogICAgLyoqDQogICAgKiBDb25zdHJ1Y3QgcmVnaXN0cnkgd2l0aCBhbmQgc3RhcnRpbmcgcmVnaXN0cmFudHMgbGVuZ2h0IG9mIG9uZSwgYW5kIHJlZ2lzdHJhciBhcyBtc2cuc2VuZGVyDQogICAgKiBjb25zdHJ1Y3Rvcg0KICAgICovDQogICAgZnVuY3Rpb24gUmVnaXN0cmFyKCkgew0KICAgICAgICByZWdpc3RyYXIgPSBtc2cuc2VuZGVyOw0KICAgICAgICByZWdpc3RyYW50cy5sZW5ndGgrKzsNCiAgICB9DQoNCiAgICAvKioNCiAgICAqIEFkZCBhIHJlZ2lzdHJhbnQsIG9ubHkgcmVnaXN0cmFyIGFsbG93ZWQNCiAgICAqIHB1YmxpY19mdW5jdGlvbg0KICAgICogQHBhcmFtIF9yZWdpc3RyYW50IC0gVGhlIHJlZ2lzdHJhbnQgYWRkcmVzcy4NCiAgICAqIEBwYXJhbSBfZGF0YSAtIFRoZSByZWdpc3RyYW50IGRhdGEgc3RyaW5nLg0KICAgICovDQogICAgZnVuY3Rpb24gYWRkKGFkZHJlc3MgX3JlZ2lzdHJhbnQsIGJ5dGVzIF9kYXRhKSBpc1JlZ2lzdHJhciBub0V0aGVyIHJldHVybnMgKGJvb2wpIHsNCiAgICAgICAgaWYgKHJlZ2lzdHJhbnRJbmRleFtfcmVnaXN0cmFudF0gPiAwKSB7DQogICAgICAgICAgICBFcnJvcigyKTsgLy8gRHVwbGljYXRlIHJlZ2lzdHJhbnQNCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgfQ0KICAgICAgICB1aW50IHBvcyA9IHJlZ2lzdHJhbnRzLmxlbmd0aCsrOw0KICAgICAgICByZWdpc3RyYW50c1twb3NdID0gUmVnaXN0cmFudChfcmVnaXN0cmFudCwgX2RhdGEsIHRydWUpOw0KICAgICAgICByZWdpc3RyYW50SW5kZXhbX3JlZ2lzdHJhbnRdID0gcG9zOw0KICAgICAgICBDcmVhdGVkKF9yZWdpc3RyYW50LCBtc2cuc2VuZGVyLCBfZGF0YSk7DQogICAgICAgIHJldHVybiB0cnVlOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICogRWRpdCBhIHJlZ2lzdHJhbnQsIG9ubHkgcmVnaXN0cmFyIGFsbG93ZWQNCiAgICAqIHB1YmxpY19mdW5jdGlvbg0KICAgICogQHBhcmFtIF9yZWdpc3RyYW50IC0gVGhlIHJlZ2lzdHJhbnQgYWRkcmVzcy4NCiAgICAqIEBwYXJhbSBfZGF0YSAtIFRoZSByZWdpc3RyYW50IGRhdGEgc3RyaW5nLg0KICAgICovDQogICAgZnVuY3Rpb24gZWRpdChhZGRyZXNzIF9yZWdpc3RyYW50LCBieXRlcyBfZGF0YSwgYm9vbCBfYWN0aXZlKSBpc1JlZ2lzdHJhciBub0V0aGVyIHJldHVybnMgKGJvb2wpIHsNCiAgICAgICAgaWYgKHJlZ2lzdHJhbnRJbmRleFtfcmVnaXN0cmFudF0gPT0gMCkgew0KICAgICAgICAgICAgRXJyb3IoMyk7IC8vIE5vIHN1Y2ggcmVnaXN0cmFudA0KICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICB9DQogICAgICAgIFJlZ2lzdHJhbnQgcmVnaXN0cmFudCA9IHJlZ2lzdHJhbnRzW3JlZ2lzdHJhbnRJbmRleFtfcmVnaXN0cmFudF1dOw0KICAgICAgICByZWdpc3RyYW50LmRhdGEgPSBfZGF0YTsNCiAgICAgICAgcmVnaXN0cmFudC5hY3RpdmUgPSBfYWN0aXZlOw0KICAgICAgICBVcGRhdGVkKF9yZWdpc3RyYW50LCBtc2cuc2VuZGVyLCBfZGF0YSwgX2FjdGl2ZSk7DQogICAgICAgIHJldHVybiB0cnVlOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICogU2V0IG5ldyByZWdpc3RyYXIgYWRkcmVzcywgb25seSByZWdpc3RyYXIgYWxsb3dlZA0KICAgICogcHVibGljX2Z1bmN0aW9uDQogICAgKiBAcGFyYW0gX3JlZ2lzdHJhciAtIFRoZSBuZXcgcmVnaXN0cmFyIGFkZHJlc3MuDQogICAgKi8NCiAgICBmdW5jdGlvbiBzZXROZXh0UmVnaXN0cmFyKGFkZHJlc3MgX3JlZ2lzdHJhcikgaXNSZWdpc3RyYXIgbm9FdGhlciByZXR1cm5zIChib29sKSB7DQogICAgICAgIHJlZ2lzdHJhciA9IF9yZWdpc3RyYXI7DQogICAgICAgIHJldHVybiB0cnVlOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICogR2V0IGlmIGEgcmVnc2l0cmFudCBpcyBhY3RpdmUgb3Igbm90Lg0KICAgICogY29uc3RhbnRfZnVuY3Rpb24NCiAgICAqIEBwYXJhbSBfcmVnaXN0cmFudCAtIFRoZSByZWdpc3RyYW50IGFkZHJlc3MuDQogICAgKi8NCiAgICBmdW5jdGlvbiBpc0FjdGl2ZVJlZ2lzdHJhbnQoYWRkcmVzcyBfcmVnaXN0cmFudCkgY29uc3RhbnQgcmV0dXJucyAoYm9vbCkgew0KICAgICAgICB1aW50IHBvcyA9IHJlZ2lzdHJhbnRJbmRleFtfcmVnaXN0cmFudF07DQogICAgICAgIHJldHVybiAocG9zID4gMCAmJiByZWdpc3RyYW50c1twb3NdLmFjdGl2ZSk7DQogICAgfQ0KDQogICAgLyoqDQogICAgKiBHZXQgYWxsIHRoZSByZWdpc3RyYW50cy4NCiAgICAqIGNvbnN0YW50X2Z1bmN0aW9uDQogICAgKi8NCiAgICBmdW5jdGlvbiBnZXRSZWdpc3RyYW50cygpIGNvbnN0YW50IHJldHVybnMgKGFkZHJlc3NbXSkgew0KICAgICAgICBhZGRyZXNzW10gbWVtb3J5IHJlc3VsdCA9IG5ldyBhZGRyZXNzW10ocmVnaXN0cmFudHMubGVuZ3RoLTEpOw0KICAgICAgICBmb3IgKHVpbnQgaiA9IDE7IGogPCByZWdpc3RyYW50cy5sZW5ndGg7IGorKykgew0KICAgICAgICAgICAgcmVzdWx0W2otMV0gPSByZWdpc3RyYW50c1tqXS5hZGRyOw0KICAgICAgICB9DQogICAgICAgIHJldHVybiByZXN1bHQ7DQogICAgfQ0KDQogICAgLyoqDQogICAgKiBGdW5jdGlvbiB0byByZWplY3QgdmFsdWUgc2VuZHMgdG8gdGhlIGNvbnRyYWN0Lg0KICAgICogZmFsbGJhY2tfZnVuY3Rpb24NCiAgICAqLw0KICAgIGZ1bmN0aW9uICgpIG5vRXRoZXIge30NCg0KICAgIC8qKg0KICAgICogRGVzY3RydWN0IHRoZSBzbWFydCBjb250cmFjdC4gU2luY2UgdGhpcyBpcyBmaXJzdCwgYWxwaGEgcmVsZWFzZSBvZiBPcGVuIFJlZ2lzdHJ5IGZvciBJb1QsIHVwZGF0ZWQgdmVyc2lvbnMgd2lsbCBmb2xsb3cuDQogICAgKiBSZWdpc3RyeSdzIGRpc2NvbnRpbnVlIG11c3QgYmUgZXhlY3V0ZWQgZmlyc3QuDQogICAgKi8NCiAgICBmdW5jdGlvbiBkaXNjb250aW51ZSgpIGlzUmVnaXN0cmFyIG5vRXRoZXIgew0KICAgICAgc2VsZmRlc3RydWN0KG1zZy5zZW5kZXIpOw0KICAgIH0NCn0='