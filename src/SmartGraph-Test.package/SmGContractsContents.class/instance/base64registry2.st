base 64 content
base64registry2
	^'Ly8gQSBuYW1lIHJlZ2lzdHJ5IGluIEV0aGVyZXVtDQoNCi8vICJSZWFsIiBhdHRlbXB0cyB0byBhIG5hbWUgcmVnaXN0cnkgd2l0aCBFdGhlcmV1bToNCi8vIDxodHRwOi8vZXRoZXJpZC5vcmcvPiA8aHR0cHM6Ly9naXRodWIuY29tL3NpbmtpbmctcG9pbnQvZG5zMi8+DQoNCi8vIFRPRE86IHVzZSB0aGUgcmVnaXN0cnkgaW50ZXJmYWNlIGRlc2NyaWJlZCBpbg0KLy8gPGh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bS93aWtpL3dpa2kvU3RhbmRhcmRpemVkX0NvbnRyYWN0X0FQSXM+Pw0KDQovLyBTdGFuZGFyZCBzdHJpbmdzIGFyZSBwb29yLCB3ZSBuZWVkIGFuIGV4dGVuc2lvbiBsaWJyYXJ5LA0KLy8gZ2l0aHViLmNvbS9BcmFjaG5pZC9zb2xpZGl0eS1zdHJpbmd1dGlscy9zdHJpbmdzLnNvbCBUT0RPOiB1c2UgaXQgYXMgc29vbiBhcyBodHRwczovL2dpdGh1Yi5jb20vQXJhY2huaWQvc29saWRpdHktc3RyaW5ndXRpbHMvaXNzdWVzLzEgaXMgc29sdmVkLg0KLy8gaW1wb3J0ICJzdHJpbmdzLnNvbCI7DQoNCmNvbnRyYWN0IFJlZ2lzdHJ5IHsNCg0KICAvLyB1c2luZyBzdHJpbmdzIGZvciAqOyAvLyBUT0RPIHNlZSBhYm92ZQ0KDQogIGFkZHJlc3MgcHVibGljIG5pYzsgLy8gVGhlIE5ldHdvcmsgSW5mb3JtYXRpb24gQ2VudGVyDQogIA0KICBzdHJ1Y3QgUmVjb3JkIHsNCiAgICBzdHJpbmcgdmFsdWU7IC8vIElQIGFkZHJlc3NlcywgZW1haWxzLCBldGMgVE9ETyBhY2NlcHQgYW4gYXJyYXkNCgkJICAgICAvLyBhcyBzb29uIGFzIHdlIGhhdmUgYSBzdHJpbmdzIGxpYnJhcnkgdG8NCgkJICAgICAvLyBzZXJpYWxpemUvZGVzZXJpYWxpemUuIFRPRE8gdHlwZSB0aGUgdmFsdWVzIHdpdGggYW4gRW51bQ0KICAgIGFkZHJlc3MgaG9sZGVyOw0KICAgIGJvb2wgZXhpc3RzOyAvLyBPciBhIG1vcmUgZGV0YWlsZWQgc3RhdGUsIHdpdGggYW4gZW51bT8NCiAgICB1aW50IGlkeDsNCiAgfQ0KICBtYXBwaW5nIChzdHJpbmcgPT4gUmVjb3JkKSByZWNvcmRzOw0KICBtYXBwaW5nICh1aW50ID0+IHN0cmluZykgaW5kZXg7DQogIA0KICAvLyBUT0RPIGRlZmluZSBhY2Nlc3NvcnMgaW5zdGVhZA0KICB1aW50IHB1YmxpYyBtYXhSZWNvcmRzOw0KICB1aW50IHB1YmxpYyBjdXJyZW50UmVjb3JkczsNCg0KICBldmVudCBkZWJ1ZyhzdHJpbmcgaW5kZXhlZCBsYWJlbCwgc3RyaW5nIG1zZyk7DQogIGV2ZW50IGNyZWF0ZWQoc3RyaW5nIGluZGV4ZWQgbGFiZWwsIHN0cmluZyBpbmRleGVkIG5hbWUsIGFkZHJlc3MgaG9sZGVyLCB1aW50IGJsb2NrKTsNCiAgZXZlbnQgZGVsZXRlZChzdHJpbmcgaW5kZXhlZCBsYWJlbCwgc3RyaW5nIGluZGV4ZWQgbmFtZSwgYWRkcmVzcyBob2xkZXIsIHVpbnQgYmxvY2spOw0KICANCiAgLy8gInZhbHVlIiBzaG91bGQgYmUgYSBjb21tYS1zZXBhcmF0ZWQgbGlzdCBvZiB2YWx1ZXMuIFNvbGlkaXR5DQogIC8vIHB1YmxpYyBmdW5jdGlvbnMgY2Fubm90IHVzZSBhcnJheXMgb2Ygc3RyaW5ncyA6LSggVE9ETzogc29sdmUgaXQNCiAgLy8gd2hlbiB3ZSdsbCBoYXZlIHN0cmluZ3MuDQogIGZ1bmN0aW9uIHJlZ2lzdGVyKHN0cmluZyBuYW1lLCBzdHJpbmcgdmFsdWUpIHsNCiAgICAvKiBUT0RPOiBwYXkgdGhlIHByaWNlICovDQogICAgdWludCBpOw0KICAgIGlmIChyZWNvcmRzW25hbWVdLmV4aXN0cykgew0KICAgICAgaWYgKG1zZy5zZW5kZXIgIT0gcmVjb3Jkc1tuYW1lXS5ob2xkZXIpIHsgLy8gVE9ETzogdXNlIG1vZGlmaWVycyBpbnN0ZWFkDQoJdGhyb3c7DQogICAgICB9DQogICAgICBlbHNlIHsNCglpID0gcmVjb3Jkc1tuYW1lXS5pZHg7DQogICAgICB9DQogICAgfQ0KICAgIGVsc2Ugew0KICAgICAgcmVjb3Jkc1tuYW1lXS5pZHggPSBtYXhSZWNvcmRzOw0KICAgICAgaSA9IG1heFJlY29yZHM7DQogICAgICBtYXhSZWNvcmRzKys7DQogICAgfQ0KICAgIHJlY29yZHNbbmFtZV0udmFsdWUgPSB2YWx1ZTsNCiAgICByZWNvcmRzW25hbWVdLmhvbGRlciA9IG1zZy5zZW5kZXI7DQogICAgcmVjb3Jkc1tuYW1lXS5leGlzdHMgPSB0cnVlOw0KICAgIGN1cnJlbnRSZWNvcmRzKys7DQogICAgaW5kZXhbaV0gPSBuYW1lOw0KICAgIGNyZWF0ZWQoIkNSRUFUSU9OIiwgbmFtZSwgbXNnLnNlbmRlciwgYmxvY2subnVtYmVyKTsJICANCiAgfQ0KDQogIGZ1bmN0aW9uIHRyYW5zZmVyKHN0cmluZyBuYW1lLCBhZGRyZXNzIHRvKSB7DQogICAgaWYgKHJlY29yZHNbbmFtZV0uZXhpc3RzKSB7DQogICAgICBpZiAobXNnLnNlbmRlciAhPSByZWNvcmRzW25hbWVdLmhvbGRlcikgew0KCXRocm93Ow0KICAgICAgfQ0KICAgICAgcmVjb3Jkc1tuYW1lXS5ob2xkZXIgPSB0bzsNCiAgICB9DQogICAgZWxzZSB7DQogICAgICB0aHJvdzsNCiAgICB9DQogIH0NCiAgDQogIGZ1bmN0aW9uIGdldChzdHJpbmcgbmFtZSkgY29uc3RhbnQgcmV0dXJucyhib29sIGV4aXN0cywgc3RyaW5nIHZhbHVlKSB7DQogICAgaWYgKHJlY29yZHNbbmFtZV0uZXhpc3RzKSB7DQogICAgICBleGlzdHMgPSB0cnVlOw0KICAgICAgdmFsdWUgPSByZWNvcmRzW25hbWVdLnZhbHVlOw0KICAgIH0gZWxzZSB7DQogICAgICBleGlzdHMgPSBmYWxzZTsNCiAgICB9DQogIH0NCg0KICAvLyBDb25zdHJ1Y3Rvcg0KICBmdW5jdGlvbiBSZWdpc3RyeSgpIHsNCiAgICBuaWMgPSBtc2cuc2VuZGVyOw0KICAgIGN1cnJlbnRSZWNvcmRzID0gMDsNCiAgICBtYXhSZWNvcmRzID0gMDsNCiAgICByZWdpc3RlcigiTklDIiwgIkF1dG9tYXRpY2FsbHkgY3JlYXRlZCBieSBmb3IgdGhlIHJlZ2lzdHJ5Iik7IC8vIFRPRE8gbWF5IGZhaWwgaWYgbm90DQogICAgLy8gZW5vdWdoIGdhcyBpbiB0aGUgY3JlYXRpbmcgdHJhbnNhY3Rpb24/DQogIH0NCiAgDQoNCiAgZnVuY3Rpb24gd2hvaXMoc3RyaW5nIG5hbWUpIGNvbnN0YW50IHJldHVybnMoYm9vbCBleGlzdHMsIHN0cmluZyB2YWx1ZSwgYWRkcmVzcyBob2xkZXIpIHsNCiAgICBpZiAocmVjb3Jkc1tuYW1lXS5leGlzdHMpIHsNCiAgICAgIGV4aXN0cyA9IHRydWU7DQogICAgICB2YWx1ZSA9IHJlY29yZHNbbmFtZV0udmFsdWU7DQogICAgICBob2xkZXIgPSByZWNvcmRzW25hbWVdLmhvbGRlcjsNCiAgICB9IGVsc2Ugew0KICAgICAgZXhpc3RzID0gZmFsc2U7DQogICAgfQ0KICB9DQoNCiAgZnVuY3Rpb24gcmVtb3ZlKHN0cmluZyBuYW1lKSB7DQogICAgdWludCBpOw0KICAgIGlmIChyZWNvcmRzW25hbWVdLmV4aXN0cykgew0KICAgICAgaWYgKG1zZy5zZW5kZXIgIT0gcmVjb3Jkc1tuYW1lXS5ob2xkZXIpIHsNCgl0aHJvdzsNCiAgICAgIH0NCiAgICAgIGVsc2Ugew0KCWkgPSByZWNvcmRzW25hbWVdLmlkeDsNCiAgICAgIH0NCiAgICB9DQogICAgZWxzZSB7DQogICAgICB0aHJvdzsgLy8gNDA0LiBUb28gYmFkIHdlIGNhbm5vdCBhZGQgY29udGVudCB0byB0aHJvdy4NCiAgICB9DQogICAgcmVjb3Jkc1tuYW1lXS5leGlzdHMgPSBmYWxzZTsNCiAgICBjdXJyZW50UmVjb3Jkcy0tOw0KICAgIGRlbGV0ZWQoIkRFTEVUSU9OIiwgbmFtZSwgbXNnLnNlbmRlciwgYmxvY2subnVtYmVyKTsJICANCiAgfQ0KDQogIGZ1bmN0aW9uIGRvd25sb2FkKCkgcmV0dXJucyhzdHJpbmcgYWxsKSB7DQogICAgaWYgKG1zZy5zZW5kZXIgIT0gbmljKSB7DQoJdGhyb3c7DQogICAgICB9DQogICAgYWxsID0gIk5PVCBZRVQgSU1QTEVNRU5URUQiOw0KICAgIC8vIExvb3Bpbmcgb3ZlciBhbGwgdGhlIHJlY29yZHMgaXMgZWFzeToNCiAgICAvL2ZvciB1aW50IChpID0gMDsgaSA8IG1heFJlY29yZHM7IGkrKykgew0KICAgIC8vCWlmIChyZWNvcmRzW2luZGV4W2ldXS5leGlzdHMpIHsNCiAgICANCiAgICAvLyBPciB3ZSBjb3VsZCB1c2UgYW4gaXRlcmFibGUgbWFwcGluZyBtYXkNCiAgICAvLyBiZSB0aGlzIGxpYnJhcnkNCiAgICAvLyA8aHR0cHM6Ly9naXRodWIuY29tL2V0aGVyZXVtL2RhcHAtYmluL2Jsb2IvbWFzdGVyL2xpYnJhcnkvaXRlcmFibGVfbWFwcGluZy5zb2w+DQoNCiAgICAvLyBUaGUgZGlmZmljdWx0IHBhcnQgaXMgdG8gY29uc3RydWN0IGFuIGFuc3dlciwgc2luY2UgU29saWRpdHkNCiAgICAvLyBkb2VzIG5vdCBwcm92aWRlIHN0cmluZyBjb25jYXRlbmF0aW9uLCBvciB0aGUgYWJpbGl0eSB0byByZXR1cm4NCiAgICAvLyBhcnJheXMuDQoNCgkvLyBUT0RPOiBwcm92aWRlIGEgZnVuY3Rpb24gdG8gYWNjZXNzIG9uZSBpdGVtLCB1c2luZyBpdHMgaW5kZXgsDQoJLy8gYW5kIHRvIGxldCB0aGUgY2FsbGVyIGxvb3BzIGZyb20gMCB0byBtYXhSZWNvcmRzDQoJLy8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8zNzYwNjgzOS9ob3ctdG8tcmV0dXJuLW1hcHBpbmctbGlzdC1pbi1zb2xpZGl0eS1ldGhlcmV1bS1jb250cmFjdC8zNzY0Mzk3MiMzNzY0Mzk3Mg0KICB9DQogIA0KfQ=='