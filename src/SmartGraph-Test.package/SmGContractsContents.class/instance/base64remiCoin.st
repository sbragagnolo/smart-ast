base 64 content
base64remiCoin
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC4yOw0KDQpjb250cmFjdCBFUkMyMEludGVyZmFjZSB7DQoNCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgYmFsYW5jZSk7DQogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpOw0KICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7DQogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsNCiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKTsNCg0KICAgIC8vIFRyaWdnZXJlZCB3aGVuIHRva2VucyBhcmUgdHJhbnNmZXJyZWQuDQogICAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCBhZGRyZXNzIGluZGV4ZWQgX3RvLCB1aW50MjU2IF92YWx1ZSk7DQoNCiAgICAvLyBUcmlnZ2VyZWQgd2hlbmV2ZXIgYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgaXMgY2FsbGVkLg0KICAgIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBfb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpOw0KDQp9DQoNCmNvbnRyYWN0IE93bmVyIHsNCiAgICAvL0ZvciBzdG9yaW5nIHRoZSBvd25lciBhZGRyZXNzDQogICAgYWRkcmVzcyBwdWJsaWMgb3duZXI7DQoNCiAgICAvL0NvbnN0cnVjdG9yIGZvciBhc3NpZ24gYSBhZGRyZXNzIGZvciBvd25lciBwcm9wZXJ0eShJdCB3aWxsIGJlIGFkZHJlc3Mgd2hvIGRlcGxveSB0aGUgY29udHJhY3QpIA0KICAgIGZ1bmN0aW9uIE93bmVyKCkgew0KICAgICAgICBvd25lciA9IG1zZy5zZW5kZXI7DQogICAgfQ0KDQogICAgLy9UaGlzIGlzIG1vZGlmaWVyIChhIHNwZWNpYWwgZnVuY3Rpb24pIHdoaWNoIHdpbGwgZXhlY3V0ZSBiZWZvcmUgdGhlIGZ1bmN0aW9uIGV4ZWN1dGlvbiBvbiB3aGljaCBpdCBhcHBsaWVkIA0KICAgIG1vZGlmaWVyIG9ubHlPd25lcigpIHsNCiAgICAgICAgaWYobXNnLnNlbmRlciAhPSBvd25lcikgdGhyb3c7DQogICAgICAgIC8vVGhpcyBzdGF0ZW1lbnQgcmVwbGFjZSB3aXRoIHRoZSBjb2RlIG9mIGZ1Y250aW9uIG9uIHdoaWNoIG1vZGlmaWVyIGlzIGFwcGxpZWQNCiAgICAgICAgXzsNCiAgICB9DQogICAgLy9IZXJlIGlzIHRoZSBleGFtcGxlIG9mIG1vZGlmaWVyIHRoaXMgZnVuY3Rpb24gY29kZSByZXBsYWNlIF87IHN0YXRlbWVudCBvZiBtb2RpZmllciANCiAgICBmdW5jdGlvbiB0cmFuc2Zlck93bmVyc2hpcChhZGRyZXNzIG5ld19vd25lcikgb25seU93bmVyIHsNCiAgICAgICAgb3duZXIgPSBuZXdfb3duZXI7DQogICAgfQ0KfQ0KDQpjb250cmFjdCBSZW1pQ29pbiBpcyBFUkMyMEludGVyZmFjZSxPd25lciB7DQoNCiAgICAvL0NvbW1vbiBpbmZvcm1hdGlvbiBhYm91dCBjb2luDQogICAgc3RyaW5nICBwdWJsaWMgbmFtZTsNCiAgICBzdHJpbmcgIHB1YmxpYyBzeW1ib2w7DQogICAgdWludDggICBwdWJsaWMgZGVjaW1hbHM7DQogICAgdWludDI1NiBwdWJsaWMgdG90YWxTdXBwbHk7DQogICAgDQogICAgLy9CYWxhbmNlIHByb3BlcnR5IHdoaWNoIHNob3VsZCBiZSBhbHdheXMgYXNzb2NpYXRlIHdpdGggYW4gYWRkcmVzcw0KICAgIG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50MjU2KSBiYWxhbmNlczsNCiAgICAvL2Zyb3plbkFjY291bnQgcHJvcGVydHkgd2hpY2ggc2hvdWxkIGJlIGFzc29jaWF0ZSB3aXRoIGFuIGFkZHJlc3MNCiAgICBtYXBwaW5nIChhZGRyZXNzID0+IGJvb2wpIHB1YmxpYyBmcm96ZW5BY2NvdW50Ow0KICAgIC8vIE93bmVyIG9mIGFjY291bnQgYXBwcm92ZXMgdGhlIHRyYW5zZmVyIG9mIGFuIGFtb3VudCB0byBhbm90aGVyIGFjY291bnQNCiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgYWxsb3dlZDsNCiAgICANCiAgICAvL1RoZXNlIGdlbmVyYXRlcyBhIHB1YmxpYyBldmVudCBvbiB0aGUgYmxvY2tjaGFpbiB0aGF0IHdpbGwgbm90aWZ5IGNsaWVudHMNCiAgICBldmVudCBGcm96ZW5GdW5kcyhhZGRyZXNzIHRhcmdldCwgYm9vbCBmcm96ZW4pOw0KICAgIA0KICAgIC8vQ29uc3RydXRvciBmb3IgaW5pdGlhbCBzdXBwbHkgKFRoZSBhZGRyZXNzIHdobyBkZXBsb3llZCB0aGUgY29udHJhY3Qgd2lsbCBnZXQgaXQpIGFuZCBpbXBvcnRhbnQgaW5mb3JtYXRpb24NCiAgICBmdW5jdGlvbiBSZW1pQ29pbih1aW50MjU2IGluaXRpYWxfc3VwcGx5LCBzdHJpbmcgX25hbWUsIHN0cmluZyBfc3ltYm9sLCB1aW50OCBfZGVjaW1hbCkgew0KICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSAgPSBpbml0aWFsX3N1cHBseTsNCiAgICAgICAgbmFtZSAgICAgICAgICAgICAgICAgID0gX25hbWU7DQogICAgICAgIHN5bWJvbCAgICAgICAgICAgICAgICA9IF9zeW1ib2w7DQogICAgICAgIGRlY2ltYWxzICAgICAgICAgICAgICA9IF9kZWNpbWFsOw0KICAgICAgICB0b3RhbFN1cHBseSAgICAgICAgICAgPSBpbml0aWFsX3N1cHBseTsNCiAgICB9DQoNCiAgICAvLyBXaGF0IGlzIHRoZSBiYWxhbmNlIG9mIGEgcGFydGljdWxhciBhY2NvdW50Pw0KICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKSB7DQogICAgICAgIHJldHVybiBiYWxhbmNlc1tfb3duZXJdOw0KICAgIH0NCg0KICAgIC8vRnVuY3Rpb24gZm9yIHRyYW5zZXIgdGhlIGNvaW4gZnJvbSBvbmUgYWRkcmVzcyB0byBhbm90aGVyDQogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyB0bywgdWludCB2YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7DQoNCiAgICAgICAgLy9jaGVja2luZyBhY2NvdW50IGlzIGZyZWV6ZSBvciBub3QNCiAgICAgICAgaWYgKGZyb3plbkFjY291bnRbbXNnLnNlbmRlcl0pIHJldHVybiBmYWxzZTsNCg0KICAgICAgICAvL2NoZWNraW5nIHRoZSBzZW5kZXIgc2hvdWxkIGhhdmUgZW5vdWdoIGNvaW5zDQogICAgICAgIGlmKGJhbGFuY2VzW21zZy5zZW5kZXJdIDwgdmFsdWUpIHJldHVybiBmYWxzZTsNCiAgICAgICAgLy9jaGVja2luZyBmb3Igb3ZlcmZsb3dzDQogICAgICAgIGlmKGJhbGFuY2VzW3RvXSArIHZhbHVlIDwgYmFsYW5jZXNbdG9dKSByZXR1cm4gZmFsc2U7DQogICAgICAgIA0KICAgICAgICAvL3N1YnN0cmFjdGluZyB0aGUgc2VuZGVyIGJhbGFuY2UNCiAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gLT0gdmFsdWU7DQogICAgICAgIC8vYWRkaW5nIHRoZSByZWNpZXZlciBiYWxhbmNlDQogICAgICAgIGJhbGFuY2VzW3RvXSArPSB2YWx1ZTsNCiAgICAgICAgDQogICAgICAgIC8vIE5vdGlmeSBhbnlvbmUgbGlzdGVuaW5nIHRoYXQgdGhpcyB0cmFuc2ZlciB0b29rIHBsYWNlDQogICAgICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIHRvLCB2YWx1ZSk7DQoNCiAgICAgICAgcmV0dXJuIHRydWU7DQogICAgfQ0KDQoNCiAgICAvL0Z1bmN0aW9uIGZvciB0cmFuc2VyIHRoZSBjb2luIGZyb20gb25lIGFkZHJlc3MgdG8gYW5vdGhlcg0KICAgIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIGZyb20sIGFkZHJlc3MgdG8sIHVpbnQgdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcykgew0KDQogICAgICAgIC8vY2hlY2tpbmcgYWNjb3VudCBpcyBmcmVlemUgb3Igbm90DQogICAgICAgIGlmIChmcm96ZW5BY2NvdW50W21zZy5zZW5kZXJdKSByZXR1cm4gZmFsc2U7DQoNCiAgICAgICAgLy9jaGVja2luZyB0aGUgZnJvbSBzaG91bGQgaGF2ZSBlbm91Z2ggY29pbnMNCiAgICAgICAgaWYoYmFsYW5jZXNbZnJvbV0gPCB2YWx1ZSkgcmV0dXJuIGZhbHNlOw0KDQogICAgICAgIC8vY2hlY2tpbmcgZm9yIGFsbG93YW5jZQ0KICAgICAgICBpZiggYWxsb3dlZFtmcm9tXVttc2cuc2VuZGVyXSA+PSB2YWx1ZSApIHJldHVybiBmYWxzZTsNCg0KICAgICAgICAvL2NoZWNraW5nIGZvciBvdmVyZmxvd3MNCiAgICAgICAgaWYoYmFsYW5jZXNbdG9dICsgdmFsdWUgPCBiYWxhbmNlc1t0b10pIHJldHVybiBmYWxzZTsNCiAgICAgICAgDQogICAgICAgIGJhbGFuY2VzW2Zyb21dIC09IHZhbHVlOw0KICAgICAgICBhbGxvd2VkW2Zyb21dW21zZy5zZW5kZXJdIC09IHZhbHVlOw0KICAgICAgICBiYWxhbmNlc1t0b10gKz0gdmFsdWU7DQogICAgICAgIA0KICAgICAgICAvLyBOb3RpZnkgYW55b25lIGxpc3RlbmluZyB0aGF0IHRoaXMgdHJhbnNmZXIgdG9vayBwbGFjZQ0KICAgICAgICBUcmFuc2Zlcihmcm9tLCB0bywgdmFsdWUpOw0KDQogICAgICAgIHJldHVybiB0cnVlOw0KICAgIH0NCg0KICAgIC8vDQogICAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IHJlbWFpbmluZykgew0KICAgICAgICByZXR1cm4gYWxsb3dlZFtfb3duZXJdW19zcGVuZGVyXTsNCiAgICB9DQoNCiAgICAvLw0KICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfYW1vdW50KSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsNCiAgICAgICAgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSBfYW1vdW50Ow0KICAgICAgICBBcHByb3ZhbChtc2cuc2VuZGVyLCBfc3BlbmRlciwgX2Ftb3VudCk7DQogICAgICAgIHJldHVybiB0cnVlOw0KICAgIH0NCiAgICANCiAgICAvLw0KICAgIGZ1bmN0aW9uIG1pbnRUb2tlbihhZGRyZXNzIHRhcmdldCwgdWludDI1NiBtaW50ZWRBbW91bnQpIG9ubHlPd25lcnsNCiAgICAgICAgYmFsYW5jZXNbdGFyZ2V0XSArPSBtaW50ZWRBbW91bnQ7DQogICAgICAgIHRvdGFsU3VwcGx5ICs9IG1pbnRlZEFtb3VudDsNCiAgICAgICAgDQogICAgICAgIFRyYW5zZmVyKDAsb3duZXIsbWludGVkQW1vdW50KTsNCiAgICAgICAgVHJhbnNmZXIob3duZXIsdGFyZ2V0LG1pbnRlZEFtb3VudCk7DQogICAgfQ0KDQogICAgLy8NCiAgICBmdW5jdGlvbiBmcmVlemVBY2NvdW50KGFkZHJlc3MgdGFyZ2V0LCBib29sIGZyZWV6ZSkgb25seU93bmVyIHsNCiAgICAgICAgZnJvemVuQWNjb3VudFt0YXJnZXRdID0gZnJlZXplOw0KICAgICAgICBGcm96ZW5GdW5kcyh0YXJnZXQsIGZyZWV6ZSk7DQogICAgfQ0KDQogICAgLy8NCiAgICBmdW5jdGlvbiBjaGFuZ2VOYW1lKHN0cmluZyBfbmFtZSkgb25seU93bmVyIHsNCiAgICAgICAgbmFtZSA9IF9uYW1lOw0KICAgIH0NCg0KICAgIC8vDQogICAgZnVuY3Rpb24gY2hhbmdlU3ltYm9sKHN0cmluZyBfc3ltYm9sKSBvbmx5T3duZXIgew0KICAgICAgICBzeW1ib2wgPSBfc3ltYm9sOw0KICAgIH0NCg0KICAgIC8vDQogICAgZnVuY3Rpb24gY2hhbmdlRGVjaW1hbHModWludDggX2RlY2ltYWxzKSBvbmx5T3duZXIgew0KICAgICAgICBkZWNpbWFscyA9IF9kZWNpbWFsczsNCiAgICB9DQp9'