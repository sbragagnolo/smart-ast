base 64 content
base64reverseRegistrar
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC4xMDsNCg0KY29udHJhY3QgQWJzdHJhY3RFTlMgew0KICAgIGZ1bmN0aW9uIG93bmVyKGJ5dGVzMzIgbm9kZSkgY29uc3RhbnQgcmV0dXJucyhhZGRyZXNzKTsNCiAgICBmdW5jdGlvbiByZXNvbHZlcihieXRlczMyIG5vZGUpIGNvbnN0YW50IHJldHVybnMoYWRkcmVzcyk7DQogICAgZnVuY3Rpb24gdHRsKGJ5dGVzMzIgbm9kZSkgY29uc3RhbnQgcmV0dXJucyh1aW50NjQpOw0KICAgIGZ1bmN0aW9uIHNldE93bmVyKGJ5dGVzMzIgbm9kZSwgYWRkcmVzcyBvd25lcik7DQogICAgZnVuY3Rpb24gc2V0U3Vibm9kZU93bmVyKGJ5dGVzMzIgbm9kZSwgYnl0ZXMzMiBsYWJlbCwgYWRkcmVzcyBvd25lcik7DQogICAgZnVuY3Rpb24gc2V0UmVzb2x2ZXIoYnl0ZXMzMiBub2RlLCBhZGRyZXNzIHJlc29sdmVyKTsNCiAgICBmdW5jdGlvbiBzZXRUVEwoYnl0ZXMzMiBub2RlLCB1aW50NjQgdHRsKTsNCn0NCg0KY29udHJhY3QgUmVzb2x2ZXIgew0KICAgIGZ1bmN0aW9uIHNldE5hbWUoYnl0ZXMzMiBub2RlLCBzdHJpbmcgbmFtZSkgcHVibGljOw0KfQ0KDQovKioNCiAqIEBkZXYgUHJvdmlkZXMgYSBkZWZhdWx0IGltcGxlbWVudGF0aW9uIG9mIGEgcmVzb2x2ZXIgZm9yIHJldmVyc2UgcmVjb3JkcywNCiAqIHdoaWNoIHBlcm1pdHMgb25seSB0aGUgb3duZXIgdG8gdXBkYXRlIGl0Lg0KICovDQpjb250cmFjdCBEZWZhdWx0UmV2ZXJzZVJlc29sdmVyIGlzIFJlc29sdmVyIHsNCiAgICAvLyBuYW1laGFzaCgnYWRkci5yZXZlcnNlJykNCiAgICBieXRlczMyIGNvbnN0YW50IEFERFJfUkVWRVJTRV9OT0RFID0gMHg5MWQxNzc3NzgxODg0ZDAzYTY3NTdhODAzOTk2ZTM4ZGUyYTQyOTY3ZmIzN2VlYWNhNzI3MjkyNzEwMjVhOWUyOw0KDQogICAgQWJzdHJhY3RFTlMgcHVibGljIGVuczsNCiAgICBtYXBwaW5nKGJ5dGVzMzI9PnN0cmluZykgcHVibGljIG5hbWU7DQogICAgDQogICAgLyoqDQogICAgICogQGRldiBDb25zdHJ1Y3Rvcg0KICAgICAqIEBwYXJhbSBlbnNBZGRyIFRoZSBhZGRyZXNzIG9mIHRoZSBFTlMgcmVnaXN0cnkuDQogICAgICovDQogICAgZnVuY3Rpb24gRGVmYXVsdFJldmVyc2VSZXNvbHZlcihBYnN0cmFjdEVOUyBlbnNBZGRyKSB7DQogICAgICAgIGVucyA9IGVuc0FkZHI7DQoNCiAgICAgICAgLy8gQXNzaWduIG93bmVyc2hpcCBvZiB0aGUgcmV2ZXJzZSByZWNvcmQgdG8gb3VyIGRlcGxveWVyDQogICAgICAgIHZhciByZWdpc3RyYXIgPSBSZXZlcnNlUmVnaXN0cmFyKGVucy5vd25lcihBRERSX1JFVkVSU0VfTk9ERSkpOw0KICAgICAgICBpZihhZGRyZXNzKHJlZ2lzdHJhcikgIT0gMCkgew0KICAgICAgICAgICAgcmVnaXN0cmFyLmNsYWltKG1zZy5zZW5kZXIpOw0KICAgICAgICB9DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQGRldiBPbmx5IHBlcm1pdHMgY2FsbHMgYnkgdGhlIHJldmVyc2UgcmVnaXN0cmFyLg0KICAgICAqIEBwYXJhbSBub2RlIFRoZSBub2RlIHBlcm1pc3Npb24gaXMgcmVxdWlyZWQgZm9yLg0KICAgICAqLw0KICAgIG1vZGlmaWVyIG93bmVyX29ubHkoYnl0ZXMzMiBub2RlKSB7DQogICAgICAgIHJlcXVpcmUobXNnLnNlbmRlciA9PSBlbnMub3duZXIobm9kZSkpOw0KICAgICAgICBfOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBkZXYgU2V0cyB0aGUgbmFtZSBmb3IgYSBub2RlLg0KICAgICAqIEBwYXJhbSBub2RlIFRoZSBub2RlIHRvIHVwZGF0ZS4NCiAgICAgKiBAcGFyYW0gX25hbWUgVGhlIG5hbWUgdG8gc2V0Lg0KICAgICAqLw0KICAgIGZ1bmN0aW9uIHNldE5hbWUoYnl0ZXMzMiBub2RlLCBzdHJpbmcgX25hbWUpIHB1YmxpYyBvd25lcl9vbmx5KG5vZGUpIHsNCiAgICAgICAgbmFtZVtub2RlXSA9IF9uYW1lOw0KICAgIH0NCn0NCg0KY29udHJhY3QgUmV2ZXJzZVJlZ2lzdHJhciB7DQogICAgLy8gbmFtZWhhc2goJ2FkZHIucmV2ZXJzZScpDQogICAgYnl0ZXMzMiBjb25zdGFudCBBRERSX1JFVkVSU0VfTk9ERSA9IDB4OTFkMTc3Nzc4MTg4NGQwM2E2NzU3YTgwMzk5NmUzOGRlMmE0Mjk2N2ZiMzdlZWFjYTcyNzI5MjcxMDI1YTllMjsNCg0KICAgIEFic3RyYWN0RU5TIHB1YmxpYyBlbnM7DQogICAgUmVzb2x2ZXIgcHVibGljIGRlZmF1bHRSZXNvbHZlcjsNCg0KICAgIC8qKg0KICAgICAqIEBkZXYgQ29uc3RydWN0b3INCiAgICAgKiBAcGFyYW0gZW5zQWRkciBUaGUgYWRkcmVzcyBvZiB0aGUgRU5TIHJlZ2lzdHJ5Lg0KICAgICAqIEBwYXJhbSByZXNvbHZlckFkZHIgVGhlIGFkZHJlc3Mgb2YgdGhlIGRlZmF1bHQgcmV2ZXJzZSByZXNvbHZlci4NCiAgICAgKi8NCiAgICBmdW5jdGlvbiBSZXZlcnNlUmVnaXN0cmFyKEFic3RyYWN0RU5TIGVuc0FkZHIsIFJlc29sdmVyIHJlc29sdmVyQWRkcikgew0KICAgICAgICBlbnMgPSBlbnNBZGRyOw0KICAgICAgICBkZWZhdWx0UmVzb2x2ZXIgPSByZXNvbHZlckFkZHI7DQoNCiAgICAgICAgLy8gQXNzaWduIG93bmVyc2hpcCBvZiB0aGUgcmV2ZXJzZSByZWNvcmQgdG8gb3VyIGRlcGxveWVyDQogICAgICAgIHZhciBvbGRSZWdpc3RyYXIgPSBSZXZlcnNlUmVnaXN0cmFyKGVucy5vd25lcihBRERSX1JFVkVSU0VfTk9ERSkpOw0KICAgICAgICBpZihhZGRyZXNzKG9sZFJlZ2lzdHJhcikgIT0gMCkgew0KICAgICAgICAgICAgb2xkUmVnaXN0cmFyLmNsYWltKG1zZy5zZW5kZXIpOw0KICAgICAgICB9DQogICAgfQ0KICAgIA0KICAgIC8qKg0KICAgICAqIEBkZXYgVHJhbnNmZXJzIG93bmVyc2hpcCBvZiB0aGUgcmV2ZXJzZSBFTlMgcmVjb3JkIGFzc29jaWF0ZWQgd2l0aCB0aGUNCiAgICAgKiAgICAgIGNhbGxpbmcgYWNjb3VudC4NCiAgICAgKiBAcGFyYW0gb3duZXIgVGhlIGFkZHJlc3MgdG8gc2V0IGFzIHRoZSBvd25lciBvZiB0aGUgcmV2ZXJzZSByZWNvcmQgaW4gRU5TLg0KICAgICAqIEByZXR1cm4gVGhlIEVOUyBub2RlIGhhc2ggb2YgdGhlIHJldmVyc2UgcmVjb3JkLg0KICAgICAqLw0KICAgIGZ1bmN0aW9uIGNsYWltKGFkZHJlc3Mgb3duZXIpIHJldHVybnMgKGJ5dGVzMzIgbm9kZSkgew0KICAgICAgICByZXR1cm4gY2xhaW1XaXRoUmVzb2x2ZXIob3duZXIsIDApOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBkZXYgVHJhbnNmZXJzIG93bmVyc2hpcCBvZiB0aGUgcmV2ZXJzZSBFTlMgcmVjb3JkIGFzc29jaWF0ZWQgd2l0aCB0aGUNCiAgICAgKiAgICAgIGNhbGxpbmcgYWNjb3VudC4NCiAgICAgKiBAcGFyYW0gb3duZXIgVGhlIGFkZHJlc3MgdG8gc2V0IGFzIHRoZSBvd25lciBvZiB0aGUgcmV2ZXJzZSByZWNvcmQgaW4gRU5TLg0KICAgICAqIEBwYXJhbSByZXNvbHZlciBUaGUgYWRkcmVzcyBvZiB0aGUgcmVzb2x2ZXIgdG8gc2V0OyAwIHRvIGxlYXZlIHVuY2hhbmdlZC4NCiAgICAgKiBAcmV0dXJuIFRoZSBFTlMgbm9kZSBoYXNoIG9mIHRoZSByZXZlcnNlIHJlY29yZC4NCiAgICAgKi8NCiAgICBmdW5jdGlvbiBjbGFpbVdpdGhSZXNvbHZlcihhZGRyZXNzIG93bmVyLCBhZGRyZXNzIHJlc29sdmVyKSByZXR1cm5zIChieXRlczMyIG5vZGUpIHsNCiAgICAgICAgdmFyIGxhYmVsID0gc2hhM0hleEFkZHJlc3MobXNnLnNlbmRlcik7DQogICAgICAgIG5vZGUgPSBzaGEzKEFERFJfUkVWRVJTRV9OT0RFLCBsYWJlbCk7DQogICAgICAgIHZhciBjdXJyZW50T3duZXIgPSBlbnMub3duZXIobm9kZSk7DQoNCiAgICAgICAgLy8gVXBkYXRlIHRoZSByZXNvbHZlciBpZiByZXF1aXJlZA0KICAgICAgICBpZihyZXNvbHZlciAhPSAwICYmIHJlc29sdmVyICE9IGVucy5yZXNvbHZlcihub2RlKSkgew0KICAgICAgICAgICAgLy8gVHJhbnNmZXIgdGhlIG5hbWUgdG8gdXMgZmlyc3QgaWYgaXQncyBub3QgYWxyZWFkeQ0KICAgICAgICAgICAgaWYoY3VycmVudE93bmVyICE9IGFkZHJlc3ModGhpcykpIHsNCiAgICAgICAgICAgICAgICBlbnMuc2V0U3Vibm9kZU93bmVyKEFERFJfUkVWRVJTRV9OT0RFLCBsYWJlbCwgdGhpcyk7DQogICAgICAgICAgICAgICAgY3VycmVudE93bmVyID0gYWRkcmVzcyh0aGlzKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGVucy5zZXRSZXNvbHZlcihub2RlLCByZXNvbHZlcik7DQogICAgICAgIH0NCg0KICAgICAgICAvLyBVcGRhdGUgdGhlIG93bmVyIGlmIHJlcXVpcmVkDQogICAgICAgIGlmKGN1cnJlbnRPd25lciAhPSBvd25lcikgew0KICAgICAgICAgICAgZW5zLnNldFN1Ym5vZGVPd25lcihBRERSX1JFVkVSU0VfTk9ERSwgbGFiZWwsIG93bmVyKTsNCiAgICAgICAgfQ0KDQogICAgICAgIHJldHVybiBub2RlOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBkZXYgU2V0cyB0aGUgYG5hbWUoKWAgcmVjb3JkIGZvciB0aGUgcmV2ZXJzZSBFTlMgcmVjb3JkIGFzc29jaWF0ZWQgd2l0aA0KICAgICAqIHRoZSBjYWxsaW5nIGFjY291bnQuIEZpcnN0IHVwZGF0ZXMgdGhlIHJlc29sdmVyIHRvIHRoZSBkZWZhdWx0IHJldmVyc2UNCiAgICAgKiByZXNvbHZlciBpZiBuZWNlc3NhcnkuDQogICAgICogQHBhcmFtIG5hbWUgVGhlIG5hbWUgdG8gc2V0IGZvciB0aGlzIGFkZHJlc3MuDQogICAgICogQHJldHVybiBUaGUgRU5TIG5vZGUgaGFzaCBvZiB0aGUgcmV2ZXJzZSByZWNvcmQuDQogICAgICovDQogICAgZnVuY3Rpb24gc2V0TmFtZShzdHJpbmcgbmFtZSkgcmV0dXJucyAoYnl0ZXMzMiBub2RlKSB7DQogICAgICAgIG5vZGUgPSBjbGFpbVdpdGhSZXNvbHZlcih0aGlzLCBkZWZhdWx0UmVzb2x2ZXIpOw0KICAgICAgICBkZWZhdWx0UmVzb2x2ZXIuc2V0TmFtZShub2RlLCBuYW1lKTsNCiAgICAgICAgcmV0dXJuIG5vZGU7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQGRldiBSZXR1cm5zIHRoZSBub2RlIGhhc2ggZm9yIGEgZ2l2ZW4gYWNjb3VudCdzIHJldmVyc2UgcmVjb3Jkcy4NCiAgICAgKiBAcGFyYW0gYWRkciBUaGUgYWRkcmVzcyB0byBoYXNoDQogICAgICogQHJldHVybiBUaGUgRU5TIG5vZGUgaGFzaC4NCiAgICAgKi8NCiAgICBmdW5jdGlvbiBub2RlKGFkZHJlc3MgYWRkcikgY29uc3RhbnQgcmV0dXJucyAoYnl0ZXMzMiByZXQpIHsNCiAgICAgICAgcmV0dXJuIHNoYTMoQUREUl9SRVZFUlNFX05PREUsIHNoYTNIZXhBZGRyZXNzKGFkZHIpKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAZGV2IEFuIG9wdGltaXNlZCBmdW5jdGlvbiB0byBjb21wdXRlIHRoZSBzaGEzIG9mIHRoZSBsb3dlci1jYXNlDQogICAgICogICAgICBoZXhhZGVjaW1hbCByZXByZXNlbnRhdGlvbiBvZiBhbiBFdGhlcmV1bSBhZGRyZXNzLg0KICAgICAqIEBwYXJhbSBhZGRyIFRoZSBhZGRyZXNzIHRvIGhhc2gNCiAgICAgKiBAcmV0dXJuIFRoZSBTSEEzIGhhc2ggb2YgdGhlIGxvd2VyLWNhc2UgaGV4YWRlY2ltYWwgZW5jb2Rpbmcgb2YgdGhlDQogICAgICogICAgICAgICBpbnB1dCBhZGRyZXNzLg0KICAgICAqLw0KICAgIGZ1bmN0aW9uIHNoYTNIZXhBZGRyZXNzKGFkZHJlc3MgYWRkcikgcHJpdmF0ZSByZXR1cm5zIChieXRlczMyIHJldCkgew0KICAgICAgICBhZGRyOyByZXQ7IC8vIFN0b3Agd2FybmluZyB1cyBhYm91dCB1bnVzZWQgdmFyaWFibGVzDQogICAgICAgIGFzc2VtYmx5IHsNCiAgICAgICAgICAgIGxldCBsb29rdXAgOj0gMHgzMDMxMzIzMzM0MzUzNjM3MzgzOTYxNjI2MzY0NjU2NjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwDQogICAgICAgICAgICBsZXQgaSA6PSA0MA0KICAgICAgICBsb29wOg0KICAgICAgICAgICAgaSA6PSBzdWIoaSwgMSkNCiAgICAgICAgICAgIG1zdG9yZTgoaSwgYnl0ZShhbmQoYWRkciwgMHhmKSwgbG9va3VwKSkNCiAgICAgICAgICAgIGFkZHIgOj0gZGl2KGFkZHIsIDB4MTApDQogICAgICAgICAgICBpIDo9IHN1YihpLCAxKQ0KICAgICAgICAgICAgbXN0b3JlOChpLCBieXRlKGFuZChhZGRyLCAweGYpLCBsb29rdXApKQ0KICAgICAgICAgICAgYWRkciA6PSBkaXYoYWRkciwgMHgxMCkNCiAgICAgICAgICAgIGp1bXBpKGxvb3AsIGkpDQogICAgICAgICAgICByZXQgOj0gc2hhMygwLCA0MCkNCiAgICAgICAgfQ0KICAgIH0NCn0='