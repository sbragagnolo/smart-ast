base 64 content
base64rouleth1
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC44Ow0KDQpjb250cmFjdCBSb3VsZXRoDQp7DQogIC8vR2FtZSBhbmQgR2xvYmFsIFZhcmlhYmxlcywgU3RydWN0dXJlIG9mIGdhbWJsZXMNCiAgYWRkcmVzcyBwdWJsaWMgZGV2ZWxvcGVyOw0KICB1aW50OCBwdWJsaWMgYmxvY2tEZWxheTsgLy9uYiBvZiBibG9ja3MgdG8gd2FpdCBiZWZvcmUgc3Bpbg0KICB1aW50OCBwdWJsaWMgYmxvY2tFeHBpcmF0aW9uOyAvL25iIG9mIGJsb2NrcyBiZWZvcmUgYmV0IGV4cGlyYXRpb24gKGR1ZSB0byBoYXNoIHN0b3JhZ2UgbGltaXRzKQ0KICB1aW50MjU2IHB1YmxpYyBtYXhHYW1ibGU7IC8vbWF4IGdhbWJsZSB2YWx1ZSBtYW51YWxseSBzZXQgYnkgY29uZmlnDQogIHVpbnQyNTYgcHVibGljIG1pbkdhbWJsZTsgLy9taW4gZ2FtYmxlIHZhbHVlIG1hbnVhbGx5IHNldCBieSBjb25maWcNCiAgdWludCBwdWJsaWMgbWF4QmV0c1BlckJsb2NrOyAvL2xpbWl0cyB0aGUgbnVtYmVyIG9mIGJldHMgcGVyIGJsb2NrcyB0byBwcmV2ZW50IG1pbmVyIGNoZWF0aW5nDQogIHVpbnQgbmJCZXRzQ3VycmVudEJsb2NrOyAvL2NvdW50cyB0aGUgbmIgb2YgYmV0cyBpbiB0aGUgYmxvY2sNCg0KICAgIA0KICAvL0dhbWJsZXMNCiAgZW51bSBCZXRUeXBlc3tudW1iZXIsIGNvbG9yLCBwYXJpdHksIGRvemVuLCBjb2x1bW4sIGxvd2hpZ2h9IA0KICBzdHJ1Y3QgR2FtYmxlDQogIHsNCiAgICBhZGRyZXNzIHBsYXllcjsNCiAgICBib29sIHNwaW5uZWQ7IC8vV2FzIHRoZSByb3VsZXRoIHNwaW5uZWQgPw0KICAgIGJvb2wgd2luOw0KICAgIC8vUG9zc2libGUgYmV0IHR5cGVzDQogICAgQmV0VHlwZXMgYmV0VHlwZTsNCiAgICB1aW50OCBpbnB1dDsgLy9zdG9yZXMgbnVtYmVyLCBjb2xvciwgZG96ZW4gb3Igb2RkZXZlbg0KICAgIHVpbnQyNTYgd2FnZXI7DQogICAgdWludDI1NiBibG9ja051bWJlcjsgLy9ibG9jayBvZiBiZXQNCiAgICB1aW50MjU2IGJsb2NrU3Bpbm5lZDsgLy9ibG9jayBvZiBzcGluDQogICAgdWludDggd2hlZWxSZXN1bHQ7DQogIH0NCiAgR2FtYmxlW10gcHJpdmF0ZSBnYW1ibGVzOw0KICB1aW50IHB1YmxpYyB0b3RhbEdhbWJsZXM7IA0KICAvL1RyYWNraW5nIHByb2dyZXNzIG9mIHBsYXllcnMNCiAgbWFwcGluZyAoYWRkcmVzcz0+dWludCkgZ2FtYmxlSW5kZXg7IC8vY3VycmVudCBnYW1ibGUgaW5kZXggb2YgdGhlIHBsYXllcg0KICAvL3JlY29yZHMgY3VycmVudCBzdGF0dXMgb2YgcGxheWVyDQogIGVudW0gU3RhdHVzIHt3YWl0aW5nRm9yQmV0LCB3YWl0aW5nRm9yU3Bpbn0gbWFwcGluZyAoYWRkcmVzcz0+U3RhdHVzKSBwbGF5ZXJTdGF0dXM7IA0KDQoNCiAgLy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQogIC8vICAgICAgICBNYW5hZ2VtZW50ICYgQ29uZmlnIEZVTkNUSU9OUyAgICAgICAgLy8NCiAgLy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoNCiAgZnVuY3Rpb24gIFJvdWxldGgoKSAvL2NyZWF0aW9uIHNldHRpbmdzDQogIHsgDQogICAgZGV2ZWxvcGVyID0gbXNnLnNlbmRlcjsNCiAgICBibG9ja0RlbGF5PTA7IC8vaW5kaWNhdGVzIHdoaWNoIGJsb2NrIGFmdGVyIGJldCB3aWxsIGJlIHVzZWQgZm9yIFJORw0KICAgIGJsb2NrRXhwaXJhdGlvbj0yMDA7IC8vZGVsYXkgYWZ0ZXIgd2hpY2ggZ2FtYmxlIGV4cGlyZXMNCiAgICBtaW5HYW1ibGU9NTAgZmlubmV5OyAvL2NvbmZpZ3VyYWJsZSBtaW4gYmV0DQogICAgbWF4R2FtYmxlPTc1MCBmaW5uZXk7IC8vY29uZmlndXJhYmxlIG1heCBiZXQNCiAgICBtYXhCZXRzUGVyQmxvY2s9NTsgLy8gbGltaXQgb2YgYmV0cyBwZXIgYmxvY2ssIHRvIHByZXZlbnQgbXVsdGlwbGUgYmV0cyBwZXIgbWluZXJzDQogIH0NCiAgICANCiAgbW9kaWZpZXIgb25seURldmVsb3BlcigpIA0KICB7DQogICAgaWYgKG1zZy5zZW5kZXIhPWRldmVsb3BlcikgdGhyb3c7DQogICAgXzsNCiAgfQ0KDQogIGZ1bmN0aW9uIGFkZEJhbmtyb2xsKCkNCiAgICBvbmx5RGV2ZWxvcGVyDQogICAgcGF5YWJsZSB7DQogIH0NCg0KICBmdW5jdGlvbiByZW1vdmVCYW5rcm9sbCh1aW50MjU2IF9hbW91bnRfd2VpKQ0KICAgIG9ubHlEZXZlbG9wZXINCiAgew0KICAgIGlmICghZGV2ZWxvcGVyLnNlbmQoX2Ftb3VudF93ZWkpKSB0aHJvdzsNCiAgfQ0KICAgIA0KICBmdW5jdGlvbiBjaGFuZ2VEZXZlbG9wZXJfb25seV9EZXYoYWRkcmVzcyBuZXdfZGV2KQ0KICAgIG9ubHlEZXZlbG9wZXINCiAgew0KICAgIGRldmVsb3Blcj1uZXdfZGV2Ow0KICB9DQoNCg0KICAvL0FjdGl2YXRlLCBEZWFjdGl2YXRlIEJldHRpbmcNCiAgZW51bSBTdGF0ZXN7YWN0aXZlLCBpbmFjdGl2ZX0gU3RhdGVzIHByaXZhdGUgY29udHJhY3Rfc3RhdGU7DQogICAgDQogIGZ1bmN0aW9uIGRpc2FibGVCZXR0aW5nX29ubHlfRGV2KCkNCiAgICBvbmx5RGV2ZWxvcGVyDQogIHsNCiAgICBjb250cmFjdF9zdGF0ZT1TdGF0ZXMuaW5hY3RpdmU7DQogIH0NCg0KDQogIGZ1bmN0aW9uIGVuYWJsZUJldHRpbmdfb25seV9EZXYoKQ0KICAgIG9ubHlEZXZlbG9wZXINCiAgew0KICAgIGNvbnRyYWN0X3N0YXRlPVN0YXRlcy5hY3RpdmU7DQoNCiAgfQ0KICAgIA0KICBtb2RpZmllciBvbmx5QWN0aXZlKCkNCiAgew0KICAgIGlmIChjb250cmFjdF9zdGF0ZT09U3RhdGVzLmluYWN0aXZlKSB0aHJvdzsNCiAgICBfOw0KICB9DQoNCg0KDQogIC8vQ2hhbmdlIHNvbWUgc2V0dGluZ3Mgd2l0aGluIHNhZmV0eSBib3VuZHMNCiAgZnVuY3Rpb24gY2hhbmdlU2V0dGluZ3Nfb25seV9EZXYodWludCBuZXdNYXhCZXRzQmxvY2ssIHVpbnQyNTYgbmV3TWluR2FtYmxlLCB1aW50MjU2IG5ld01heEdhbWJsZSwgdWludDggbmV3QmxvY2tEZWxheSwgdWludDggbmV3QmxvY2tFeHBpcmF0aW9uKQ0KICAgIG9ubHlEZXZlbG9wZXINCiAgew0KICAgIC8vTWF4IG51bWJlciBvZiBiZXRzIHBlciBibG9jayB0byBwcmV2ZW50IG1pbmVyIGNoZWF0aW5nDQogICAgbWF4QmV0c1BlckJsb2NrPW5ld01heEJldHNCbG9jazsNCiAgICAvL01BWCBCRVQgOiBsaW1pdGVkIGJ5IHBheXJvbGwvKGNhc2lub1N0YXRpc3RpY2FsTGltaXQqMzUpDQogICAgaWYgKG5ld01heEdhbWJsZTxuZXdNaW5HYW1ibGUpIHRocm93OyAgDQogICAgbWF4R2FtYmxlPW5ld01heEdhbWJsZTsgDQogICAgbWluR2FtYmxlPW5ld01pbkdhbWJsZTsNCiAgICAvL0RlbGF5IGJlZm9yZSBzcGluIDoNCiAgICBibG9ja0RlbGF5PW5ld0Jsb2NrRGVsYXk7DQogICAgaWYgKG5ld0Jsb2NrRXhwaXJhdGlvbiA8IGJsb2NrRGVsYXkgKyAyNTApIHRocm93Ow0KICAgIGJsb2NrRXhwaXJhdGlvbj1uZXdCbG9ja0V4cGlyYXRpb247DQogIH0NCg0KDQogIC8vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KICAvLyAgICAgICAgICAgICAgICAgQkVUVElORyBGVU5DVElPTlMgICAgICAgICAgICAgICAgICAgIC8vDQogIC8vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQogIC8vKioqLy9iYXNpYyBiZXR0aW5nIHdpdGhvdXQgTWlzdCBvciBjb250cmFjdCBjYWxsDQogIC8vYWN0aXZhdGVzIHdoZW4gdGhlIHBsYXllciBvbmx5IHNlbmRzIGV0aCB0byB0aGUgY29udHJhY3QNCiAgLy93aXRob3V0IHNwZWNpZnlpbmcgYW55IHR5cGUgb2YgYmV0Lg0KICBmdW5jdGlvbiAoKQ0KICAgIHBheWFibGUNCiAgICB7DQogICAgICAvL2RlZmF1dCBiZXQgOiBiZXQgb24gcmVkDQogICAgICBiZXRPbkNvbG9yKGZhbHNlKTsNCiAgICB9IA0KDQogIC8vKioqLy9HdWFyYW50ZWVzIHRoYXQgZ2FtYmxlIGlzIHVuZGVyIG1heCBiZXQgYW5kIGFib3ZlIG1pbi4NCiAgLy8gcmV0dXJucyBiZXQgdmFsdWUNCiAgZnVuY3Rpb24gY2hlY2tCZXRWYWx1ZSgpIHByaXZhdGUgcmV0dXJucyh1aW50MjU2KQ0KICB7DQogICAgdWludDI1NiBwbGF5ZXJCZXRWYWx1ZTsNCiAgICBpZiAobXNnLnZhbHVlIDwgbWluR2FtYmxlKSB0aHJvdzsNCiAgICBpZiAobXNnLnZhbHVlID4gbWF4R2FtYmxlKXsNCiAgICAgIHBsYXllckJldFZhbHVlID0gbWF4R2FtYmxlOw0KICAgIH0NCiAgICBlbHNlew0KICAgICAgcGxheWVyQmV0VmFsdWU9bXNnLnZhbHVlOw0KICAgIH0NCiAgICByZXR1cm4gcGxheWVyQmV0VmFsdWU7DQogIH0NCg0KDQogIC8vY2hlY2sgbnVtYmVyIG9mIGJldHMgaW4gYmxvY2sgKHRvIHByZXZlbnQgbWluZXIgY2hlYXRpbmcpDQogIG1vZGlmaWVyIGNoZWNrTmJCZXRzQ3VycmVudEJsb2NrKCkNCiAgew0KICAgIGlmIChnYW1ibGVzLmxlbmd0aCE9MCAmJiBibG9jay5udW1iZXI9PWdhbWJsZXNbZ2FtYmxlcy5sZW5ndGgtMV0uYmxvY2tOdW1iZXIpIG5iQmV0c0N1cnJlbnRCbG9jays9MTsNCiAgICBlbHNlIG5iQmV0c0N1cnJlbnRCbG9jaz0wOw0KICAgIGlmIChuYkJldHNDdXJyZW50QmxvY2s+PW1heEJldHNQZXJCbG9jaykgdGhyb3c7DQogICAgXzsNCiAgfQ0KDQoNCiAgLy9GdW5jdGlvbiByZWNvcmQgYmV0IGNhbGxlZCBieSBhbGwgb3RoZXJzIGJldHRpbmcgZnVuY3Rpb25zDQogIGZ1bmN0aW9uIHBsYWNlQmV0KEJldFR5cGVzIGJldFR5cGVfLCB1aW50OCBpbnB1dF8pIHByaXZhdGUNCiAgew0KICAgIGlmIChwbGF5ZXJTdGF0dXNbbXNnLnNlbmRlcl0hPVN0YXR1cy53YWl0aW5nRm9yQmV0KQ0KICAgICAgew0KCVNwaW5UaGVXaGVlbChtc2cuc2VuZGVyKTsNCiAgICAgIH0NCiAgICAvL09uY2UgdGhpcyBpcyBkb25lLCB3ZSBjYW4gcmVjb3JkIHRoZSBuZXcgYmV0DQogICAgcGxheWVyU3RhdHVzW21zZy5zZW5kZXJdPVN0YXR1cy53YWl0aW5nRm9yU3BpbjsNCiAgICBnYW1ibGVJbmRleFttc2cuc2VuZGVyXT1nYW1ibGVzLmxlbmd0aDsNCiAgICB0b3RhbEdhbWJsZXMrKzsNCiAgICAvL2FkYXB0cyB3YWdlciB0byBjYXNpbm8gbGltaXRzDQogICAgdWludDI1NiBiZXRWYWx1ZSA9IGNoZWNrQmV0VmFsdWUoKTsNCiAgICBnYW1ibGVzLnB1c2goR2FtYmxlKG1zZy5zZW5kZXIsIGZhbHNlLCBmYWxzZSwgYmV0VHlwZV8sIGlucHV0XywgYmV0VmFsdWUsIGJsb2NrLm51bWJlciwgMCwgMzcpKTsgLy8zNyBpbmRpY2F0ZXMgbm90IHNwaW5uZWQgeWV0DQogICAgLy9yZWZ1bmQgZXhjZXNzIGJldCAoYXQgbGFzdCBzdGVwIHZzIHJlLWVudHJ5KQ0KICAgIGlmIChiZXRWYWx1ZSA8IG1zZy52YWx1ZSkgDQogICAgICB7DQoJaWYgKG1zZy5zZW5kZXIuc2VuZChtc2cudmFsdWUtYmV0VmFsdWUpPT1mYWxzZSkgdGhyb3c7DQogICAgICB9DQogIH0NCg0KDQogIC8vKioqLy9iZXQgb24gTnVtYmVyCQ0KICBmdW5jdGlvbiBiZXRPbk51bWJlcih1aW50OCBudW1iZXJDaG9zZW4pDQogICAgcGF5YWJsZQ0KICAgIG9ubHlBY3RpdmUNCiAgICBjaGVja05iQmV0c0N1cnJlbnRCbG9jaw0KICB7DQogICAgLy9jaGVjayB0aGF0IG51bWJlciBjaG9zZW4gaXMgdmFsaWQgYW5kIHJlY29yZHMgYmV0DQogICAgaWYgKG51bWJlckNob3Nlbj4zNikgdGhyb3c7DQogICAgcGxhY2VCZXQoQmV0VHlwZXMubnVtYmVyLCBudW1iZXJDaG9zZW4pOw0KICB9DQoNCiAgLy8qKiovLyBmdW5jdGlvbiBiZXRPbkNvbG9yDQogIC8vYmV0IHR5cGUgOiBjb2xvcg0KICAvL2lucHV0IDogMCBmb3IgcmVkDQogIC8vaW5wdXQgOiAxIGZvciBibGFjaw0KICBmdW5jdGlvbiBiZXRPbkNvbG9yKGJvb2wgQmxhY2spDQogICAgcGF5YWJsZQ0KICAgIG9ubHlBY3RpdmUNCiAgICBjaGVja05iQmV0c0N1cnJlbnRCbG9jaw0KICB7DQogICAgdWludDggaW5wdXQ7DQogICAgaWYgKCFCbGFjaykgDQogICAgICB7IA0KCWlucHV0PTA7DQogICAgICB9DQogICAgZWxzZXsNCiAgICAgIGlucHV0PTE7DQogICAgfQ0KICAgIHBsYWNlQmV0KEJldFR5cGVzLmNvbG9yLCBpbnB1dCk7DQogIH0NCg0KICAvLyoqKi8vIGZ1bmN0aW9uIGJldE9uTG93X0hpZ2gNCiAgLy9iZXQgdHlwZSA6IGxvd2hpZ2gNCiAgLy9pbnB1dCA6IDAgZm9yIGxvdw0KICAvL2lucHV0IDogMSBmb3IgbG93DQogIGZ1bmN0aW9uIGJldE9uTG93SGlnaChib29sIEhpZ2gpDQogICAgcGF5YWJsZQ0KICAgIG9ubHlBY3RpdmUNCiAgICBjaGVja05iQmV0c0N1cnJlbnRCbG9jaw0KICB7DQogICAgdWludDggaW5wdXQ7DQogICAgaWYgKCFIaWdoKSANCiAgICAgIHsgDQoJaW5wdXQ9MDsNCiAgICAgIH0NCiAgICBlbHNlIA0KICAgICAgew0KCWlucHV0PTE7DQogICAgICB9DQogICAgcGxhY2VCZXQoQmV0VHlwZXMubG93aGlnaCwgaW5wdXQpOw0KICB9DQoNCiAgLy8qKiovLyBmdW5jdGlvbiBiZXRPbk9kZEV2ZW4NCiAgLy9iZXQgdHlwZSA6IHBhcml0eQ0KICAvL2lucHV0IDogMCBmb3IgZXZlbg0KICAvL2lucHV0IDogMSBmb3Igb2RkDQogIGZ1bmN0aW9uIGJldE9uT2RkRXZlbihib29sIE9kZCkNCiAgICBwYXlhYmxlDQogICAgb25seUFjdGl2ZQ0KICAgIGNoZWNrTmJCZXRzQ3VycmVudEJsb2NrDQogIHsNCiAgICB1aW50OCBpbnB1dDsNCiAgICBpZiAoIU9kZCkgDQogICAgICB7IA0KCWlucHV0PTA7DQogICAgICB9DQogICAgZWxzZXsNCiAgICAgIGlucHV0PTE7DQogICAgfQ0KICAgIHBsYWNlQmV0KEJldFR5cGVzLnBhcml0eSwgaW5wdXQpOw0KICB9DQoNCiAgLy8qKiovLyBmdW5jdGlvbiBiZXRPbkRvemVuDQogIC8vICAgICAvL2JldCB0eXBlIDogZG96ZW4NCiAgLy8gICAgIC8vaW5wdXQgOiAwIGZvciBmaXJzdCBkb3plbg0KICAvLyAgICAgLy9pbnB1dCA6IDEgZm9yIHNlY29uZCBkb3plbg0KICAvLyAgICAgLy9pbnB1dCA6IDIgZm9yIHRoaXJkIGRvemVuDQogIGZ1bmN0aW9uIGJldE9uRG96ZW4odWludDggZG96ZW5fc2VsZWN0ZWRfMF8xXzIpDQogICAgcGF5YWJsZQ0KICAgIG9ubHlBY3RpdmUNCiAgICBjaGVja05iQmV0c0N1cnJlbnRCbG9jaw0KICB7DQogICAgaWYgKGRvemVuX3NlbGVjdGVkXzBfMV8yID4gMikgdGhyb3c7DQogICAgcGxhY2VCZXQoQmV0VHlwZXMuZG96ZW4sIGRvemVuX3NlbGVjdGVkXzBfMV8yKTsNCiAgfQ0KDQoNCiAgLy8gLy8qKiovLyBmdW5jdGlvbiBiZXRPbkNvbHVtbg0KICAvLyAgICAgLy9iZXQgdHlwZSA6IGNvbHVtbg0KICAvLyAgICAgLy9pbnB1dCA6IDAgZm9yIGZpcnN0IGNvbHVtbg0KICAvLyAgICAgLy9pbnB1dCA6IDEgZm9yIHNlY29uZCBjb2x1bW4NCiAgLy8gICAgIC8vaW5wdXQgOiAyIGZvciB0aGlyZCBjb2x1bW4NCiAgZnVuY3Rpb24gYmV0T25Db2x1bW4odWludDggY29sdW1uX3NlbGVjdGVkXzBfMV8yKQ0KICAgIHBheWFibGUNCiAgICBvbmx5QWN0aXZlDQogICAgY2hlY2tOYkJldHNDdXJyZW50QmxvY2sNCiAgew0KICAgIGlmIChjb2x1bW5fc2VsZWN0ZWRfMF8xXzIgPiAyKSB0aHJvdzsNCiAgICBwbGFjZUJldChCZXRUeXBlcy5jb2x1bW4sIGNvbHVtbl9zZWxlY3RlZF8wXzFfMik7DQogIH0NCg0KICAvLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCiAgLy8gU3BpbiBUaGUgV2hlZWwgJiBDaGVjayBSZXN1bHQgRlVOQ1RJT05TLy8NCiAgLy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoNCiAgZXZlbnQgV2luKGFkZHJlc3MgcGxheWVyLCB1aW50OCByZXN1bHQsIHVpbnQgdmFsdWVfd29uLCBieXRlczMyIGJIYXNoLCBieXRlczMyIHNoYTNQbGF5ZXIsIHVpbnQgZ2FtYmxlSWQsIHVpbnQgYmV0KTsNCiAgZXZlbnQgTG9zcyhhZGRyZXNzIHBsYXllciwgdWludDggcmVzdWx0LCB1aW50IHZhbHVlX2xvc3MsIGJ5dGVzMzIgYkhhc2gsIGJ5dGVzMzIgc2hhM1BsYXllciwgdWludCBnYW1ibGVJZCwgdWludCBiZXQpOw0KDQogIC8vKioqLy9mdW5jdGlvbiB0byBzcGluIGNhbGxhYmxlDQogIC8vIG5vIGV0aCBhbGxvd2VkDQogIGZ1bmN0aW9uIHNwaW5UaGVXaGVlbChhZGRyZXNzIHNwaW5fZm9yX3BsYXllcikNCiAgew0KICAgIFNwaW5UaGVXaGVlbChzcGluX2Zvcl9wbGF5ZXIpOw0KICB9DQoNCg0KICBmdW5jdGlvbiBTcGluVGhlV2hlZWwoYWRkcmVzcyBwbGF5ZXJTcGlubmVkKSBwcml2YXRlDQogIHsNCiAgICBpZiAocGxheWVyU3Bpbm5lZD09MCkNCiAgICAgIHsNCglwbGF5ZXJTcGlubmVkPW1zZy5zZW5kZXI7ICAgICAgICAgLy9pZiBubyBpbmRleCBzcGlucyBmb3IgdGhlIHNlbmRlcg0KICAgICAgfQ0KDQogICAgLy9jaGVjayB0aGF0IHBsYXllciBoYXMgdG8gc3Bpbg0KICAgIGlmIChwbGF5ZXJTdGF0dXNbcGxheWVyU3Bpbm5lZF0hPVN0YXR1cy53YWl0aW5nRm9yU3BpbikgdGhyb3c7DQogICAgLy9yZWR1bmRlbnQgZG91YmxlIGNoZWNrIDogY2hlY2sgdGhhdCBnYW1ibGUgaGFzIG5vdCBiZWVuIHNwaW5uZWQgYWxyZWFkeQ0KICAgIGlmIChnYW1ibGVzW2dhbWJsZUluZGV4W3BsYXllclNwaW5uZWRdXS5zcGlubmVkPT10cnVlKSB0aHJvdzsNCiAgICAvL2NoZWNrIHRoYXQgdGhlIHBsYXllciB3YWl0ZWQgZm9yIHRoZSBkZWxheSBiZWZvcmUgc3Bpbg0KICAgIC8vYW5kIGFsc28gdGhhdCB0aGUgYmV0IGlzIG5vdCBleHBpcmVkDQogICAgdWludCBwbGF5ZXJibG9jayA9IGdhbWJsZXNbZ2FtYmxlSW5kZXhbcGxheWVyU3Bpbm5lZF1dLmJsb2NrTnVtYmVyOw0KICAgIC8vdG9vIGVhcmx5IHRvIHNwaW4NCiAgICBpZiAoYmxvY2subnVtYmVyPD1wbGF5ZXJibG9jaytibG9ja0RlbGF5KSB0aHJvdzsNCiAgICAvL3RvbyBsYXRlLCBiZXQgZXhwaXJlZCwgcGxheWVyIGxvc3QNCiAgICBlbHNlIGlmIChibG9jay5udW1iZXI+cGxheWVyYmxvY2srYmxvY2tFeHBpcmF0aW9uKSAgc29sdmVCZXQocGxheWVyU3Bpbm5lZCwgMjU1LCBmYWxzZSwgMSwgMCwgMCkgOw0KICAgIC8vc3BpbiAhDQogICAgZWxzZQ0KICAgICAgew0KCXVpbnQ4IHdoZWVsUmVzdWx0Ow0KCS8vU3BpbiB0aGUgd2hlZWwsIA0KCWJ5dGVzMzIgYmxvY2tIYXNoPSBibG9jay5ibG9ja2hhc2gocGxheWVyYmxvY2srYmxvY2tEZWxheSk7DQoJLy9zZWN1cml0eSBjaGVjayB0aGF0IHRoZSBIYXNoIGlzIG5vdCBlbXB0eQ0KCWlmIChibG9ja0hhc2g9PTApIHRocm93Ow0KCS8vIGdlbmVyYXRlIHRoZSBoYXNoIGZvciBSTkcgZnJvbSB0aGUgYmxvY2tIYXNoIGFuZCB0aGUgcGxheWVyJ3MgYWRkcmVzcw0KCWJ5dGVzMzIgc2hhUGxheWVyID0gc2hhMyhwbGF5ZXJTcGlubmVkLCBibG9ja0hhc2gsIHRoaXMpOw0KCS8vIGdldCB0aGUgZmluYWwgd2hlZWwgcmVzdWx0DQoJd2hlZWxSZXN1bHQgPSB1aW50OCh1aW50MjU2KHNoYVBsYXllciklMzcpOw0KCS8vY2hlY2sgcmVzdWx0IGFnYWluc3QgYmV0IGFuZCBwYXkgaWYgd2luDQoJY2hlY2tCZXRSZXN1bHQod2hlZWxSZXN1bHQsIHBsYXllclNwaW5uZWQsIGJsb2NrSGFzaCwgc2hhUGxheWVyKTsNCiAgICAgIH0NCiAgfQ0KICAgIA0KDQogIC8vQ0hFQ0sgQkVUUyBGVU5DVElPTlMgcHJpdmF0ZQ0KICBmdW5jdGlvbiBjaGVja0JldFJlc3VsdCh1aW50OCByZXN1bHQsIGFkZHJlc3MgcGxheWVyLCBieXRlczMyIGJsb2NrSGFzaCwgYnl0ZXMzMiBzaGFQbGF5ZXIpIHByaXZhdGUNCiAgew0KICAgIEJldFR5cGVzIGJldFR5cGU9Z2FtYmxlc1tnYW1ibGVJbmRleFtwbGF5ZXJdXS5iZXRUeXBlOw0KICAgIC8vYmV0IG9uIE51bWJlcg0KICAgIGlmIChiZXRUeXBlPT1CZXRUeXBlcy5udW1iZXIpIGNoZWNrQmV0TnVtYmVyKHJlc3VsdCwgcGxheWVyLCBibG9ja0hhc2gsIHNoYVBsYXllcik7DQogICAgZWxzZSBpZiAoYmV0VHlwZT09QmV0VHlwZXMucGFyaXR5KSBjaGVja0JldFBhcml0eShyZXN1bHQsIHBsYXllciwgYmxvY2tIYXNoLCBzaGFQbGF5ZXIpOw0KICAgIGVsc2UgaWYgKGJldFR5cGU9PUJldFR5cGVzLmNvbG9yKSBjaGVja0JldENvbG9yKHJlc3VsdCwgcGxheWVyLCBibG9ja0hhc2gsIHNoYVBsYXllcik7DQogICAgZWxzZSBpZiAoYmV0VHlwZT09QmV0VHlwZXMubG93aGlnaCkgY2hlY2tCZXRMb3doaWdoKHJlc3VsdCwgcGxheWVyLCBibG9ja0hhc2gsIHNoYVBsYXllcik7DQogICAgZWxzZSBpZiAoYmV0VHlwZT09QmV0VHlwZXMuZG96ZW4pIGNoZWNrQmV0RG96ZW4ocmVzdWx0LCBwbGF5ZXIsIGJsb2NrSGFzaCwgc2hhUGxheWVyKTsNCiAgICBlbHNlIGlmIChiZXRUeXBlPT1CZXRUeXBlcy5jb2x1bW4pIGNoZWNrQmV0Q29sdW1uKHJlc3VsdCwgcGxheWVyLCBibG9ja0hhc2gsIHNoYVBsYXllcik7DQogIH0NCg0KICAvLyBmdW5jdGlvbiBzb2x2ZSBCZXQgb25jZSByZXN1bHQgaXMgZGV0ZXJtaW5lZCA6IHNlbmRzIHRvIHdpbm5lciwgYWRkcyBsb3NzIHRvIHByb2ZpdA0KICBmdW5jdGlvbiBzb2x2ZUJldChhZGRyZXNzIHBsYXllciwgdWludDggcmVzdWx0LCBib29sIHdpbiwgdWludDggbXVsdGlwbGllciwgYnl0ZXMzMiBibG9ja0hhc2gsIGJ5dGVzMzIgc2hhUGxheWVyKSBwcml2YXRlDQogIHsNCiAgICAvL1VwZGF0ZSBzdGF0dXMgYW5kIHJlY29yZCBzcGlubmVkDQogICAgcGxheWVyU3RhdHVzW3BsYXllcl09U3RhdHVzLndhaXRpbmdGb3JCZXQ7DQogICAgZ2FtYmxlc1tnYW1ibGVJbmRleFtwbGF5ZXJdXS53aGVlbFJlc3VsdD1yZXN1bHQ7DQogICAgZ2FtYmxlc1tnYW1ibGVJbmRleFtwbGF5ZXJdXS5zcGlubmVkPXRydWU7DQogICAgZ2FtYmxlc1tnYW1ibGVJbmRleFtwbGF5ZXJdXS5ibG9ja1NwaW5uZWQ9YmxvY2subnVtYmVyOw0KICAgIHVpbnQgYmV0X3YgPSBnYW1ibGVzW2dhbWJsZUluZGV4W3BsYXllcl1dLndhZ2VyOw0KCQ0KICAgIGlmICh3aW4pDQogICAgICB7DQoJZ2FtYmxlc1tnYW1ibGVJbmRleFtwbGF5ZXJdXS53aW49dHJ1ZTsNCgl1aW50IHdpbl92ID0gKG11bHRpcGxpZXItMSkqYmV0X3Y7DQoJV2luKHBsYXllciwgcmVzdWx0LCB3aW5fdiwgYmxvY2tIYXNoLCBzaGFQbGF5ZXIsIGdhbWJsZUluZGV4W3BsYXllcl0sIGJldF92KTsNCgkvL3NlbmQgd2luIQ0KCS8vc2FmZSBzZW5kIHZzIHBvdGVudGlhbCBjYWxsc3RhY2sgb3ZlcmZsb3dlZCBzcGlucw0KCWlmIChwbGF5ZXIuc2VuZCh3aW5fditiZXRfdik9PWZhbHNlKSB0aHJvdzsNCiAgICAgIH0NCiAgICBlbHNlDQogICAgICB7DQoJTG9zcyhwbGF5ZXIsIHJlc3VsdCwgYmV0X3YtMSwgYmxvY2tIYXNoLCBzaGFQbGF5ZXIsIGdhbWJsZUluZGV4W3BsYXllcl0sIGJldF92KTsNCgkvL3NlbmQgMSB3ZWkgdG8gY29uZmlybSBzcGluIGlmIGxvc3MNCglpZiAocGxheWVyLnNlbmQoMSk9PWZhbHNlKSB0aHJvdzsNCiAgICAgIH0NCg0KICB9DQoNCiAgLy8gY2hlY2tiZXRvbiBudW1iZXIoaW5wdXQpDQogIC8vIGJldCB0eXBlIDogbnVtYmVyDQogIC8vIGlucHV0IDogY2hvc2VuIG51bWJlcg0KICBmdW5jdGlvbiBjaGVja0JldE51bWJlcih1aW50OCByZXN1bHQsIGFkZHJlc3MgcGxheWVyLCBieXRlczMyIGJsb2NrSGFzaCwgYnl0ZXMzMiBzaGFQbGF5ZXIpIHByaXZhdGUNCiAgew0KICAgIGJvb2wgd2luOw0KICAgIC8vd2luDQogICAgaWYgKHJlc3VsdD09Z2FtYmxlc1tnYW1ibGVJbmRleFtwbGF5ZXJdXS5pbnB1dCkNCiAgICAgIHsNCgl3aW49dHJ1ZTsgIA0KICAgICAgfQ0KICAgIHNvbHZlQmV0KHBsYXllciwgcmVzdWx0LHdpbiwzNiwgYmxvY2tIYXNoLCBzaGFQbGF5ZXIpOw0KICB9DQoNCg0KICAvLyBjaGVja2JldCBvbiBvZGRldmVuDQogIC8vIGJldCB0eXBlIDogcGFyaXR5DQogIC8vIGlucHV0IDogMCBmb3IgZXZlbiwgMSBmb3Igb2RkDQogIGZ1bmN0aW9uIGNoZWNrQmV0UGFyaXR5KHVpbnQ4IHJlc3VsdCwgYWRkcmVzcyBwbGF5ZXIsIGJ5dGVzMzIgYmxvY2tIYXNoLCBieXRlczMyIHNoYVBsYXllcikgcHJpdmF0ZQ0KICB7DQogICAgYm9vbCB3aW47DQogICAgLy93aW4NCiAgICBpZiAocmVzdWx0JTI9PWdhbWJsZXNbZ2FtYmxlSW5kZXhbcGxheWVyXV0uaW5wdXQgJiYgcmVzdWx0IT0wKQ0KICAgICAgew0KCXdpbj10cnVlOyAgICAgICAgICAgICAgICANCiAgICAgIH0NCiAgICBzb2x2ZUJldChwbGF5ZXIscmVzdWx0LHdpbiwyLCBibG9ja0hhc2gsIHNoYVBsYXllcik7DQogIH0NCiAgICANCiAgLy8gY2hlY2tiZXQgb24gbG93aGlnaA0KICAvLyBiZXQgdHlwZSA6IGxvd2hpZ2gNCiAgLy8gaW5wdXQgOiAwIGxvdywgMSBoaWdoDQogIGZ1bmN0aW9uIGNoZWNrQmV0TG93aGlnaCh1aW50OCByZXN1bHQsIGFkZHJlc3MgcGxheWVyLCBieXRlczMyIGJsb2NrSGFzaCwgYnl0ZXMzMiBzaGFQbGF5ZXIpIHByaXZhdGUNCiAgew0KICAgIGJvb2wgd2luOw0KICAgIC8vd2luDQogICAgaWYgKHJlc3VsdCE9MCAmJiAoIChyZXN1bHQ8MTkgJiYgZ2FtYmxlc1tnYW1ibGVJbmRleFtwbGF5ZXJdXS5pbnB1dD09MCkNCgkJICAgICAgIHx8IChyZXN1bHQ+MTggJiYgZ2FtYmxlc1tnYW1ibGVJbmRleFtwbGF5ZXJdXS5pbnB1dD09MSkNCgkJICAgICAgICkgKQ0KICAgICAgew0KCXdpbj10cnVlOw0KICAgICAgfQ0KICAgIHNvbHZlQmV0KHBsYXllcixyZXN1bHQsd2luLDIsIGJsb2NrSGFzaCwgc2hhUGxheWVyKTsNCiAgfQ0KDQogIC8vIGNoZWNrYmV0IG9uIGNvbG9yDQogIC8vIGJldCB0eXBlIDogY29sb3INCiAgLy8gaW5wdXQgOiAwIHJlZCwgMSBibGFjaw0KICB1aW50WzE4XSByZWRfbGlzdD1bMSwzLDUsNyw5LDEyLDE0LDE2LDE4LDE5LDIxLDIzLDI1LDI3LDMwLDMyLDM0LDM2XTsNCiAgZnVuY3Rpb24gY2hlY2tCZXRDb2xvcih1aW50OCByZXN1bHQsIGFkZHJlc3MgcGxheWVyLCBieXRlczMyIGJsb2NrSGFzaCwgYnl0ZXMzMiBzaGFQbGF5ZXIpIHByaXZhdGUNCiAgew0KICAgIGJvb2wgcmVkOw0KICAgIC8vY2hlY2sgaWYgcmVkDQogICAgZm9yICh1aW50OCBrOyBrPDE4OyBrKyspDQogICAgICB7IA0KCWlmIChyZWRfbGlzdFtrXT09cmVzdWx0KSANCgkgIHsgDQoJICAgIHJlZD10cnVlOyANCgkgICAgYnJlYWs7DQoJICB9DQogICAgICB9DQogICAgYm9vbCB3aW47DQogICAgLy93aW4NCiAgICBpZiAoIHJlc3VsdCE9MA0KCSAmJiAoIChnYW1ibGVzW2dhbWJsZUluZGV4W3BsYXllcl1dLmlucHV0PT0wICYmIHJlZCkgIA0KCSAgICAgIHx8ICggZ2FtYmxlc1tnYW1ibGVJbmRleFtwbGF5ZXJdXS5pbnB1dD09MSAmJiAhcmVkKSAgKSApDQogICAgICB7DQoJd2luPXRydWU7DQogICAgICB9DQogICAgc29sdmVCZXQocGxheWVyLHJlc3VsdCx3aW4sMiwgYmxvY2tIYXNoLCBzaGFQbGF5ZXIpOw0KICB9DQoNCiAgLy8gY2hlY2tiZXQgb24gZG96ZW4NCiAgLy8gYmV0IHR5cGUgOiBkb3plbg0KICAvLyBpbnB1dCA6IDAgZmlyc3QsIDEgc2Vjb25kLCAyIHRoaXJkDQogIGZ1bmN0aW9uIGNoZWNrQmV0RG96ZW4odWludDggcmVzdWx0LCBhZGRyZXNzIHBsYXllciwgYnl0ZXMzMiBibG9ja0hhc2gsIGJ5dGVzMzIgc2hhUGxheWVyKSBwcml2YXRlDQogIHsgDQogICAgYm9vbCB3aW47DQogICAgLy93aW4gb24gZmlyc3QgZG96ZW4NCiAgICBpZiAoIHJlc3VsdCE9MCAmJg0KCSAoIChyZXN1bHQ8MTMgJiYgZ2FtYmxlc1tnYW1ibGVJbmRleFtwbGF5ZXJdXS5pbnB1dD09MCkNCgkgICB8fA0KCSAgIChyZXN1bHQ+MTIgJiYgcmVzdWx0PDI1ICYmIGdhbWJsZXNbZ2FtYmxlSW5kZXhbcGxheWVyXV0uaW5wdXQ9PTEpDQoJICAgfHwNCgkgICAocmVzdWx0PjI0ICYmIGdhbWJsZXNbZ2FtYmxlSW5kZXhbcGxheWVyXV0uaW5wdXQ9PTIpICkgKQ0KICAgICAgew0KCXdpbj10cnVlOyAgICAgICAgICAgICAgICANCiAgICAgIH0NCiAgICBzb2x2ZUJldChwbGF5ZXIscmVzdWx0LHdpbiwzLCBibG9ja0hhc2gsIHNoYVBsYXllcik7DQogIH0NCg0KICAvLyBjaGVja2JldCBvbiBjb2x1bW4NCiAgLy8gYmV0IHR5cGUgOiBjb2x1bW4NCiAgLy8gaW5wdXQgOiAwIGZpcnN0LCAxIHNlY29uZCwgMiB0aGlyZA0KICBmdW5jdGlvbiBjaGVja0JldENvbHVtbih1aW50OCByZXN1bHQsIGFkZHJlc3MgcGxheWVyLCBieXRlczMyIGJsb2NrSGFzaCwgYnl0ZXMzMiBzaGFQbGF5ZXIpIHByaXZhdGUNCiAgew0KICAgIGJvb2wgd2luOw0KICAgIC8vd2luDQogICAgaWYgKCByZXN1bHQhPTANCgkgJiYgKCAoZ2FtYmxlc1tnYW1ibGVJbmRleFtwbGF5ZXJdXS5pbnB1dD09MCAmJiByZXN1bHQlMz09MSkgIA0KCSAgICAgIHx8ICggZ2FtYmxlc1tnYW1ibGVJbmRleFtwbGF5ZXJdXS5pbnB1dD09MSAmJiByZXN1bHQlMz09MikNCgkgICAgICB8fCAoIGdhbWJsZXNbZ2FtYmxlSW5kZXhbcGxheWVyXV0uaW5wdXQ9PTIgJiYgcmVzdWx0JTM9PTApICApICkNCiAgICAgIHsNCgl3aW49dHJ1ZTsNCiAgICAgIH0NCiAgICBzb2x2ZUJldChwbGF5ZXIscmVzdWx0LHdpbiwzLCBibG9ja0hhc2gsIHNoYVBsYXllcik7DQogIH0NCg0KDQogIGZ1bmN0aW9uIGNoZWNrTXlCZXQoYWRkcmVzcyBwbGF5ZXIpIGNvbnN0YW50IHJldHVybnMoU3RhdHVzIHBsYXllcl9zdGF0dXMsIEJldFR5cGVzIGJldHR5cGUsIHVpbnQ4IGlucHV0LCB1aW50IHZhbHVlLCB1aW50OCByZXN1bHQsIGJvb2wgd2hlZWxzcGlubmVkLCBib29sIHdpbiwgdWludCBibG9ja05iLCB1aW50IGJsb2NrU3BpbiwgdWludCBnYW1ibGVJRCkNCiAgew0KICAgIHBsYXllcl9zdGF0dXM9cGxheWVyU3RhdHVzW3BsYXllcl07DQogICAgYmV0dHlwZT1nYW1ibGVzW2dhbWJsZUluZGV4W3BsYXllcl1dLmJldFR5cGU7DQogICAgaW5wdXQ9Z2FtYmxlc1tnYW1ibGVJbmRleFtwbGF5ZXJdXS5pbnB1dDsNCiAgICB2YWx1ZT1nYW1ibGVzW2dhbWJsZUluZGV4W3BsYXllcl1dLndhZ2VyOw0KICAgIHJlc3VsdD1nYW1ibGVzW2dhbWJsZUluZGV4W3BsYXllcl1dLndoZWVsUmVzdWx0Ow0KICAgIHdoZWVsc3Bpbm5lZD1nYW1ibGVzW2dhbWJsZUluZGV4W3BsYXllcl1dLnNwaW5uZWQ7DQogICAgd2luPWdhbWJsZXNbZ2FtYmxlSW5kZXhbcGxheWVyXV0ud2luOw0KICAgIGJsb2NrTmI9Z2FtYmxlc1tnYW1ibGVJbmRleFtwbGF5ZXJdXS5ibG9ja051bWJlcjsNCiAgICBibG9ja1NwaW49Z2FtYmxlc1tnYW1ibGVJbmRleFtwbGF5ZXJdXS5ibG9ja1NwaW5uZWQ7DQogICAgZ2FtYmxlSUQ9Z2FtYmxlSW5kZXhbcGxheWVyXTsNCiAgICByZXR1cm47DQogIH0NCiAgICANCiAgZnVuY3Rpb24gZ2V0R2FtYmxlc0xpc3QodWludDI1NiBpbmRleCkgY29uc3RhbnQgcmV0dXJucyhhZGRyZXNzIHBsYXllciwgQmV0VHlwZXMgYmV0dHlwZSwgdWludDggaW5wdXQsIHVpbnQgdmFsdWUsIHVpbnQ4IHJlc3VsdCwgYm9vbCB3aGVlbHNwaW5uZWQsIGJvb2wgd2luLCB1aW50IGJsb2NrTmIsIHVpbnQgYmxvY2tTcGluKQ0KICB7DQogICAgcGxheWVyPWdhbWJsZXNbaW5kZXhdLnBsYXllcjsNCiAgICBiZXR0eXBlPWdhbWJsZXNbaW5kZXhdLmJldFR5cGU7DQogICAgaW5wdXQ9Z2FtYmxlc1tpbmRleF0uaW5wdXQ7DQogICAgdmFsdWU9Z2FtYmxlc1tpbmRleF0ud2FnZXI7DQogICAgcmVzdWx0PWdhbWJsZXNbaW5kZXhdLndoZWVsUmVzdWx0Ow0KICAgIHdoZWVsc3Bpbm5lZD1nYW1ibGVzW2luZGV4XS5zcGlubmVkOw0KICAgIHdpbj1nYW1ibGVzW2luZGV4XS53aW47DQogICAgYmxvY2tOYj1nYW1ibGVzW2luZGV4XS5ibG9ja051bWJlcjsNCiAgICBibG9ja1NwaW49Z2FtYmxlc1tpbmRleF0uYmxvY2tTcGlubmVkOw0KICAgIHJldHVybjsNCiAgfQ0KDQp9IC8vZW5kIG9mIGNvbnRyYWN0'