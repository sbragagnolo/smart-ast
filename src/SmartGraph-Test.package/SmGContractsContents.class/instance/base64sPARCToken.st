base 64 content
base64sPARCToken
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC44Ow0KDQovL0tpbmdzIERpc3RyaWJ1dGVkIFN5c3RlbXMNCi8vRVJDMjAgQ29tcGxpYW50IFNQQVJDIFRva2VuDQpjb250cmFjdCBTUEFSQ1Rva2VuIHsNCiAgICBzdHJpbmcgcHVibGljIGNvbnN0YW50IG5hbWUgICAgID0gIlNjaWVuY2UgUG93ZXIgYW5kIFJlc2VhcmNoIENvaW4iOw0KICAgIHN0cmluZyBwdWJsaWMgY29uc3RhbnQgc3ltYm9sICAgPSAiU1BBUkMiOw0KICAgIHVpbnQ4ICBwdWJsaWMgY29uc3RhbnQgZGVjaW1hbHMgPSAxODsNCg0KICAgIHVpbnQyNTYgcHVibGljIHRvdGFsU3VwcGx5ICAgICAgPSAwOw0KICAgIA0KICAgIGJvb2wgICAgcHVibGljIGZyb3plbiAgICAgICAgICAgPSBmYWxzZTsNCiAgICANCiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50MjU2KSkgYWxsb3dlZDsNCiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gdWludDI1NikgYmFsYW5jZXM7DQogICAgDQogICAgbWFwcGluZyhhZGRyZXNzID0+IGJvb2wpIGFkbWluczsNCiAgICBhZGRyZXNzIHB1YmxpYyBvd25lcjsNCiAgICBtb2RpZmllciBvbmx5T3duZXIoKSB7DQogICAgICAgIGlmIChtc2cuc2VuZGVyICE9IG93bmVyKSB7DQogICAgICAgICAgICB0aHJvdzsNCiAgICAgICAgfQ0KICAgICAgICBfOw0KICAgIH0NCiAgICANCiAgICBtb2RpZmllciBvbmx5QWRtaW4oKSB7DQogICAgICAgIGlmICghYWRtaW5zW21zZy5zZW5kZXJdKSB7DQogICAgICAgICAgICB0aHJvdzsNCiAgICAgICAgfQ0KICAgICAgICBfOw0KICAgIH0NCiANCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgIGFkZHJlc3MgaW5kZXhlZCB0bywgdWludDI1NiB2YWx1ZSk7DQogICAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIG93bmVyLCBhZGRyZXNzIGluZGV4ZWQgc3BlbmRlciwgdWludDI1NiB2YWx1ZSk7DQogICAgDQogICAgLy8gQ29uc3RydWN0b3INCiAgICBmdW5jdGlvbiBTUEFSQ1Rva2VuKCkgew0KICAgICAgICBvd25lciA9IG1zZy5zZW5kZXI7DQogICAgICAgIGFkbWluc1ttc2cuc2VuZGVyXSA9IHRydWU7DQogICAgfQ0KICAgIA0KICAgIGZ1bmN0aW9uIGFkZEFkbWluIChhZGRyZXNzIGFkbWluKSBvbmx5T3duZXIgew0KICAgICAgICBhZG1pbnNbYWRtaW5dID0gdHJ1ZTsNCiAgICB9DQogICAgDQogICAgZnVuY3Rpb24gcmVtb3ZlQWRtaW4gKGFkZHJlc3MgYWRtaW4pIG9ubHlPd25lciB7DQogICAgICAgIGFkbWluc1thZG1pbl0gPSBmYWxzZTsNCiAgICB9DQogICAgDQogICAgZnVuY3Rpb24gdG90YWxTdXBwbHkoKSBleHRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7DQogICAgICAgIHJldHVybiB0b3RhbFN1cHBseTsNCiAgICB9DQogICAgDQogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3Mgb3duZXIpIGV4dGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsNCiAgICAgICAgcmV0dXJuIGJhbGFuY2VzW293bmVyXTsNCiAgICB9DQogICAgDQogICAgLy8gT3BlbiBzdXBwb3J0IHRpY2tldCB0byBwcm92ZSB0cmFuc2ZlciBtaXN0YWtlIHRvIHVudXNhYmxlIGFkZHJlc3MuDQogICAgLy8gTm90IHRvIGJlIHVzZWQgdG8gZGlzcHV0ZSB0cmFuc2ZlcnMuIE9ubHkgZm9yIHRyYXBwZWQgdG9rZW5zLg0KICAgIGZ1bmN0aW9uIHJlY292ZXJ5KGFkZHJlc3MgZnJvbSwgYWRkcmVzcyB0bywgdWludDI1NiBhbW91bnQpIG9ubHlBZG1pbiBleHRlcm5hbCB7DQogICAgICAgIGFzc2VydChiYWxhbmNlc1tmcm9tXSA+PSBhbW91bnQpOw0KICAgICAgICBhc3NlcnQoYW1vdW50ID4gMCk7DQogICAgDQogICAgICAgIGJhbGFuY2VzW2Zyb21dIC09IGFtb3VudDsNCiAgICAgICAgYmFsYW5jZXNbdG9dICs9IGFtb3VudDsNCiAgICAgICAgVHJhbnNmZXIoZnJvbSwgdGhpcywgYW1vdW50KTsNCiAgICAgICAgVHJhbnNmZXIodGhpcywgdG8sIGFtb3VudCk7DQogICAgfQ0KIA0KICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBzcGVuZGVyLCB1aW50MjU2IGFtb3VudCkgZXh0ZXJuYWwgcmV0dXJucyAoYm9vbCl7DQogICAgICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bc3BlbmRlcl0gPSBhbW91bnQ7DQogICAgICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIHNwZW5kZXIsIGFtb3VudCk7DQogICAgICAgIA0KICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICB9DQogICAgDQogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgZnJvbSwgYWRkcmVzcyB0bywgdWludDI1NiBhbW91bnQpIGV4dGVybmFsIHJldHVybnMgKGJvb2wpIHsNCiAgICAgICAgaWYoZnJvemVuDQogICAgICAgIHx8IGFtb3VudCA9PSAwDQogICAgICAgIHx8IGFtb3VudCA+IGFsbG93ZWRbZnJvbV1bbXNnLnNlbmRlcl0NCiAgICAgICAgfHwgYW1vdW50ID4gYmFsYW5jZXNbZnJvbV0NCiAgICAgICAgfHwgYW1vdW50ICsgYmFsYW5jZXNbdG9dIDwgYmFsYW5jZXNbdG9dKXsNCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgfQ0KICAgICAgICANCiAgICAgICAgYmFsYW5jZXNbZnJvbV0gLT0gYW1vdW50Ow0KICAgICAgICBiYWxhbmNlc1t0b10gKz0gYW1vdW50Ow0KICAgICAgICBhbGxvd2VkW2Zyb21dW21zZy5zZW5kZXJdIC09IGFtb3VudDsNCiAgICAgICAgVHJhbnNmZXIoZnJvbSwgdG8sIGFtb3VudCk7DQogICAgICAgIA0KICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICB9DQogDQogICAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3Mgb3duZXIsIGFkZHJlc3Mgc3BlbmRlcikgZXh0ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1Nikgew0KICAgICAgICByZXR1cm4gYWxsb3dlZFtvd25lcl1bc3BlbmRlcl07DQogICAgfQ0KIA0KICAgIGZ1bmN0aW9uIGNyZWF0ZShhZGRyZXNzIHRvLCB1aW50MjU2IGFtb3VudCkgb25seUFkbWluIGV4dGVybmFsIHJldHVybnMgKGJvb2wpIHsNCiAgICAgICAgaWYgKGFtb3VudCA9PSAwDQogICAgICAgIHx8IGJhbGFuY2VzW3RvXSArIGFtb3VudCA8IGJhbGFuY2VzW3RvXSl7DQogICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgIH0NCiAgICAgICAgDQogICAgICAgIHRvdGFsU3VwcGx5ICs9IGFtb3VudDsNCiAgICAgICAgYmFsYW5jZXNbdG9dICs9IGFtb3VudDsNCiAgICAgICAgVHJhbnNmZXIodGhpcywgdG8sIGFtb3VudCk7DQogICAgICAgIA0KICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICB9DQogICAgDQogICAgZnVuY3Rpb24gZGVzdHJveShhZGRyZXNzIGZyb20sIHVpbnQyNTYgYW1vdW50KSBvbmx5QWRtaW4gZXh0ZXJuYWwgcmV0dXJucyAoYm9vbCkgew0KICAgICAgICBpZihhbW91bnQgPT0gMA0KICAgICAgICB8fCBiYWxhbmNlc1tmcm9tXSA8IGFtb3VudCl7DQogICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgIH0NCiAgICAgICAgDQogICAgICAgIGJhbGFuY2VzW2Zyb21dIC09IGFtb3VudDsNCiAgICAgICAgdG90YWxTdXBwbHkgLT0gYW1vdW50Ow0KICAgICAgICBUcmFuc2Zlcihmcm9tLCB0aGlzLCBhbW91bnQpOw0KICAgICAgICANCiAgICAgICAgcmV0dXJuIHRydWU7DQogICAgfQ0KIA0KICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgdG8sIHVpbnQyNTYgYW1vdW50KSBleHRlcm5hbCByZXR1cm5zIChib29sKSB7DQogICAgICAgIGlmIChmcm96ZW4NCiAgICAgICAgfHwgYW1vdW50ID09IDANCiAgICAgICAgfHwgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPCBhbW91bnQNCiAgICAgICAgfHwgYmFsYW5jZXNbdG9dICsgYW1vdW50IDwgYmFsYW5jZXNbdG9dKXsNCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgfQ0KICAgIA0KICAgICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSAtPSBhbW91bnQ7DQogICAgICAgIGJhbGFuY2VzW3RvXSArPSBhbW91bnQ7DQogICAgICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIHRvLCBhbW91bnQpOw0KICAgICAgICANCiAgICAgICAgcmV0dXJuIHRydWU7DQogICAgfQ0KICAgIA0KICAgIGZ1bmN0aW9uIGZyZWV6ZSAoKSBvbmx5QWRtaW4gZXh0ZXJuYWwgew0KICAgICAgICBmcm96ZW4gPSB0cnVlOw0KICAgIH0NCiAgICANCiAgICBmdW5jdGlvbiB1bmZyZWV6ZSAoKSBvbmx5QWRtaW4gZXh0ZXJuYWwgew0KICAgICAgICBmcm96ZW4gPSBmYWxzZTsNCiAgICB9DQogICAgDQogICAgLy8gRG8gbm90IHRyYW5zZmVyIGV0aGVyIHRvIHRoaXMgY29udHJhY3QuDQogICAgZnVuY3Rpb24gKCkgcGF5YWJsZSB7DQogICAgICAgIHRocm93Ow0KICAgIH0NCn0='