base 64 content
base64simpleAuction
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC4xMTsNCg0KY29udHJhY3QgU2ltcGxlQXVjdGlvbiB7DQogICAgLy8gUGFyYW1ldGVycyBvZiB0aGUgYXVjdGlvbi4gVGltZXMgYXJlIGVpdGhlcg0KICAgIC8vIGFic29sdXRlIHVuaXggdGltZXN0YW1wcyAoc2Vjb25kcyBzaW5jZSAxOTcwLTAxLTAxKQ0KICAgIC8vIG9yIHRpbWUgcGVyaW9kcyBpbiBzZWNvbmRzLg0KICAgIGFkZHJlc3MgcHVibGljIGJlbmVmaWNpYXJ5Ow0KICAgIHVpbnQgcHVibGljIGF1Y3Rpb25TdGFydDsNCiAgICB1aW50IHB1YmxpYyBiaWRkaW5nVGltZTsNCg0KICAgIC8vIEN1cnJlbnQgc3RhdGUgb2YgdGhlIGF1Y3Rpb24uDQogICAgYWRkcmVzcyBwdWJsaWMgaGlnaGVzdEJpZGRlcjsNCiAgICB1aW50IHB1YmxpYyBoaWdoZXN0QmlkOw0KDQogICAgLy8gQWxsb3dlZCB3aXRoZHJhd2FscyBvZiBwcmV2aW91cyBiaWRzDQogICAgbWFwcGluZyhhZGRyZXNzID0+IHVpbnQpIHBlbmRpbmdSZXR1cm5zOw0KDQogICAgLy8gU2V0IHRvIHRydWUgYXQgdGhlIGVuZCwgZGlzYWxsb3dzIGFueSBjaGFuZ2UNCiAgICBib29sIGVuZGVkOw0KDQogICAgLy8gRXZlbnRzIHRoYXQgd2lsbCBiZSBmaXJlZCBvbiBjaGFuZ2VzLg0KICAgIGV2ZW50IEhpZ2hlc3RCaWRJbmNyZWFzZWQoYWRkcmVzcyBiaWRkZXIsIHVpbnQgYW1vdW50KTsNCiAgICBldmVudCBBdWN0aW9uRW5kZWQoYWRkcmVzcyB3aW5uZXIsIHVpbnQgYW1vdW50KTsNCg0KICAgIC8vIFRoZSBmb2xsb3dpbmcgaXMgYSBzby1jYWxsZWQgbmF0c3BlYyBjb21tZW50LA0KICAgIC8vIHJlY29nbml6YWJsZSBieSB0aGUgdGhyZWUgc2xhc2hlcy4NCiAgICAvLyBJdCB3aWxsIGJlIHNob3duIHdoZW4gdGhlIHVzZXIgaXMgYXNrZWQgdG8NCiAgICAvLyBjb25maXJtIGEgdHJhbnNhY3Rpb24uDQoNCiAgICAvLy8gQ3JlYXRlIGEgc2ltcGxlIGF1Y3Rpb24gd2l0aCBgX2JpZGRpbmdUaW1lYA0KICAgIC8vLyBzZWNvbmRzIGJpZGRpbmcgdGltZSBvbiBiZWhhbGYgb2YgdGhlDQogICAgLy8vIGJlbmVmaWNpYXJ5IGFkZHJlc3MgYF9iZW5lZmljaWFyeWAuDQogICAgZnVuY3Rpb24gU2ltcGxlQXVjdGlvbigpIHsNCiAgICAgICAgYmVuZWZpY2lhcnkgPSAweGMyNzUyNzUxRTZCOTE3MzZkNWEyZThFMzEzMzZEQzdDNzIyMGU4RkM7DQogICAgICAgIGF1Y3Rpb25TdGFydCA9IG5vdzsNCiAgICAgICAgYmlkZGluZ1RpbWUgPSA2MDA7DQogICAgfQ0KDQogICAgLy8vIEJpZCBvbiB0aGUgYXVjdGlvbiB3aXRoIHRoZSB2YWx1ZSBzZW50DQogICAgLy8vIHRvZ2V0aGVyIHdpdGggdGhpcyB0cmFuc2FjdGlvbi4NCiAgICAvLy8gVGhlIHZhbHVlIHdpbGwgb25seSBiZSByZWZ1bmRlZCBpZiB0aGUNCiAgICAvLy8gYXVjdGlvbiBpcyBub3Qgd29uLg0KICAgIGZ1bmN0aW9uIGJpZCgpIHBheWFibGUgew0KICAgICAgICAvLyBObyBhcmd1bWVudHMgYXJlIG5lY2Vzc2FyeSwgYWxsDQogICAgICAgIC8vIGluZm9ybWF0aW9uIGlzIGFscmVhZHkgcGFydCBvZg0KICAgICAgICAvLyB0aGUgdHJhbnNhY3Rpb24uIFRoZSBrZXl3b3JkIHBheWFibGUNCiAgICAgICAgLy8gaXMgcmVxdWlyZWQgZm9yIHRoZSBmdW5jdGlvbiB0bw0KICAgICAgICAvLyBiZSBhYmxlIHRvIHJlY2VpdmUgRXRoZXIuDQoNCiAgICAgICAgLy8gUmV2ZXJ0IHRoZSBjYWxsIGlmIHRoZSBiaWRkaW5nDQogICAgICAgIC8vIHBlcmlvZCBpcyBvdmVyLg0KICAgICAgICByZXF1aXJlKG5vdyA8PSAoYXVjdGlvblN0YXJ0ICsgYmlkZGluZ1RpbWUpKTsNCg0KICAgICAgICAvLyBJZiB0aGUgYmlkIGlzIG5vdCBoaWdoZXIsIHNlbmQgdGhlDQogICAgICAgIC8vIG1vbmV5IGJhY2suDQogICAgICAgIHJlcXVpcmUobXNnLnZhbHVlID4gaGlnaGVzdEJpZCk7DQoNCiAgICAgICAgaWYgKGhpZ2hlc3RCaWRkZXIgIT0gMCkgew0KICAgICAgICAgICAgLy8gU2VuZGluZyBiYWNrIHRoZSBtb25leSBieSBzaW1wbHkgdXNpbmcNCiAgICAgICAgICAgIC8vIGhpZ2hlc3RCaWRkZXIuc2VuZChoaWdoZXN0QmlkKSBpcyBhIHNlY3VyaXR5IHJpc2sNCiAgICAgICAgICAgIC8vIGJlY2F1c2UgaXQgY2FuIGJlIHByZXZlbnRlZCBieSB0aGUgY2FsbGVyIGJ5IGUuZy4NCiAgICAgICAgICAgIC8vIHJhaXNpbmcgdGhlIGNhbGwgc3RhY2sgdG8gMTAyMy4gSXQgaXMgYWx3YXlzIHNhZmVyDQogICAgICAgICAgICAvLyB0byBsZXQgdGhlIHJlY2lwaWVudHMgd2l0aGRyYXcgdGhlaXIgbW9uZXkgdGhlbXNlbHZlcy4NCiAgICAgICAgICAgIHBlbmRpbmdSZXR1cm5zW2hpZ2hlc3RCaWRkZXJdICs9IGhpZ2hlc3RCaWQ7DQogICAgICAgIH0NCiAgICAgICAgaGlnaGVzdEJpZGRlciA9IG1zZy5zZW5kZXI7DQogICAgICAgIGhpZ2hlc3RCaWQgPSBtc2cudmFsdWU7DQogICAgICAgIEhpZ2hlc3RCaWRJbmNyZWFzZWQobXNnLnNlbmRlciwgbXNnLnZhbHVlKTsNCiAgICB9DQoNCiAgICAvLy8gV2l0aGRyYXcgYSBiaWQgdGhhdCB3YXMgb3ZlcmJpZC4NCiAgICBmdW5jdGlvbiB3aXRoZHJhdygpIHJldHVybnMgKGJvb2wpIHsNCiAgICAgICAgdWludCBhbW91bnQgPSBwZW5kaW5nUmV0dXJuc1ttc2cuc2VuZGVyXTsNCiAgICAgICAgaWYgKGFtb3VudCA+IDApIHsNCiAgICAgICAgICAgIC8vIEl0IGlzIGltcG9ydGFudCB0byBzZXQgdGhpcyB0byB6ZXJvIGJlY2F1c2UgdGhlIHJlY2lwaWVudA0KICAgICAgICAgICAgLy8gY2FuIGNhbGwgdGhpcyBmdW5jdGlvbiBhZ2FpbiBhcyBwYXJ0IG9mIHRoZSByZWNlaXZpbmcgY2FsbA0KICAgICAgICAgICAgLy8gYmVmb3JlIGBzZW5kYCByZXR1cm5zLg0KICAgICAgICAgICAgcGVuZGluZ1JldHVybnNbbXNnLnNlbmRlcl0gPSAwOw0KDQogICAgICAgICAgICBpZiAoIW1zZy5zZW5kZXIuc2VuZChhbW91bnQpKSB7DQogICAgICAgICAgICAgICAgLy8gTm8gbmVlZCB0byBjYWxsIHRocm93IGhlcmUsIGp1c3QgcmVzZXQgdGhlIGFtb3VudCBvd2luZw0KICAgICAgICAgICAgICAgIHBlbmRpbmdSZXR1cm5zW21zZy5zZW5kZXJdID0gYW1vdW50Ow0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICB9DQogICAgLy8gVXNlcnMgd2FudCB0byBrbm93IHdoZW4gdGhlIGF1Y3Rpb24gZW5kcywgc2Vjb25kcyBmcm9tIDE5NzAtMDEtMDENCiAgICBmdW5jdGlvbiBhdWN0aW9uRW5kVGltZSgpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpIHsNCiAgICAgICAgcmV0dXJuIGF1Y3Rpb25TdGFydCArIGJpZGRpbmdUaW1lOw0KICAgIH0NCiAgICANCiAgICAvLy8gRW5kIHRoZSBhdWN0aW9uIGFuZCBzZW5kIHRoZSBoaWdoZXN0IGJpZA0KICAgIC8vLyB0byB0aGUgYmVuZWZpY2lhcnkuDQogICAgZnVuY3Rpb24gYXVjdGlvbkVuZCgpIHsNCiAgICAgICAgLy8gSXQgaXMgYSBnb29kIGd1aWRlbGluZSB0byBzdHJ1Y3R1cmUgZnVuY3Rpb25zIHRoYXQgaW50ZXJhY3QNCiAgICAgICAgLy8gd2l0aCBvdGhlciBjb250cmFjdHMgKGkuZS4gdGhleSBjYWxsIGZ1bmN0aW9ucyBvciBzZW5kIEV0aGVyKQ0KICAgICAgICAvLyBpbnRvIHRocmVlIHBoYXNlczoNCiAgICAgICAgLy8gMS4gY2hlY2tpbmcgY29uZGl0aW9ucw0KICAgICAgICAvLyAyLiBwZXJmb3JtaW5nIGFjdGlvbnMgKHBvdGVudGlhbGx5IGNoYW5naW5nIGNvbmRpdGlvbnMpDQogICAgICAgIC8vIDMuIGludGVyYWN0aW5nIHdpdGggb3RoZXIgY29udHJhY3RzDQogICAgICAgIC8vIElmIHRoZXNlIHBoYXNlcyBhcmUgbWl4ZWQgdXAsIHRoZSBvdGhlciBjb250cmFjdCBjb3VsZCBjYWxsDQogICAgICAgIC8vIGJhY2sgaW50byB0aGUgY3VycmVudCBjb250cmFjdCBhbmQgbW9kaWZ5IHRoZSBzdGF0ZSBvciBjYXVzZQ0KICAgICAgICAvLyBlZmZlY3RzIChldGhlciBwYXlvdXQpIHRvIGJlIHBlcmZvcm1lZCBtdWx0aXBsZSB0aW1lcy4NCiAgICAgICAgLy8gSWYgZnVuY3Rpb25zIGNhbGxlZCBpbnRlcm5hbGx5IGluY2x1ZGUgaW50ZXJhY3Rpb24gd2l0aCBleHRlcm5hbA0KICAgICAgICAvLyBjb250cmFjdHMsIHRoZXkgYWxzbyBoYXZlIHRvIGJlIGNvbnNpZGVyZWQgaW50ZXJhY3Rpb24gd2l0aA0KICAgICAgICAvLyBleHRlcm5hbCBjb250cmFjdHMuDQoNCiAgICAgICAgLy8gMS4gQ29uZGl0aW9ucw0KICAgICAgICByZXF1aXJlKG5vdyA+PSAoYXVjdGlvblN0YXJ0ICsgYmlkZGluZ1RpbWUpKTsgLy8gYXVjdGlvbiBkaWQgbm90IHlldCBlbmQNCiAgICAgICAgcmVxdWlyZSghZW5kZWQpOyAvLyB0aGlzIGZ1bmN0aW9uIGhhcyBhbHJlYWR5IGJlZW4gY2FsbGVkDQoNCiAgICAgICAgLy8gMi4gRWZmZWN0cw0KICAgICAgICBlbmRlZCA9IHRydWU7DQogICAgICAgIEF1Y3Rpb25FbmRlZChoaWdoZXN0QmlkZGVyLCBoaWdoZXN0QmlkKTsNCg0KICAgICAgICAvLyAzLiBJbnRlcmFjdGlvbg0KICAgICAgICBiZW5lZmljaWFyeS50cmFuc2ZlcihoaWdoZXN0QmlkKTsNCiAgICB9DQp9'