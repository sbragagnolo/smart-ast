base 64 content
base64sphereToken
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC4xMzsNCi8vIEFic3RyYWN0IGNvbnRyYWN0IGZvciB0aGUgZnVsbCBFUkMgMjAgVG9rZW4gc3RhbmRhcmQNCi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bS9FSVBzL2lzc3Vlcy8yMA0KDQpjb250cmFjdCBFUkMyMCB7DQogICAgLy8vIHRvdGFsIGFtb3VudCBvZiB0b2tlbnMNCiAgICB1aW50MjU2IHB1YmxpYyB0b3RhbFN1cHBseTsNCg0KICAgIC8vLyBAcGFyYW0gX293bmVyIFRoZSBhZGRyZXNzIGZyb20gd2hpY2ggdGhlIGJhbGFuY2Ugd2lsbCBiZSByZXRyaWV2ZWQNCiAgICAvLy8gQHJldHVybiBUaGUgYmFsYW5jZQ0KICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKTsNCg0KICAgIC8vLyBAbm90aWNlIHNlbmQgYF92YWx1ZWAgdG9rZW4gdG8gYF90b2AgZnJvbSBgbXNnLnNlbmRlcmANCiAgICAvLy8gQHBhcmFtIF90byBUaGUgYWRkcmVzcyBvZiB0aGUgcmVjaXBpZW50DQogICAgLy8vIEBwYXJhbSBfdmFsdWUgVGhlIGFtb3VudCBvZiB0b2tlbiB0byBiZSB0cmFuc2ZlcnJlZA0KICAgIC8vLyBAcmV0dXJuIFdoZXRoZXIgdGhlIHRyYW5zZmVyIHdhcyBzdWNjZXNzZnVsIG9yIG5vdA0KICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsNCg0KICAgIC8vLyBAbm90aWNlIHNlbmQgYF92YWx1ZWAgdG9rZW4gdG8gYF90b2AgZnJvbSBgX2Zyb21gIG9uIHRoZSBjb25kaXRpb24gaXQgaXMgYXBwcm92ZWQgYnkgYF9mcm9tYA0KICAgIC8vLyBAcGFyYW0gX2Zyb20gVGhlIGFkZHJlc3Mgb2YgdGhlIHNlbmRlcg0KICAgIC8vLyBAcGFyYW0gX3RvIFRoZSBhZGRyZXNzIG9mIHRoZSByZWNpcGllbnQNCiAgICAvLy8gQHBhcmFtIF92YWx1ZSBUaGUgYW1vdW50IG9mIHRva2VuIHRvIGJlIHRyYW5zZmVycmVkDQogICAgLy8vIEByZXR1cm4gV2hldGhlciB0aGUgdHJhbnNmZXIgd2FzIHN1Y2Nlc3NmdWwgb3Igbm90DQogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsNCg0KICAgIC8vLyBAbm90aWNlIGBtc2cuc2VuZGVyYCBhcHByb3ZlcyBgX3NwZW5kZXJgIHRvIHNwZW5kIGBfdmFsdWVgIHRva2Vucw0KICAgIC8vLyBAcGFyYW0gX3NwZW5kZXIgVGhlIGFkZHJlc3Mgb2YgdGhlIGFjY291bnQgYWJsZSB0byB0cmFuc2ZlciB0aGUgdG9rZW5zDQogICAgLy8vIEBwYXJhbSBfdmFsdWUgVGhlIGFtb3VudCBvZiB0b2tlbnMgdG8gYmUgYXBwcm92ZWQgZm9yIHRyYW5zZmVyDQogICAgLy8vIEByZXR1cm4gV2hldGhlciB0aGUgYXBwcm92YWwgd2FzIHN1Y2Nlc3NmdWwgb3Igbm90DQogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsNCg0KICAgIC8vLyBAcGFyYW0gX293bmVyIFRoZSBhZGRyZXNzIG9mIHRoZSBhY2NvdW50IG93bmluZyB0b2tlbnMNCiAgICAvLy8gQHBhcmFtIF9zcGVuZGVyIFRoZSBhZGRyZXNzIG9mIHRoZSBhY2NvdW50IGFibGUgdG8gdHJhbnNmZXIgdGhlIHRva2Vucw0KICAgIC8vLyBAcmV0dXJuIEFtb3VudCBvZiByZW1haW5pbmcgdG9rZW5zIGFsbG93ZWQgdG8gc3BlbnQNCiAgICBmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKTsNCg0KICAgIGV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgYWRkcmVzcyBpbmRleGVkIF90bywgdWludDI1NiBfdmFsdWUpOw0KICAgIGV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBfb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpOw0KfQ0KDQpjb250cmFjdCBTYWZlTWF0aCB7DQogIGZ1bmN0aW9uIHNhZmVNdWwodWludCBhLCB1aW50IGIpIGludGVybmFsIHJldHVybnMgKHVpbnQpIHsNCiAgICB1aW50IGMgPSBhICogYjsNCiAgICBhc3NlcnQoYSA9PSAwIHx8IGMgLyBhID09IGIpOw0KICAgIHJldHVybiBjOw0KICB9DQoNCiAgZnVuY3Rpb24gc2FmZURpdih1aW50IGEsIHVpbnQgYikgaW50ZXJuYWwgcmV0dXJucyAodWludCkgew0KICAgIGFzc2VydChiID4gMCk7DQogICAgdWludCBjID0gYSAvIGI7DQogICAgYXNzZXJ0KGEgPT0gYiAqIGMgKyBhICUgYik7DQogICAgcmV0dXJuIGM7DQogIH0NCg0KICBmdW5jdGlvbiBzYWZlU3ViKHVpbnQgYSwgdWludCBiKSBpbnRlcm5hbCByZXR1cm5zICh1aW50KSB7DQogICAgYXNzZXJ0KGIgPD0gYSk7DQogICAgcmV0dXJuIGEgLSBiOw0KICB9DQoNCiAgZnVuY3Rpb24gc2FmZUFkZCh1aW50IGEsIHVpbnQgYikgaW50ZXJuYWwgcmV0dXJucyAodWludCkgew0KICAgIHVpbnQgYyA9IGEgKyBiOw0KICAgIGFzc2VydChjPj1hICYmIGM+PWIpOw0KICAgIHJldHVybiBjOw0KICB9DQoNCiAgZnVuY3Rpb24gbWF4NjQodWludDY0IGEsIHVpbnQ2NCBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50NjQpIHsNCiAgICByZXR1cm4gYSA+PSBiID8gYSA6IGI7DQogIH0NCg0KICBmdW5jdGlvbiBtaW42NCh1aW50NjQgYSwgdWludDY0IGIpIGludGVybmFsIGNvbnN0YW50IHJldHVybnMgKHVpbnQ2NCkgew0KICAgIHJldHVybiBhIDwgYiA/IGEgOiBiOw0KICB9DQoNCiAgZnVuY3Rpb24gbWF4MjU2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7DQogICAgcmV0dXJuIGEgPj0gYiA/IGEgOiBiOw0KICB9DQoNCiAgZnVuY3Rpb24gbWluMjU2KHVpbnQyNTYgYSwgdWludDI1NiBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50MjU2KSB7DQogICAgcmV0dXJuIGEgPCBiID8gYSA6IGI7DQogIH0NCg0KICBmdW5jdGlvbiBhc3NlcnQoYm9vbCBhc3NlcnRpb24pIGludGVybmFsIHsNCiAgICBpZiAoIWFzc2VydGlvbikgew0KICAgICAgdGhyb3c7DQogICAgfQ0KICB9DQp9DQoNCmNvbnRyYWN0IENvbnRyb2xsZWQgew0KICAgIG1vZGlmaWVyIG9ubHlDb250cm9sbGVyKCkgew0KICAgICAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gY29udHJvbGxlcik7DQogICAgICAgIF87DQogICAgfQ0KDQogICAgYWRkcmVzcyBwdWJsaWMgY29udHJvbGxlcjsNCg0KICAgIGZ1bmN0aW9uIENvbnRyb2xsZWQoKSB7DQogICAgICAgIGNvbnRyb2xsZXIgPSBtc2cuc2VuZGVyOw0KICAgIH0NCg0KICAgIGFkZHJlc3MgcHVibGljIG5ld0NvbnRyb2xsZXI7DQoNCiAgICBmdW5jdGlvbiBjaGFuZ2VPd25lcihhZGRyZXNzIF9uZXdDb250cm9sbGVyKSBvbmx5Q29udHJvbGxlciB7DQogICAgICAgIG5ld0NvbnRyb2xsZXIgPSBfbmV3Q29udHJvbGxlcjsNCiAgICB9DQoNCiAgICBmdW5jdGlvbiBhY2NlcHRPd25lcnNoaXAoKSB7DQogICAgICAgIGlmIChtc2cuc2VuZGVyID09IG5ld0NvbnRyb2xsZXIpIHsNCiAgICAgICAgICAgIGNvbnRyb2xsZXIgPSBuZXdDb250cm9sbGVyOw0KICAgICAgICB9DQogICAgfQ0KfQ0KY29udHJhY3QgREFPQ29udHJvbGxlZCBpcyBDb250cm9sbGVkew0KICAgIGFkZHJlc3MgcHVibGljIGRhbzsNCiAgICBtb2RpZmllciBvbmx5REFPew0KICAgICAgICByZXF1aXJlKG1zZy5zZW5kZXIgPT0gZGFvKTsNCiAgICAgICAgXzsNCiAgICB9DQogICAgZnVuY3Rpb24gc2V0REFPKGFkZHJlc3MgX2Rhbykgb25seUNvbnRyb2xsZXJ7DQogICAgICAgIGRhbyA9IF9kYW87DQogICAgfQ0KfQ0KDQpjb250cmFjdCBNaW50YWJsZVRva2VuIGlzIEVSQzIwLCBTYWZlTWF0aCwgREFPQ29udHJvbGxlZHsNCgltYXBwaW5nKGFkZHJlc3MgPT4gdWludCkgcHVibGljIGJhbGFuY2VzOw0KCWFkZHJlc3NbXSBwdWJsaWMgbWludGluZ0ZhY3RvcmllczsNCgl1aW50IHB1YmxpYyBudW1GYWN0b3JpZXM7DQoJZnVuY3Rpb24gcmVzZXRGYWN0b3JpZXMoKSBvbmx5Q29udHJvbGxlcnsNCgkgICAgbnVtRmFjdG9yaWVzID0gMDsNCgl9DQoJZnVuY3Rpb24gYWRkTWludGluZ0ZhY3RvcnkoYWRkcmVzcyBfZmFjdG9yeSkgb25seUNvbnRyb2xsZXJ7DQoJICAgIG1pbnRpbmdGYWN0b3JpZXMucHVzaChfZmFjdG9yeSk7DQoJICAgIG51bUZhY3RvcmllcyArPSAxOw0KCX0NCgkNCglmdW5jdGlvbiByZW1vdmVNaW50aW5nRmFjdG9yeShhZGRyZXNzIF9mYWN0b3J5KSBvbmx5Q29udHJvbGxlcnsNCgkgICAgZm9yICh1aW50IGkgPSAwOyBpIDwgbnVtRmFjdG9yaWVzOyBpKyspew0KCSAgICAgICAgaWYgKF9mYWN0b3J5ID09IG1pbnRpbmdGYWN0b3JpZXNbaV0pDQoJICAgICAgICB7DQoJICAgICAgICAgICAgbWludGluZ0ZhY3Rvcmllc1tpXSA9IDA7DQoJICAgICAgICB9DQoJICAgIH0NCgl9DQoJDQoJbW9kaWZpZXIgb25seUZhY3Rvcnl7DQoJICAgIGJvb2wgaXNGYWN0b3J5ID0gZmFsc2U7DQoJICAgIGZvciAodWludCBpID0gMDsgaSA8IG51bUZhY3RvcmllczsgaSsrKXsNCgkgICAgICAgIGlmIChtc2cuc2VuZGVyID09IG1pbnRpbmdGYWN0b3JpZXNbaV0gJiYgbXNnLnNlbmRlciAhPSBhZGRyZXNzKDApKQ0KCSAgICAgICAgew0KCSAgICAgICAgICAgIGlzRmFjdG9yeSA9IHRydWU7DQoJICAgICAgICB9DQoJICAgIH0NCgkgICAgaWYgKCFpc0ZhY3RvcnkpIHRocm93Ow0KCSAgICBfOw0KCX0NCn0NCmNvbnRyYWN0IENvbGxlY3RpYmxlRmVlVG9rZW4gaXMgTWludGFibGVUb2tlbnsNCgl1aW50OCBwdWJsaWMgZGVjaW1hbHM7DQoJbWFwcGluZyh1aW50ID0+IHVpbnQpIHB1YmxpYyByb3VuZEZlZXM7DQoJbWFwcGluZyh1aW50ID0+IHVpbnQpIHB1YmxpYyByZWNvcmRlZENvaW5TdXBwbHlGb3JSb3VuZDsNCgltYXBwaW5nKHVpbnQgPT4gbWFwcGluZyAoYWRkcmVzcyA9PiB1aW50KSkgcHVibGljIGNsYWltZWRGZWVzOw0KCW1hcHBpbmcoYWRkcmVzcyA9PiB1aW50KSBwdWJsaWMgbGFzdENsYWltZWRSb3VuZDsNCgl1aW50IHB1YmxpYyBsYXRlc3RSb3VuZCA9IDA7DQoJdWludCBwdWJsaWMgaW5pdGlhbFJvdW5kID0gMTsNCgl1aW50IHB1YmxpYyByZXNlcnZlczsNCiAgICBldmVudCBDbGFpbWVkKGFkZHJlc3MgaW5kZXhlZCBfb3duZXIsIHVpbnQyNTYgX2Ftb3VudCk7DQogICAgZXZlbnQgRGVwb3NpdGVkKHVpbnQyNTYgX2Ftb3VudCwgdWludCBpbmRleGVkIHJvdW5kKTsNCgkNCgltb2RpZmllciBvbmx5UGF5bG9hZFNpemUodWludCBzaXplKSB7DQoJCWlmKG1zZy5kYXRhLmxlbmd0aCAhPSBzaXplICsgNCkgew0KCQl0aHJvdzsNCgkJfQ0KCQlfOw0KCX0NCgkNCglmdW5jdGlvbiByZWR1Y2VSZXNlcnZlcyh1aW50IHZhbHVlKSBvbmx5UGF5bG9hZFNpemUoMSAqIDMyKSBvbmx5REFPew0KCSAgICByZXNlcnZlcyA9IHNhZmVTdWIocmVzZXJ2ZXMsIHZhbHVlKTsNCgl9DQoJDQoJZnVuY3Rpb24gYWRkUmVzZXJ2ZXModWludCB2YWx1ZSkgb25seVBheWxvYWRTaXplKDEgKiAzMikgb25seURBT3sNCgkgICAgcmVzZXJ2ZXMgPSBzYWZlQWRkKHJlc2VydmVzLCB2YWx1ZSk7DQoJfQ0KCQ0KCWZ1bmN0aW9uIGRlcG9zaXRGZWVzKHVpbnQgdmFsdWUpIG9ubHlEQU8gew0KCQlsYXRlc3RSb3VuZCArPSAxOw0KCQlEZXBvc2l0ZWQodmFsdWUsIGxhdGVzdFJvdW5kKTsNCgkJcmVjb3JkZWRDb2luU3VwcGx5Rm9yUm91bmRbbGF0ZXN0Um91bmRdID0gdG90YWxTdXBwbHk7DQoJCXJvdW5kRmVlc1tsYXRlc3RSb3VuZF0gPSB2YWx1ZTsNCgl9DQoJZnVuY3Rpb24gY2xhaW1GZWVzKGFkZHJlc3MgX293bmVyKSBvbmx5UGF5bG9hZFNpemUoMSAqIDMyKSBvbmx5REFPIHJldHVybnMgKHVpbnQgdG90YWxGZWVzKSB7DQoJCXRvdGFsRmVlcyA9IDA7DQoJCWZvciAodWludCBpID0gbGFzdENsYWltZWRSb3VuZFtfb3duZXJdICsgMTsgaSA8PSBsYXRlc3RSb3VuZDsgaSsrKXsNCgkJCXVpbnQgZmVlRm9yUm91bmQgPSBiYWxhbmNlc1tfb3duZXJdICogZmVlUGVyVW5pdE9mQ29pbihpKTsNCgkJCWlmIChmZWVGb3JSb3VuZCA+IGNsYWltZWRGZWVzW2ldW19vd25lcl0pew0KCQkJCWZlZUZvclJvdW5kID0gc2FmZVN1YihmZWVGb3JSb3VuZCxjbGFpbWVkRmVlc1tpXVtfb3duZXJdKTsNCgkJCX0NCgkJCWVsc2Ugew0KCQkJCWZlZUZvclJvdW5kID0gMDsNCgkJCX0NCgkJCWNsYWltZWRGZWVzW2ldW19vd25lcl0gPSBzYWZlQWRkKGNsYWltZWRGZWVzW2ldW19vd25lcl0sIGZlZUZvclJvdW5kKTsNCgkJCXRvdGFsRmVlcyA9IHNhZmVBZGQodG90YWxGZWVzLCBmZWVGb3JSb3VuZCk7DQoJCX0NCgkJbGFzdENsYWltZWRSb3VuZFtfb3duZXJdID0gbGF0ZXN0Um91bmQ7DQoJCUNsYWltZWQoX293bmVyLCBmZWVGb3JSb3VuZCk7DQoJCXJldHVybiB0b3RhbEZlZXM7DQoJfQ0KDQoJZnVuY3Rpb24gY2xhaW1GZWVzRm9yUm91bmQoYWRkcmVzcyBfb3duZXIsIHVpbnQgcm91bmQpIG9ubHlQYXlsb2FkU2l6ZSgyICogMzIpIG9ubHlEQU8gcmV0dXJucyAodWludCBmZWVGb3JSb3VuZCkgew0KCQlmZWVGb3JSb3VuZCA9IGJhbGFuY2VzW19vd25lcl0gKiBmZWVQZXJVbml0T2ZDb2luKHJvdW5kKTsNCgkJaWYgKGZlZUZvclJvdW5kID4gY2xhaW1lZEZlZXNbcm91bmRdW19vd25lcl0pew0KCQkJZmVlRm9yUm91bmQgPSBzYWZlU3ViKGZlZUZvclJvdW5kLGNsYWltZWRGZWVzW3JvdW5kXVtfb3duZXJdKTsNCgkJfQ0KCQllbHNlIHsNCgkJCWZlZUZvclJvdW5kID0gMDsNCgkJfQ0KCQljbGFpbWVkRmVlc1tyb3VuZF1bX293bmVyXSA9IHNhZmVBZGQoY2xhaW1lZEZlZXNbcm91bmRdW19vd25lcl0sIGZlZUZvclJvdW5kKTsNCgkJQ2xhaW1lZChfb3duZXIsIGZlZUZvclJvdW5kKTsNCgkJcmV0dXJuIGZlZUZvclJvdW5kOw0KCX0NCg0KCWZ1bmN0aW9uIF9yZXNldFRyYW5zZmVycmVkQ29pbkZlZXMoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3JlY2VpcGllbnQsIHVpbnQgbnVtQ29pbnMpIGludGVybmFsIHJldHVybnMgKGJvb2wpew0KCQlmb3IgKHVpbnQgaSA9IGxhc3RDbGFpbWVkUm91bmRbX293bmVyXSArIDE7IGkgPD0gbGF0ZXN0Um91bmQ7IGkrKyl7DQoJCQl1aW50IGZlZUZvclJvdW5kID0gYmFsYW5jZXNbX293bmVyXSAqIGZlZVBlclVuaXRPZkNvaW4oaSk7DQoJCQlpZiAoZmVlRm9yUm91bmQgPiBjbGFpbWVkRmVlc1tpXVtfb3duZXJdKSB7DQoJCQkJLy9BZGQgdW5jbGFpbWVkIGZlZXMgdG8gcmVzZXJ2ZXMNCgkJCQl1aW50IHVuY2xhaW1lZEZlZXMgPSBtaW4yNTYobnVtQ29pbnMgKiBmZWVQZXJVbml0T2ZDb2luKGkpLCBzYWZlU3ViKGZlZUZvclJvdW5kLCBjbGFpbWVkRmVlc1tpXVtfb3duZXJdKSk7DQoJCQkJcmVzZXJ2ZXMgPSBzYWZlQWRkKHJlc2VydmVzLCB1bmNsYWltZWRGZWVzKTsNCgkJCQljbGFpbWVkRmVlc1tpXVtfb3duZXJdID0gc2FmZUFkZChjbGFpbWVkRmVlc1tpXVtfb3duZXJdLCB1bmNsYWltZWRGZWVzKTsNCgkJCX0NCgkJfQ0KCQlmb3IgKHVpbnQgeCA9IGxhc3RDbGFpbWVkUm91bmRbX3JlY2VpcGllbnRdICsgMTsgeCA8PSBsYXRlc3RSb3VuZDsgeCsrKXsNCgkJCS8vRW1wdHkgZmVlcyBmb3IgbmV3IHJlY2VpcGllbnQNCgkJCWNsYWltZWRGZWVzW3hdW19yZWNlaXBpZW50XSA9IHNhZmVBZGQoY2xhaW1lZEZlZXNbeF1bX3JlY2VpcGllbnRdLCBudW1Db2lucyAqIGZlZVBlclVuaXRPZkNvaW4oeCkpOw0KCQl9DQoJCXJldHVybiB0cnVlOw0KCX0NCglmdW5jdGlvbiBmZWVQZXJVbml0T2ZDb2luKHVpbnQgcm91bmQpIHB1YmxpYyBjb25zdGFudCByZXR1cm5zICh1aW50IGZlZSl7DQoJCXJldHVybiBzYWZlRGl2KHJvdW5kRmVlc1tyb3VuZF0sIHJlY29yZGVkQ29pblN1cHBseUZvclJvdW5kW3JvdW5kXSk7DQoJfQ0KCQ0KCWZ1bmN0aW9uIHJlc2VydmVzUGVyVW5pdFRva2VuKCkgcHVibGljIGNvbnN0YW50IHJldHVybnModWludCkgew0KCSAgICByZXR1cm4gcmVzZXJ2ZXMgLyB0b3RhbFN1cHBseTsNCgl9DQoJDQogICBmdW5jdGlvbiBtaW50VG9rZW5zKGFkZHJlc3MgX293bmVyLCB1aW50IGFtb3VudCkgb25seUZhY3Rvcnl7DQogICAgICAgLy9VcG9uIGZhY3RvcnkgdHJhbnNmZXIsIGZlZXMgd2lsbCBiZSByZWRpc3RyaWJ1dGVkIGludG8gcmVzZXJ2ZXMNCiAgICAgICBsYXN0Q2xhaW1lZFJvdW5kW21zZy5zZW5kZXJdID0gbGF0ZXN0Um91bmQ7DQogICAgICAgdG90YWxTdXBwbHkgPSBzYWZlQWRkKHRvdGFsU3VwcGx5LCBhbW91bnQpOw0KICAgICAgIGJhbGFuY2VzW19vd25lcl0gKz0gYW1vdW50Ow0KICAgfQ0KfQ0KDQpjb250cmFjdCBCdXJuYWJsZVRva2VuIGlzIENvbGxlY3RpYmxlRmVlVG9rZW57DQoNCiAgICBldmVudCBCdXJuZWQoYWRkcmVzcyBpbmRleGVkIF9vd25lciwgdWludDI1NiBfdmFsdWUpOw0KICAgIGZ1bmN0aW9uIGJ1cm4oYWRkcmVzcyBfb3duZXIsIHVpbnQgYW1vdW50KSBvbmx5REFPIHJldHVybnMgKHVpbnQgYnVyblZhbHVlKXsNCiAgICAgICAgcmVxdWlyZShiYWxhbmNlc1tfb3duZXJdID49IGFtb3VudCk7DQogICAgICAgIC8vVmFsaWRhdGlvbiBpcyBkb25lIHRvIGVuc3VyZSBubyBmZWVzIHJlbWFpbmluZyBpbiB0b2tlbg0KICAgICAgICByZXF1aXJlKGxhdGVzdFJvdW5kID09IGxhc3RDbGFpbWVkUm91bmRbX293bmVyXSk7DQogICAgICAgIGJ1cm5WYWx1ZSA9IHJlc2VydmVzUGVyVW5pdFRva2VuKCkgKiBhbW91bnQ7DQogICAgICAgIHJlc2VydmVzID0gc2FmZVN1YihyZXNlcnZlcywgYnVyblZhbHVlKTsNCiAgICAgICAgYmFsYW5jZXNbX293bmVyXSA9IHNhZmVTdWIoYmFsYW5jZXNbX293bmVyXSwgYW1vdW50KTsNCiAgICAgICAgdG90YWxTdXBwbHkgPSBzYWZlU3ViKHRvdGFsU3VwcGx5LCBhbW91bnQpOw0KICAgICAgICBUcmFuc2Zlcihfb3duZXIsIHRoaXMsIGFtb3VudCk7DQogICAgICAgIEJ1cm5lZChfb3duZXIsIGFtb3VudCk7DQogICAgICAgIHJldHVybiBidXJuVmFsdWU7DQogICAgfQ0KICAgIA0KfQ0KLyoNCiAqIEhhbHRhYmxlDQogKg0KICogQWJzdHJhY3QgY29udHJhY3QgdGhhdCBhbGxvd3MgY2hpbGRyZW4gdG8gaW1wbGVtZW50IGFuDQogKiBlbWVyZ2VuY3kgc3RvcCBtZWNoYW5pc20uIERpZmZlcnMgZnJvbSBQYXVzYWJsZSBieSBjYXVzaW5nIGEgdGhyb3cgd2hlbiBpbiBoYWx0IG1vZGUuDQogKg0KICoNCiAqIE9yaWdpbmFsbHkgZW52aXNpb25lZCBpbiBGaXJzdEJsb29kIElDTyBjb250cmFjdC4NCiAqLw0KY29udHJhY3QgSGFsdGFibGUgaXMgQ29udHJvbGxlZCB7DQogIGJvb2wgcHVibGljIGhhbHRlZDsNCg0KICBtb2RpZmllciBzdG9wSW5FbWVyZ2VuY3kgew0KICAgIGlmIChoYWx0ZWQpIHRocm93Ow0KICAgIF87DQogIH0NCg0KICBtb2RpZmllciBvbmx5SW5FbWVyZ2VuY3kgew0KICAgIGlmICghaGFsdGVkKSB0aHJvdzsNCiAgICBfOw0KICB9DQoNCiAgLy8gY2FsbGVkIGJ5IHRoZSBvd25lciBvbiBlbWVyZ2VuY3ksIHRyaWdnZXJzIHN0b3BwZWQgc3RhdGUNCiAgZnVuY3Rpb24gaGFsdCgpIGV4dGVybmFsIG9ubHlDb250cm9sbGVyIHsNCiAgICBoYWx0ZWQgPSB0cnVlOw0KICB9DQoNCiAgLy8gY2FsbGVkIGJ5IHRoZSBvd25lciBvbiBlbmQgb2YgZW1lcmdlbmN5LCByZXR1cm5zIHRvIG5vcm1hbCBzdGF0ZQ0KICBmdW5jdGlvbiB1bmhhbHQoKSBleHRlcm5hbCBvbmx5Q29udHJvbGxlciBvbmx5SW5FbWVyZ2VuY3kgew0KICAgIGhhbHRlZCA9IGZhbHNlOw0KICB9DQoNCn0NCg0KLyoqDQogKiBTdGFuZGFyZCBFUkMyMCB0b2tlbiB3aXRoIFNob3J0IEhhbmQgQXR0YWNrIGFuZCBhcHByb3ZlKCkgcmFjZSBjb25kaXRpb24gbWl0aWdhdGlvbi4NCiAqDQogKiBCYXNlZCBvbiBjb2RlIGJ5IEZpcnN0Qmxvb2Q6DQogKiBodHRwczovL2dpdGh1Yi5jb20vRmlyc3RibG9vZGlvL3Rva2VuL2Jsb2IvbWFzdGVyL3NtYXJ0X2NvbnRyYWN0L0ZpcnN0Qmxvb2RUb2tlbi5zb2wNCiAqLw0KY29udHJhY3QgU3BoZXJlVG9rZW4gaXMgQnVybmFibGVUb2tlbiwgSGFsdGFibGUgew0KICAgIA0KICAgIHN0cmluZyBwdWJsaWMgbmFtZTsgICAgICAgICAgICAgICAgLy9UaGUgVG9rZW4ncyBuYW1lOiBlLmcuIERpZ2l4REFPIFRva2Vucw0KICAgIHN0cmluZyBwdWJsaWMgc3ltYm9sOyAgICAgICAgICAgICAgLy9BbiBpZGVudGlmaWVyOiBlLmcuIFJFUA0KICAgIHN0cmluZyBwdWJsaWMgdmVyc2lvbiA9ICdTUFJfMC4xJzsgLy9BbiBhcmJpdHJhcnkgdmVyc2lvbmluZyBzY2hlbWUNCiAgICBib29sIHB1YmxpYyBpc1RyYW5zZmVyRW5hYmxlZDsNCiAgbWFwcGluZyAoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzID0+IHVpbnQpKSBhbGxvd2VkOw0KDQogICAgZnVuY3Rpb24gU3BoZXJlVG9rZW4oKXsNCiAgICAgICAgbmFtZSA9ICdFdGhlclNwaGVyZSc7DQogICAgICAgIHN5bWJvbCA9ICdTUFInOw0KICAgICAgICBkZWNpbWFscyA9IDQ7DQogICAgICAgIGlzVHJhbnNmZXJFbmFibGVkID0gZmFsc2U7DQogICAgfQ0KICAvKioNCiAgICoNCiAgICogRml4IGZvciB0aGUgRVJDMjAgc2hvcnQgYWRkcmVzcyBhdHRhY2sNCiAgICoNCiAgICogaHR0cDovL3Zlc3NlbmVzLmNvbS90aGUtZXJjMjAtc2hvcnQtYWRkcmVzcy1hdHRhY2stZXhwbGFpbmVkLw0KICAgKi8NCiAgbW9kaWZpZXIgb25seVBheWxvYWRTaXplKHVpbnQgc2l6ZSkgew0KICAgICBpZihtc2cuZGF0YS5sZW5ndGggIT0gc2l6ZSArIDQpIHsNCiAgICAgICB0aHJvdzsNCiAgICAgfQ0KICAgICBfOw0KICB9DQoNCiAgICBmdW5jdGlvbiBzZXRUcmFuc2ZlckVuYWJsZShib29sIGVuYWJsZWQpIG9ubHlEQU97DQogICAgICAgIGlzVHJhbnNmZXJFbmFibGVkID0gZW5hYmxlZDsNCiAgICB9DQogICAgZnVuY3Rpb24gZG9UcmFuc2ZlcihhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludCBfdmFsdWUpIHByaXZhdGUgcmV0dXJucyAoYm9vbCBzdWNjZXNzKXsNCiAgICAgICAgaWYgKF92YWx1ZSA+IGJhbGFuY2VzW19mcm9tXSB8fCAhaXNUcmFuc2ZlckVuYWJsZWQpIHJldHVybiBmYWxzZTsNCiAgICAgICAgaWYgKCFfcmVzZXRUcmFuc2ZlcnJlZENvaW5GZWVzKF9mcm9tLCBfdG8sIF92YWx1ZSkpIHJldHVybiBmYWxzZTsNCiAgICAgICAgYmFsYW5jZXNbX2Zyb21dID0gc2FmZVN1YihiYWxhbmNlc1tfZnJvbV0sIF92YWx1ZSk7DQogICAgICAgIGJhbGFuY2VzW190b10gPSBzYWZlQWRkKGJhbGFuY2VzW190b10sIF92YWx1ZSk7DQogICAgICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsNCiAgICAgICAgcmV0dXJuIHRydWU7DQogICAgfQ0KICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludCBfdmFsdWUpIG9ubHlQYXlsb2FkU2l6ZSgyICogMzIpIHN0b3BJbkVtZXJnZW5jeSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsNCiAgICByZXR1cm4gZG9UcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF92YWx1ZSk7DQogIH0NCg0KICBmdW5jdGlvbiBleGNoYW5nZVRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50IF92YWx1ZSkgc3RvcEluRW1lcmdlbmN5IG9ubHlGYWN0b3J5IHJldHVybnMgKGJvb2wgc3VjY2Vzcykgew0KICAgICAgICBpZiAoX3ZhbHVlID4gYmFsYW5jZXNbbXNnLnNlbmRlcl0pIHtyZXR1cm4gZmFsc2U7fQ0KICAgICAgICBpZiAoIV9yZXNldFRyYW5zZmVycmVkQ29pbkZlZXMobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUpKXsgcmV0dXJuIGZhbHNlO30NCiAgICAgICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSBzYWZlU3ViKGJhbGFuY2VzW21zZy5zZW5kZXJdLCBfdmFsdWUpOw0KICAgICAgICBiYWxhbmNlc1tfdG9dID0gc2FmZUFkZChiYWxhbmNlc1tfdG9dLCBfdmFsdWUpOw0KICAgICAgICBUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF92YWx1ZSk7DQogICAgICAgIHJldHVybiB0cnVlOw0KICB9DQogIGZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludCBfdmFsdWUpIG9ubHlQYXlsb2FkU2l6ZSgzICogMzIpIHN0b3BJbkVtZXJnZW5jeSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsNCiAgICB2YXIgX2FsbG93YW5jZSA9IGFsbG93ZWRbX2Zyb21dW21zZy5zZW5kZXJdOw0KICAgIGlmIChfdmFsdWUgPiBiYWxhbmNlc1tfZnJvbV0gfHwgIWlzVHJhbnNmZXJFbmFibGVkIHx8IF92YWx1ZSA+IF9hbGxvd2FuY2UpIHJldHVybiBmYWxzZTsNCiAgICBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSA9IHNhZmVTdWIoX2FsbG93YW5jZSwgX3ZhbHVlKTsNCiAgICByZXR1cm4gZG9UcmFuc2ZlcihfZnJvbSwgX3RvLCBfdmFsdWUpOw0KICB9DQoNCiAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50IGJhbGFuY2UpIHsNCiAgICByZXR1cm4gYmFsYW5jZXNbX293bmVyXTsNCiAgfQ0KDQogIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludCBfdmFsdWUpIHN0b3BJbkVtZXJnZW5jeSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsNCg0KICAgIC8vIFRvIGNoYW5nZSB0aGUgYXBwcm92ZSBhbW91bnQgeW91IGZpcnN0IGhhdmUgdG8gcmVkdWNlIHRoZSBhZGRyZXNzZXNgDQogICAgLy8gIGFsbG93YW5jZSB0byB6ZXJvIGJ5IGNhbGxpbmcgYGFwcHJvdmUoX3NwZW5kZXIsIDApYCBpZiBpdCBpcyBub3QNCiAgICAvLyAgYWxyZWFkeSAwIHRvIG1pdGlnYXRlIHRoZSByYWNlIGNvbmRpdGlvbiBkZXNjcmliZWQgaGVyZToNCiAgICAvLyAgaHR0cHM6Ly9naXRodWIuY29tL2V0aGVyZXVtL0VJUHMvaXNzdWVzLzIwI2lzc3VlY29tbWVudC0yNjM1MjQ3MjkNCiAgICBpZiAoKF92YWx1ZSAhPSAwKSAmJiAoYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gIT0gMCkpIHsNCiAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgIH0NCg0KICAgIGFsbG93ZWRbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gX3ZhbHVlOw0KICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfdmFsdWUpOw0KICAgIHJldHVybiB0cnVlOw0KICB9DQoNCiAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBjb25zdGFudCByZXR1cm5zICh1aW50IHJlbWFpbmluZykgew0KICAgIHJldHVybiBhbGxvd2VkW19vd25lcl1bX3NwZW5kZXJdOw0KICB9DQoNCiAgLyoqDQogICAqIEF0b21pYyBpbmNyZW1lbnQgb2YgYXBwcm92ZWQgc3BlbmRpbmcNCiAgICoNCiAgICogV29ya3MgYXJvdW5kIGh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bS9FSVBzL2lzc3Vlcy8yMCNpc3N1ZWNvbW1lbnQtMjYzNTI0NzI5DQogICAqDQogICAqLw0KICBmdW5jdGlvbiBhZGRBcHByb3ZhbChhZGRyZXNzIF9zcGVuZGVyLCB1aW50IF9hZGRlZFZhbHVlKQ0KICBvbmx5UGF5bG9hZFNpemUoMiAqIDMyKSBzdG9wSW5FbWVyZ2VuY3kNCiAgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7DQogICAgICB1aW50IG9sZFZhbHVlID0gYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl07DQogICAgICBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IHNhZmVBZGQob2xkVmFsdWUsIF9hZGRlZFZhbHVlKTsNCiAgICAgIHJldHVybiB0cnVlOw0KICB9DQoNCiAgLyoqDQogICAqIEF0b21pYyBkZWNyZW1lbnQgb2YgYXBwcm92ZWQgc3BlbmRpbmcuDQogICAqDQogICAqIFdvcmtzIGFyb3VuZCBodHRwczovL2dpdGh1Yi5jb20vZXRoZXJldW0vRUlQcy9pc3N1ZXMvMjAjaXNzdWVjb21tZW50LTI2MzUyNDcyOQ0KICAgKi8NCiAgZnVuY3Rpb24gc3ViQXBwcm92YWwoYWRkcmVzcyBfc3BlbmRlciwgdWludCBfc3VidHJhY3RlZFZhbHVlKQ0KICBvbmx5UGF5bG9hZFNpemUoMiAqIDMyKSBzdG9wSW5FbWVyZ2VuY3kNCiAgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7DQoNCiAgICAgIHVpbnQgb2xkVmFsID0gYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl07DQoNCiAgICAgIGlmIChfc3VidHJhY3RlZFZhbHVlID4gb2xkVmFsKSB7DQogICAgICAgICAgYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gPSAwOw0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgICBhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IHNhZmVTdWIob2xkVmFsLCBfc3VidHJhY3RlZFZhbHVlKTsNCiAgICAgIH0NCiAgICAgIHJldHVybiB0cnVlOw0KICB9DQoNCn0='