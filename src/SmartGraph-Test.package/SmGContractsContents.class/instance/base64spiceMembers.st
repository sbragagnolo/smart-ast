base 64 content
base64spiceMembers
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC4yOw0KDQpjb250cmFjdCBTcGljZU1lbWJlcnMgew0KICAgIGVudW0gTWVtYmVyTGV2ZWwgeyBOb25lLCBNZW1iZXIsIE1hbmFnZXIsIERpcmVjdG9yIH0NCiAgICBzdHJ1Y3QgTWVtYmVyIHsNCiAgICAgICAgdWludCBpZDsNCiAgICAgICAgTWVtYmVyTGV2ZWwgbGV2ZWw7DQogICAgICAgIGJ5dGVzMzIgaW5mbzsNCiAgICB9DQoNCiAgICBtYXBwaW5nIChhZGRyZXNzID0+IE1lbWJlcikgbWVtYmVyOw0KDQogICAgYWRkcmVzcyBwdWJsaWMgb3duZXI7DQogICAgbWFwcGluZyAodWludCA9PiBhZGRyZXNzKSBwdWJsaWMgbWVtYmVyQWRkcmVzczsNCiAgICB1aW50IHB1YmxpYyBtZW1iZXJDb3VudDsNCg0KICAgIGV2ZW50IFRyYW5zZmVyT3duZXJzaGlwKGFkZHJlc3MgaW5kZXhlZCBzZW5kZXIsIGFkZHJlc3MgaW5kZXhlZCBvd25lcik7DQogICAgZXZlbnQgQWRkTWVtYmVyKGFkZHJlc3MgaW5kZXhlZCBzZW5kZXIsIGFkZHJlc3MgaW5kZXhlZCBtZW1iZXIpOw0KICAgIGV2ZW50IFJlbW92ZU1lbWJlcihhZGRyZXNzIGluZGV4ZWQgc2VuZGVyLCBhZGRyZXNzIGluZGV4ZWQgbWVtYmVyKTsNCiAgICBldmVudCBTZXRNZW1iZXJMZXZlbChhZGRyZXNzIGluZGV4ZWQgc2VuZGVyLCBhZGRyZXNzIGluZGV4ZWQgbWVtYmVyLCBNZW1iZXJMZXZlbCBsZXZlbCk7DQogICAgZXZlbnQgU2V0TWVtYmVySW5mbyhhZGRyZXNzIGluZGV4ZWQgc2VuZGVyLCBhZGRyZXNzIGluZGV4ZWQgbWVtYmVyLCBieXRlczMyIGluZm8pOw0KDQogICAgZnVuY3Rpb24gU3BpY2VNZW1iZXJzKCkgew0KICAgICAgICBvd25lciA9IG1zZy5zZW5kZXI7DQoNCiAgICAgICAgbWVtYmVyQ291bnQgPSAxOw0KICAgICAgICBtZW1iZXJBZGRyZXNzW21lbWJlckNvdW50XSA9IG93bmVyOw0KICAgICAgICBtZW1iZXJbb3duZXJdID0gTWVtYmVyKG1lbWJlckNvdW50LCBNZW1iZXJMZXZlbC5Ob25lLCAwKTsNCiAgICB9DQoNCiAgICBtb2RpZmllciBvbmx5T3duZXIgew0KICAgICAgICBpZiAobXNnLnNlbmRlciAhPSBvd25lcikgdGhyb3c7DQogICAgICAgIF87DQogICAgfQ0KDQogICAgbW9kaWZpZXIgb25seU1hbmFnZXIgew0KICAgICAgICBpZiAobXNnLnNlbmRlciAhPSBvd25lciAmJiBtZW1iZXJMZXZlbChtc2cuc2VuZGVyKSA8IE1lbWJlckxldmVsLk1hbmFnZXIpIHRocm93Ow0KICAgICAgICBfOw0KICAgIH0NCg0KICAgIGZ1bmN0aW9uIHRyYW5zZmVyT3duZXJzaGlwKGFkZHJlc3MgX3RhcmdldCkgb25seU93bmVyIHsNCiAgICAgICAgLy8gSWYgbmV3IG93bmVyIGhhcyBubyBtZW1iZXJJZCwgY3JlYXRlIG9uZQ0KICAgICAgICBpZiAobWVtYmVyW190YXJnZXRdLmlkID09IDApIHsNCiAgICAgICAgICAgIG1lbWJlckNvdW50Kys7DQogICAgICAgICAgICBtZW1iZXJBZGRyZXNzW21lbWJlckNvdW50XSA9IF90YXJnZXQ7DQogICAgICAgICAgICBtZW1iZXJbX3RhcmdldF0gPSBNZW1iZXIobWVtYmVyQ291bnQsIE1lbWJlckxldmVsLk5vbmUsIDApOw0KICAgICAgICB9DQogICAgICAgIG93bmVyID0gX3RhcmdldDsNCiAgICAgICAgVHJhbnNmZXJPd25lcnNoaXAobXNnLnNlbmRlciwgb3duZXIpOw0KICAgIH0NCg0KICAgIGZ1bmN0aW9uIGFkZE1lbWJlcihhZGRyZXNzIF90YXJnZXQpIG9ubHlNYW5hZ2VyIHsNCiAgICAgICAgLy8gTWFrZSBzdXJlIHRyeWluZyB0byBhZGQgYW4gZXhpc3RpbmcgbWVtYmVyIHRocm93cyBhbiBlcnJvcg0KICAgICAgICBpZiAobWVtYmVyTGV2ZWwoX3RhcmdldCkgIT0gTWVtYmVyTGV2ZWwuTm9uZSkgdGhyb3c7DQoNCiAgICAgICAgLy8gSWYgYWRkZWQgbWVtYmVyIGhhcyBubyBtZW1iZXJJZCwgY3JlYXRlIG9uZQ0KICAgICAgICBpZiAobWVtYmVyW190YXJnZXRdLmlkID09IDApIHsNCiAgICAgICAgICAgIG1lbWJlckNvdW50Kys7DQogICAgICAgICAgICBtZW1iZXJBZGRyZXNzW21lbWJlckNvdW50XSA9IF90YXJnZXQ7DQogICAgICAgICAgICBtZW1iZXJbX3RhcmdldF0gPSBNZW1iZXIobWVtYmVyQ291bnQsIE1lbWJlckxldmVsLk5vbmUsIDApOw0KICAgICAgICB9DQoNCiAgICAgICAgLy8gU2V0IG1lbWJlckxldmVsIHRvIGluaXRpYWwgdmFsdWUgd2l0aCBiYXNpYyBhY2Nlc3MNCiAgICAgICAgbWVtYmVyW190YXJnZXRdLmxldmVsID0gTWVtYmVyTGV2ZWwuTWVtYmVyOw0KICAgICAgICBBZGRNZW1iZXIobXNnLnNlbmRlciwgX3RhcmdldCk7DQogICAgfQ0KDQogICAgZnVuY3Rpb24gcmVtb3ZlTWVtYmVyKGFkZHJlc3MgX3RhcmdldCkgew0KICAgICAgICAvLyBNYWtlIHN1cmUgdHJ5aW5nIHRvIHJlbW92ZSBhIG5vbi1leGlzdGluZyBtZW1iZXIgdGhyb3dzIGFuIGVycm9yDQogICAgICAgIGlmIChtZW1iZXJMZXZlbChfdGFyZ2V0KSA9PSBNZW1iZXJMZXZlbC5Ob25lKSB0aHJvdzsNCiAgICAgICAgLy8gTWFrZSBzdXJlIG1lbWJlcnMgYXJlIG9ubHkgYWxsb3dlZCB0byBkZWxldGUgbWVtYmVycyBsb3dlciB0aGFuIHRoZWlyIGxldmVsDQogICAgICAgIGlmIChtc2cuc2VuZGVyICE9IG93bmVyICYmIG1lbWJlckxldmVsKG1zZy5zZW5kZXIpIDw9IG1lbWJlckxldmVsKF90YXJnZXQpKSB0aHJvdzsNCg0KICAgICAgICBtZW1iZXJbX3RhcmdldF0ubGV2ZWwgPSBNZW1iZXJMZXZlbC5Ob25lOw0KICAgICAgICBSZW1vdmVNZW1iZXIobXNnLnNlbmRlciwgX3RhcmdldCk7DQogICAgfQ0KDQogICAgZnVuY3Rpb24gc2V0TWVtYmVyTGV2ZWwoYWRkcmVzcyBfdGFyZ2V0LCBNZW1iZXJMZXZlbCBsZXZlbCkgew0KICAgICAgICAvLyBNYWtlIHN1cmUgYWxsIGxldmVscyBhcmUgbGFyZ2VyIHRoYW4gTm9uZSBidXQgbm90IGhpZ2hlciB0aGFuIERpcmVjdG9yDQogICAgICAgIGlmIChsZXZlbCA9PSBNZW1iZXJMZXZlbC5Ob25lIHx8IGxldmVsID4gTWVtYmVyTGV2ZWwuRGlyZWN0b3IpIHRocm93Ow0KICAgICAgICAvLyBNYWtlIHN1cmUgdGhlIF90YXJnZXQgaXMgY3VycmVudGx5IGFscmVhZHkgYSBtZW1iZXINCiAgICAgICAgaWYgKG1lbWJlckxldmVsKF90YXJnZXQpID09IE1lbWJlckxldmVsLk5vbmUpIHRocm93Ow0KICAgICAgICAvLyBNYWtlIHN1cmUgdGhlIG5ldyBsZXZlbCBpcyBsb3dlciBsZXZlbCB0aGFuIHdlIGFyZSAod2UgY2Fubm90IG92ZXJwcm9tb3RlKQ0KICAgICAgICBpZiAobXNnLnNlbmRlciAhPSBvd25lciAmJiBtZW1iZXJMZXZlbChtc2cuc2VuZGVyKSA8PSBsZXZlbCkgdGhyb3c7DQogICAgICAgIC8vIE1ha2Ugc3VyZSB0aGUgbWVtYmVyIGlzIGN1cnJlbnRseSBvbiBsb3dlciBsZXZlbCB0aGFuIHdlIGFyZQ0KICAgICAgICBpZiAobXNnLnNlbmRlciAhPSBvd25lciAmJiBtZW1iZXJMZXZlbChtc2cuc2VuZGVyKSA8PSBtZW1iZXJMZXZlbChfdGFyZ2V0KSkgdGhyb3c7DQoNCiAgICAgICAgbWVtYmVyW190YXJnZXRdLmxldmVsID0gbGV2ZWw7DQogICAgICAgIFNldE1lbWJlckxldmVsKG1zZy5zZW5kZXIsIF90YXJnZXQsIGxldmVsKTsNCiAgICB9DQoNCiAgICBmdW5jdGlvbiBzZXRNZW1iZXJJbmZvKGFkZHJlc3MgX3RhcmdldCwgYnl0ZXMzMiBpbmZvKSB7DQogICAgICAgIC8vIE1ha2Ugc3VyZSB0aGUgdGFyZ2V0IGlzIGN1cnJlbnRseSBhbHJlYWR5IGEgbWVtYmVyDQogICAgICAgIGlmIChtZW1iZXJMZXZlbChfdGFyZ2V0KSA9PSBNZW1iZXJMZXZlbC5Ob25lKSB0aHJvdzsNCiAgICAgICAgLy8gTWFrZSBzdXJlIHRoZSBtZW1iZXIgaXMgY3VycmVudGx5IG9uIGxvd2VyIGxldmVsIHRoYW4gd2UgYXJlDQogICAgICAgIGlmIChtc2cuc2VuZGVyICE9IG93bmVyICYmIG1zZy5zZW5kZXIgIT0gX3RhcmdldCAmJiBtZW1iZXJMZXZlbChtc2cuc2VuZGVyKSA8PSBtZW1iZXJMZXZlbChfdGFyZ2V0KSkgdGhyb3c7DQoNCiAgICAgICAgbWVtYmVyW190YXJnZXRdLmluZm8gPSBpbmZvOw0KICAgICAgICBTZXRNZW1iZXJJbmZvKG1zZy5zZW5kZXIsIF90YXJnZXQsIGluZm8pOw0KICAgIH0NCg0KICAgIGZ1bmN0aW9uIG1lbWJlcklkKGFkZHJlc3MgX3RhcmdldCkgY29uc3RhbnQgcmV0dXJucyAodWludCkgew0KICAgICAgICByZXR1cm4gbWVtYmVyW190YXJnZXRdLmlkOw0KICAgIH0NCg0KICAgIGZ1bmN0aW9uIG1lbWJlckxldmVsKGFkZHJlc3MgX3RhcmdldCkgY29uc3RhbnQgcmV0dXJucyAoTWVtYmVyTGV2ZWwpIHsNCiAgICAgICAgcmV0dXJuIG1lbWJlcltfdGFyZ2V0XS5sZXZlbDsNCiAgICB9DQoNCiAgICBmdW5jdGlvbiBtZW1iZXJJbmZvKGFkZHJlc3MgX3RhcmdldCkgY29uc3RhbnQgcmV0dXJucyAoYnl0ZXMzMikgew0KICAgICAgICByZXR1cm4gbWVtYmVyW190YXJnZXRdLmluZm87DQogICAgfQ0KfQ=='