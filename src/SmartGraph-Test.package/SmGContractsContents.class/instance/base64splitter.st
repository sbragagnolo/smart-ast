base 64 content
base64splitter
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC4xMTsNCg0KLy8vIEB0aXRsZSBTcGxpdHRlcg0KLy8vIEBhdXRob3IgMHhjYWZmIChNYXJ0aW4gQ2hhcmxlcykNCi8vLyBAbm90aWNlIEFuIGV0aGVyZXVtIHNtYXJ0IGNvbnRyYWN0IHRvIHNwbGl0IHJlY2VpdmVkIGZ1bmRzIGJldHdlZW4gYSBudW1iZXINCi8vLyBvZiBvdXRwdXRzLg0KY29udHJhY3QgU3BsaXR0ZXIgew0KICAgIC8vIE1hcHBpbmcgYmV0d2VlbiBhZGRyZXNzZXMgYW5kIGhvdyBtdWNoIG1vbmV5IHRoZXkgaGF2ZSB3aXRoZHJhd24uIFRoaXMgaXMNCiAgICAvLyB1c2VkIHRvIGNhbGN1bGF0ZSB0aGUgYmFsYW5jZSBvZiBlYWNoIGFjY291bnQuIFRoZSBwdWJsaWMga2V5d29yZCBhbGxvd3MNCiAgICAvLyByZWFkaW5nIGZyb20gdGhlIG1hcCBidXQgbm90IHdyaXRpbmcgdG8gdGhlIG1hcCB1c2luZyB0aGUNCiAgICAvLyBhbW91bnRzV2l0aGRyZXcoYWRkcmVzcykgbWV0aG9kIG9mIHRoZSBjb250cmFjdC4gSXQncyBwdWJsaWMgbWFpbmx5IGZvcg0KICAgIC8vIHRlc3RpbmcuDQogICAgbWFwcGluZyhhZGRyZXNzID0+IHVpbnQpIHB1YmxpYyBhbW91bnRzV2l0aGRyZXc7DQoNCiAgICAvLyBBIHNldCBvZiBwYXJ0aWVzIHRvIHNwbGl0IHRoZSBmdW5kcyBiZXR3ZWVuLiBUaGV5IGFyZSBpbml0aWFsaXplZCBpbiB0aGUNCiAgICAvLyBjb25zdHJ1Y3Rvci4NCiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gYm9vbCkgcHVibGljIGJldHdlZW47DQoNCiAgICAvLyBUaGUgbnVtYmVyIG9mIHdheXMgaW5jb21pbmcgZnVuZHMgd2lsbCB3ZSBzcGxpdC4NCiAgICB1aW50IHB1YmxpYyBjb3VudDsNCg0KICAgIC8vIFRoZSB0b3RhbCBhbW91bnQgb2YgZnVuZHMgd2hpY2ggaGFzIGJlZW4gZGVwb3NpdGVkIGludG8gdGhlIGNvbnRyYWN0Lg0KICAgIHVpbnQgcHVibGljIHRvdGFsSW5wdXQ7DQoNCiAgICAvLyBUaGlzIGlzIHRoZSBjb25zdHJ1Y3RvciBvZiB0aGUgY29udHJhY3QuIEl0IGlzIGNhbGxlZCBhdCBkZXBsb3kgdGltZS4NCg0KICAgIC8vLyBAcGFyYW0gYWRkcnMgVGhlIGFkZHJlc3MgcmVjZWl2ZWQgZnVuZHMgd2lsbCBiZSBzcGxpdCBiZXR3ZWVuLg0KICAgIGZ1bmN0aW9uIFNwbGl0dGVyKGFkZHJlc3NbXSBhZGRycykgew0KICAgICAgICBjb3VudCA9IGFkZHJzLmxlbmd0aDsNCg0KICAgICAgICBmb3IgKHVpbnQgaSA9IDA7IGkgPCBhZGRycy5sZW5ndGg7IGkrKykgew0KICAgICAgICAgICAgLy8gbG9vcCBvdmVyIGFkZHJzIGFuZCB1cGRhdGUgc2V0IG9mIGluY2x1ZGVkIGFjY291bnRzDQogICAgICAgICAgICBhZGRyZXNzIGluY2x1ZGVkID0gYWRkcnNbaV07DQogICAgICAgICAgICBiZXR3ZWVuW2luY2x1ZGVkXSA9IHRydWU7DQogICAgICAgIH0NCiAgICB9DQoNCiAgICAvLyBUbyBzYXZlIG9uIHRyYW5zYWN0aW9uIGZlZXMsIGl0J3MgYmVuZWZpY2lhbCB0byB3aXRoZHJhdyBpbiBvbmUgYmlnDQogICAgLy8gdHJhbnNhY3Rpb24gaW5zdGVhZCBvZiBtYW55IGxpdHRsZSBvbmVzLiBUaGF0J3Mgd2h5IGEgd2l0aGRyYXdsIGZsb3cgaXMNCiAgICAvLyBiZWluZyB1c2VkLg0KDQogICAgLy8vIEBub3RpY2UgV2l0aGRyYXdzIGZyb20gdGhlIHNlbmRlcidzIHNoYXJlIG9mIGZ1bmRzIGFuZCBkZXBvc2l0cyBpbnRvIHRoZQ0KICAgIC8vLyBzZW5kZXIncyBhY2NvdW50LiBJZiB0aGVyZSBhcmUgaW5zdWZmaWNpZW50IGZ1bmRzIGluIHRoZSBjb250cmFjdCwgb3INCiAgICAvLy8gbW9yZSB0aGFuIHRoZSBzaGFyZSBpcyBiZWluZyB3aXRoZHJhd24sIHRocm93cywgY2FuY2VsaW5nIHRoZQ0KICAgIC8vLyB0cmFuc2FjdGlvbi4NCiAgICAvLy8gQHBhcmFtIGFtb3VudCBUaGUgYW1vdW50IG9mIGZ1bmRzIGluIHdlaSB0byB3aXRoZHJhdyBmcm9tIHRoZSBjb250cmFjdC4NCiAgICBmdW5jdGlvbiB3aXRoZHJhdyh1aW50IGFtb3VudCkgew0KICAgICAgICBTcGxpdHRlci53aXRoZHJhd0ludGVybmFsKGFtb3VudCwgZmFsc2UpOw0KICAgIH0NCg0KICAgIC8vLyBAbm90aWNlIFdpdGhkcmF3cyBhbGwgZnVuZHMgYXZhaWxhYmxlIHRvIHRoZSBzZW5kZXIgYW5kIGRlcG9zaXRzIHRoZW0NCiAgICAvLy8gaW50byB0aGUgc2VuZGVyJ3MgYWNjb3VudC4NCiAgICBmdW5jdGlvbiB3aXRoZHJhd0FsbCgpIHsNCiAgICAgICAgU3BsaXR0ZXIud2l0aGRyYXdJbnRlcm5hbCgwLCB0cnVlKTsNCiAgICB9DQoNCiAgICAvLyBTaW5jZSBgd2l0aGRyYXdJbnRlcm5hbGAgaXMgaW50ZXJuYWwsIGl0IGlzbid0IGluIHRoZSBBQkkgYW5kIGNhbid0IGJlDQogICAgLy8gY2FsbGVkIGZyb20gb3V0c2lkZSBvZiB0aGUgY29udHJhY3QuDQoNCiAgICAvLy8gQG5vdGljZSBDaGVja3Mgd2hldGhlciB0aGUgc2VuZGVyIGlzIGFsbG93ZWQgdG8gd2l0aGRyYXcgYW5kIGhhcw0KICAgIC8vLyBzdWZmaWNpZW50IGZ1bmRzLCB0aGVuIHdpdGhkcmF3cy4NCiAgICAvLy8gQHBhcmFtIHJlcXVlc3RlZCBUaGUgYW1vdW50IG9mIGZ1bmRzIGluIHdlaSB0byB3aXRoZHJhdyBmcm9tIHRoZQ0KICAgIC8vLyBjb250cmFjdC4gSWYgdGhlIGBhbGxgIHBhcmFtZXRlciBpcyB0cnVlLCB0aGUgYGFtb3VudGAgcGFyYW1ldGVyIGlzDQogICAgLy8vIGlnbm9yZWQuIElmIGZ1bmRzIGFyZSBpbnN1ZmZpY2llbnQsIHRocm93cy4NCiAgICAvLy8gQHBhcmFtIGFsbCBJZiB0cnVlLCB3aXRoZHJhd3MgYWxsIGZ1bmRzIHRoZSBzZW5kZXIgaGFzIGFjY2VzcyB0byBmcm9tDQogICAgLy8vIHRoaXMgY29udHJhY3QuDQogICAgZnVuY3Rpb24gd2l0aGRyYXdJbnRlcm5hbCh1aW50IHJlcXVlc3RlZCwgYm9vbCBhbGwpIGludGVybmFsIHsNCiAgICAgICAgLy8gUmVxdWlyZSB0aGUgd2l0aGRyYXdlciB0byBiZSBpbmNsdWRlZCBpbiBgYmV0d2VlbmAgYXQgY29udHJhY3QNCiAgICAgICAgLy8gY3JlYXRpb24gdGltZS4NCiAgICAgICAgcmVxdWlyZShiZXR3ZWVuW21zZy5zZW5kZXJdKTsNCg0KICAgICAgICAvLyBEZWNpZGUgdGhlIGFtb3VudCB0byB3aXRoZHJhdyBiYXNlZCBvbiB0aGUgYGFsbGAgcGFyYW1ldGVyLg0KICAgICAgICB1aW50IGF2YWlsYWJsZSA9IFNwbGl0dGVyLmJhbGFuY2UoKTsNCiAgICAgICAgdWludCB0cmFuc2ZlcnJpbmcgPSAwOw0KDQogICAgICAgIGlmIChhbGwpIHsgdHJhbnNmZXJyaW5nID0gYXZhaWxhYmxlOyB9DQogICAgICAgIGVsc2UgeyBhdmFpbGFibGUgPSByZXF1ZXN0ZWQ7IH0NCg0KICAgICAgICAvLyBFbnN1cmVzIHRoZSBmdW5kcyBhcmUgYXZhaWxhYmxlIHRvIG1ha2UgdGhlIHRyYW5zZmVyLCBvdGhlcndpc2UNCiAgICAgICAgLy8gdGhyb3dzLg0KICAgICAgICByZXF1aXJlKHRyYW5zZmVycmluZyA8PSBhdmFpbGFibGUpOw0KDQogICAgICAgIC8vIFVwZGF0ZXMgdGhlIGludGVybmFsIHN0YXRlLCB0aGlzIGlzIGRvbmUgYmVmb3JlIHRoZSB0cmFuc2ZlciB0bw0KICAgICAgICAvLyBwcmV2ZW50IHJlLWVudHJhbmN5IGJ1Z3MuDQogICAgICAgIGFtb3VudHNXaXRoZHJld1ttc2cuc2VuZGVyXSArPSB0cmFuc2ZlcnJpbmc7DQoNCiAgICAgICAgLy8gVHJhbnNmZXIgZnVuZHMgZnJvbSB0aGUgY29udHJhY3QgdG8gdGhlIHNlbmRlci4gVGhlIGdhcyBmb3IgdGhpcw0KICAgICAgICAvLyB0cmFuc2FjdGlvbiBpcyBwYWlkIGZvciBieSBtc2cuc2VuZGVyLg0KICAgICAgICBtc2cuc2VuZGVyLnRyYW5zZmVyKHRyYW5zZmVycmluZyk7DQogICAgfQ0KDQogICAgLy8gV2UgZG8gaW50ZWdlciBkaXZpc2lvbiAoZmxvb3IoYSAvIGIpKSB3aGVuIGNhbGN1bGF0aW5nIGVhY2ggc2hhcmUsIGJlY2F1c2UNCiAgICAvLyBzb2xpZGl0eSBkb2Vzbid0IGhhdmUgYSBkZWNpbWFsIG51bWJlciB0eXBlLiBUaGlzIG1lYW5zIHRoZXJlIHdpbGwgYmUgYQ0KICAgIC8vIG1heGltdW0gcmVtYWluZGVyIG9mIGNvdW50IC0gMSB3ZWkgbG9ja2VkIGluIHRoZSBjb250cmFjdC4gV2UgaWdub3JlIHRoaXMNCiAgICAvLyBiZWNhdXNlIGl0IGlzIHN1Y2ggYSBzbWFsbCBhbW91bnQgb2YgZXRoZXJldW0gKDEgV2VpID0gMTBeKC0xOCkNCiAgICAvLyBFdGhlcmV1bSkuIFRoZSBleHRyYSBXZWkgY2FuIGJlIGV4dHJhY3RlZCBieSBkZXBvc2l0aW5nIGFuIGFtb3VudCB0byBtYWtlDQogICAgLy8gdG90YWxJbnB1dCBldmVubHkgZGl2aXNhYmxlIGJldHdlZW4gY291bnQgcGFydGllcy4NCg0KICAgIC8vLyBAbm90aWNlIEdldHMgdGhlIGFtb3VudCBvZiBmdW5kcyBpbiBXZWkgYXZhaWxhYmxlIHRvIHRoZSBzZW5kZXIuDQogICAgZnVuY3Rpb24gYmFsYW5jZSgpIGNvbnN0YW50IHJldHVybnMgKHVpbnQpIHsNCiAgICAgICAgaWYgKCFiZXR3ZWVuW21zZy5zZW5kZXJdKSB7DQogICAgICAgICAgICAvLyBUaGUgc2VuZGVyIG9mIHRoZSBtZXNzYWdlIGlzbid0IHBhcnQgb2YgdGhlIHNwbGl0LiBJZ25vcmUgdGhlbS4NCiAgICAgICAgICAgIHJldHVybiAwOw0KICAgICAgICB9DQoNCiAgICAgICAgLy8gYHNoYXJlYCBpcyB0aGUgYW1vdW50IG9mIGZ1bmRzIHdoaWNoIGFyZSBhdmFpbGFibGUgdG8gZWFjaCBvZiB0aGUNCiAgICAgICAgLy8gYWNjb3VudHMgc3BlY2lmaWVkIGluIHRoZSBjb25zdHJ1Y3Rvci4NCiAgICAgICAgdWludCBzaGFyZSA9IHRvdGFsSW5wdXQgLyBjb3VudDsNCiAgICAgICAgdWludCB3aXRoZHJldyA9IGFtb3VudHNXaXRoZHJld1ttc2cuc2VuZGVyXTsNCiAgICAgICAgdWludCBhdmFpbGFibGUgPSBzaGFyZSAtIHdpdGhkcmV3Ow0KDQogICAgICAgIGFzc2VydChhdmFpbGFibGUgPj0gMCAmJiBhdmFpbGFibGUgPD0gc2hhcmUpOw0KDQogICAgICAgIHJldHVybiBhdmFpbGFibGU7DQogICAgfQ0KDQogICAgLy8gVGhpcyBmdW5jdGlvbiB3aWxsIGJlIHJ1biB3aGVuIGEgdHJhbnNhY3Rpb24gaXMgc2VudCB0byB0aGUgY29udHJhY3QNCiAgICAvLyB3aXRob3V0IGFueSBkYXRhLiBJdCBpcyBtaW5pbWFsIHRvIHNhdmUgb24gZ2FzIGNvc3RzLg0KICAgIGZ1bmN0aW9uKCkgcGF5YWJsZSB7DQogICAgICAgIHRvdGFsSW5wdXQgKz0gbXNnLnZhbHVlOw0KICAgIH0NCn0='