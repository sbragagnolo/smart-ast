base 64 content
base64splitterEthToEtc1
	^'Y29udHJhY3QgQW1JT25UaGVGb3JrIHsNCiAgICBmdW5jdGlvbiBmb3JrZWQoKSBjb25zdGFudCByZXR1cm5zKGJvb2wpOw0KfQ0KDQpjb250cmFjdCBTcGxpdHRlckV0aFRvRXRjIHsNCg0KICAgIGV2ZW50IE9uUmVjZWl2ZSh1aW50NjQpOw0KDQogICAgc3RydWN0IFJlY2VpdmVkIHsNCiAgICAgICAgYWRkcmVzcyBmcm9tOw0KICAgICAgICB1aW50MjU2IHZhbHVlOw0KICAgIH0NCg0KICAgIGFkZHJlc3MgaW50ZXJtZWRpYXRlOw0KICAgIGFkZHJlc3Mgb3duZXI7DQogICAgbWFwcGluZyAodWludDY0ID0+IFJlY2VpdmVkKSBwdWJsaWMgcmVjZWl2ZWQ7DQogICAgdWludDY0IHB1YmxpYyBzZXEgPSAxOw0KDQogICAgLy8gdGhlcmUgaXMgYSBsaW1pdCBhY2NlcHRlZCBieSBleGNoYW5nZQ0KICAgIHVpbnQyNTYgcHVibGljIHVwTGltaXQgPSA1MCBldGhlcjsNCiAgICAvLyBhbmQgZXhjaGFuZ2UgY29zdHMsIGlnbm9yZSBzbWFsbCB0cmFuc2FjdGlvbnMNCiAgICB1aW50MjU2IHB1YmxpYyBsb3dMaW1pdCA9IDAuMSBldGhlcjsNCg0KICAgIEFtSU9uVGhlRm9yayBhbUlPblRoZUZvcmsgPSBBbUlPblRoZUZvcmsoMHgyYmQyMzI2Yzk5M2RmYWVmODRmNjk2NTI2MDY0ZmYyMmViYTViMzYyKTsNCg0KICAgIGZ1bmN0aW9uIFNwbGl0dGVyRXRoVG9FdGMoKSB7DQogICAgICAgIG93bmVyID0gbXNnLnNlbmRlcjsNCiAgICB9DQoNCiAgICBmdW5jdGlvbigpIHsNCiAgICAgICAgLy9zdG9wIHRvbyBzbWFsbCB0cmFuc2FjdGlvbnMNCiAgICAgICAgaWYgKG1zZy52YWx1ZSA8IGxvd0xpbWl0KSB0aHJvdzsNCg0KICAgICAgICAvLyBwcm9jZXNzIHdpdGggZXhjaGFuZ2Ugb24gdGhlIEZPUksgY2hhaW4NCiAgICAgICAgaWYgKGFtSU9uVGhlRm9yay5mb3JrZWQoKSkgew0KICAgICAgICAgICAgLy8gY2hlY2sgdGhhdCByZWNlaXZlZCBsZXNzIG9yIGVxdWFsIHRvIGNvbnZlcnNpb24gdXAgbGltaXQNCiAgICAgICAgICAgIGlmIChtc2cudmFsdWUgPD0gdXBMaW1pdCkgew0KICAgICAgICAgICAgICAgIGlmICghaW50ZXJtZWRpYXRlLnNlbmQobXNnLnZhbHVlKSkgdGhyb3c7DQogICAgICAgICAgICAgICAgdWludDY0IGlkID0gc2VxKys7DQogICAgICAgICAgICAgICAgcmVjZWl2ZWRbaWRdID0gUmVjZWl2ZWQobXNnLnNlbmRlciwgbXNnLnZhbHVlKTsNCiAgICAgICAgICAgICAgICBPblJlY2VpdmUoaWQpOw0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAvLyBzZW5kIG9ubHkgYWNjZXB0YWJsZSB2YWx1ZSwgcmV0dXJuIHJlc3QNCiAgICAgICAgICAgICAgICBpZiAoIWludGVybWVkaWF0ZS5zZW5kKHVwTGltaXQpKSB0aHJvdzsNCiAgICAgICAgICAgICAgICBpZiAoIW1zZy5zZW5kZXIuc2VuZChtc2cudmFsdWUgLSB1cExpbWl0KSkgdGhyb3c7DQogICAgICAgICAgICAgICAgdWludDY0IGlkcCA9IHNlcSsrOw0KICAgICAgICAgICAgICAgIHJlY2VpdmVkW2lkXSA9IFJlY2VpdmVkKG1zZy5zZW5kZXIsIHVwTGltaXQpOw0KICAgICAgICAgICAgICAgIE9uUmVjZWl2ZShpZCk7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgLy8gYWx3YXlzIHJldHVybiB2YWx1ZSBmcm9tIENMQVNTSUMgY2hhaW4NCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIGlmICghbXNnLnNlbmRlci5zZW5kKG1zZy52YWx1ZSkpIHRocm93Ow0KICAgICAgICB9DQogICAgfQ0KDQogICAgZnVuY3Rpb24gcHJvY2Vzc2VkKHVpbnQ2NCBfaWQpIHsNCiAgICAgICAgaWYgKG1zZy5zZW5kZXIgIT0gb3duZXIpIHRocm93Ow0KICAgICAgICBkZWxldGUgcmVjZWl2ZWRbX2lkXTsNCiAgICB9DQoNCiAgICBmdW5jdGlvbiBzZXRJbnRlcm1lZGlhdGUoYWRkcmVzcyBfaW50ZXJtZWRpYXRlKSB7DQogICAgICAgIGlmIChtc2cuc2VuZGVyICE9IG93bmVyKSB0aHJvdzsNCiAgICAgICAgaW50ZXJtZWRpYXRlID0gX2ludGVybWVkaWF0ZTsNCiAgICB9DQogICAgZnVuY3Rpb24gc2V0VXBMaW1pdCh1aW50IF9saW1pdCkgew0KICAgICAgICBpZiAobXNnLnNlbmRlciAhPSBvd25lcikgdGhyb3c7DQogICAgICAgIHVwTGltaXQgPSBfbGltaXQ7DQogICAgfQ0KICAgIGZ1bmN0aW9uIHNldExvd0xpbWl0KHVpbnQgX2xpbWl0KSB7DQogICAgICAgIGlmIChtc2cuc2VuZGVyICE9IG93bmVyKSB0aHJvdzsNCiAgICAgICAgbG93TGltaXQgPSBfbGltaXQ7DQogICAgfQ0KDQp9'