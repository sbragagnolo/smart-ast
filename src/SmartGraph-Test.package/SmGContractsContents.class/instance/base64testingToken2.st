base 64 content
base64testingToken2
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC44Ow0KDQpjb250cmFjdCB0ZXN0aW5nVG9rZW4gew0KCW1hcHBpbmcgKGFkZHJlc3MgPT4gdWludDI1NikgcHVibGljIGJhbGFuY2VPZjsNCgltYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIHB1YmxpYyB3ZWlXYW50ZWRPZjsNCgltYXBwaW5nIChhZGRyZXNzID0+IHVpbnQyNTYpIHB1YmxpYyB0b2tlbnNPZmZlcmVkT2Y7DQoJbWFwcGluZyAoYWRkcmVzcyA9PiBib29sKSBwdWJsaWMgdHJhZGVBY3RpdmU7DQoJYWRkcmVzcyBwdWJsaWMgYmFuazsNCgl1aW50MjU2IHB1YmxpYyBldGhUYXhSYXRlID0gMTA7DQoJdWludDI1NiBwdWJsaWMgdG9rZW5UYXhSYXRlID0gNTsNCglmdW5jdGlvbiB0ZXN0aW5nVG9rZW4oKSB7DQoJCWJhbmsgPSBtc2cuc2VuZGVyOw0KCQliYWxhbmNlT2ZbbXNnLnNlbmRlcl0gPSAxMDAwMDA7DQoJfQ0KCQ0KCWV2ZW50IFRyYW5zZmVyKGFkZHJlc3MgaW5kZXhlZCBfZnJvbSwgYWRkcmVzcyBpbmRleGVkIF90bywgdWludDI1NiBfdmFsdWUpOw0KCQ0KCWZ1bmN0aW9uIHRvdGFsU3VwcGx5KCkgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiB0b3RhbFN1cHBseSkgew0KCSAgICByZXR1cm4gMTAwMDA7DQoJfQ0KCWZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBiYWxhbmNlKSB7DQoJICAgIHJldHVybiBiYWxhbmNlT2ZbX293bmVyXTsNCgl9DQoJDQoJZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsgLy9naXZlIHRva2VucyB0byBzb21lb25lDQoJCWlmIChiYWxhbmNlT2ZbbXNnLnNlbmRlcl08X3ZhbHVlKSB0aHJvdzsNCgkJaWYgKGJhbGFuY2VPZltfdG9dK192YWx1ZTxiYWxhbmNlT2ZbX3RvXSkgdGhyb3c7DQoJCWlmIChfdmFsdWU8MCkgdGhyb3c7DQoJCWJhbGFuY2VPZlttc2cuc2VuZGVyXSAtPSBfdmFsdWU7DQoJCWJhbGFuY2VPZltfdG9dICs9IChfdmFsdWUqKDEwMC10b2tlblRheFJhdGUpKS8xMDA7DQoJCWJhbGFuY2VPZltiYW5rXSArPSAoX3ZhbHVlKnRva2VuVGF4UmF0ZSkvMTAwOw0KCQkvL25vdyBjaGVjayBmb3Igcm91bmRpbmcgZG93biB3aGljaCB3b3VsZCByZXN1bHQgaW4gcGVybWFuZW50IGxvc3Mgb2YgY29pbnMNCgkJaWYgKChfdmFsdWUqdG9rZW5UYXhSYXRlKSUxMDAgIT0gMCkgYmFsYW5jZU9mW2JhbmtdKz0xOw0KCQlUcmFuc2Zlcihtc2cuc2VuZGVyLF90byxfdmFsdWUpOw0KCQlyZXR1cm4gdHJ1ZTsNCgl9DQoJDQoJbWFwcGluZyAoYWRkcmVzcyA9PiBtYXBwaW5nIChhZGRyZXNzPT51aW50MjU2KSkgYXBwcm92YWxMaXN0Ow0KCWZ1bmN0aW9uIHRyYW5zZmVyRnJvbShhZGRyZXNzIF9mcm9tLCBhZGRyZXNzIF90bywgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcykgew0KCQlpZiAoYmFsYW5jZU9mW19mcm9tXTxfdmFsdWUpIHRocm93Ow0KCQlpZiAoYmFsYW5jZU9mW190b10rX3ZhbHVlPGJhbGFuY2VPZltfdG9dKSB0aHJvdzsNCgkJaWYgKF92YWx1ZTwwKSB0aHJvdzsNCgkJaWYgKGFwcHJvdmFsTGlzdFtfZnJvbV1bbXNnLnNlbmRlcl08X3ZhbHVlKSB0aHJvdzsNCgkJYXBwcm92YWxMaXN0W19mcm9tXVttc2cuc2VuZGVyXS09X3ZhbHVlOw0KCQliYWxhbmNlT2ZbX2Zyb21dIC09IF92YWx1ZTsNCgkJYmFsYW5jZU9mW190b10gKz0gKF92YWx1ZSooMTAwLXRva2VuVGF4UmF0ZSkpLzEwMDsNCgkJYmFsYW5jZU9mW2JhbmtdICs9IChfdmFsdWUqdG9rZW5UYXhSYXRlKS8xMDA7DQoJCS8vbm93IGNoZWNrIGZvciByb3VuZGluZyBkb3duIHdoaWNoIHdvdWxkIHJlc3VsdCBpbiBwZXJtYW5lbnQgbG9zcyBvZiBjb2lucw0KCQlpZiAoKF92YWx1ZSp0b2tlblRheFJhdGUpJTEwMCAhPSAwKSBiYWxhbmNlT2ZbYmFua10rPTE7DQoJCVRyYW5zZmVyKF9mcm9tLF90byxfdmFsdWUpOw0KCQlyZXR1cm4gdHJ1ZTsNCgl9DQoJZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIF9vd25lciwgYWRkcmVzcyBpbmRleGVkIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSk7DQoJZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7DQoJICAgIGFwcHJvdmFsTGlzdFttc2cuc2VuZGVyXVtfc3BlbmRlcl09X3ZhbHVlOw0KCSAgICBBcHByb3ZhbChtc2cuc2VuZGVyLF9zcGVuZGVyLF92YWx1ZSk7DQoJICAgIHJldHVybiB0cnVlOw0KCX0NCglmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBfb3duZXIsIGFkZHJlc3MgX3NwZW5kZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYgcmVtYWluaW5nKSB7DQoJICAgIHJldHVybiBhcHByb3ZhbExpc3RbX293bmVyXVtfc3BlbmRlcl07DQoJfQ0KCQ0KCWZ1bmN0aW9uIG9mZmVyVHJhZGUodWludDI1NiBfd2VpV2FudGVkLCB1aW50MjU2IF90b2tlbnNPZmZlcmVkKSB7IC8vb2ZmZXIgdGhlIGFtdCBvZiBldGhlciB5b3Ugd2FudCBhbmQgdGhlIGFtdCBvZiB0b2tlbnMgeW91ZCBnaXZlDQoJICAgIHdlaVdhbnRlZE9mW21zZy5zZW5kZXJdID0gX3dlaVdhbnRlZDsNCgkgICAgdG9rZW5zT2ZmZXJlZE9mW21zZy5zZW5kZXJdID0gX3Rva2Vuc09mZmVyZWQ7DQoJICAgIHRyYWRlQWN0aXZlW21zZy5zZW5kZXJdID0gdHJ1ZTsNCgl9DQoJZnVuY3Rpb24gYWdyZWVUb1RyYWRlKGFkZHJlc3MgX2Zyb20pIHBheWFibGUgeyAvL2Nob29zZSBhIHRyYWRlIHRvIGFncmVlIHRvIGFuZCBleGVjdXRlIGl0DQoJICAgIGlmICghdHJhZGVBY3RpdmVbX2Zyb21dKSB0aHJvdzsNCgkgICAgaWYgKHdlaVdhbnRlZE9mW19mcm9tXSE9bXNnLnZhbHVlKSB0aHJvdzsNCgkgICAgaWYgKGJhbGFuY2VPZltfZnJvbV08dG9rZW5zT2ZmZXJlZE9mW19mcm9tXSkgdGhyb3c7DQoJICAgIGlmICghX2Zyb20uc2VuZCgobXNnLnZhbHVlKigxMDAtZXRoVGF4UmF0ZSkpLzEwMCkpIHRocm93Ow0KCSAgICBiYWxhbmNlT2ZbX2Zyb21dIC09IHRva2Vuc09mZmVyZWRPZltfZnJvbV07DQoJICAgIGJhbGFuY2VPZlttc2cuc2VuZGVyXSArPSAodG9rZW5zT2ZmZXJlZE9mW19mcm9tXSooMTAwLXRva2VuVGF4UmF0ZSkpLzEwMDsNCgkJYmFsYW5jZU9mW2JhbmtdICs9ICh0b2tlbnNPZmZlcmVkT2ZbX2Zyb21dKnRva2VuVGF4UmF0ZSkvMTAwOw0KCQl0cmFkZUFjdGl2ZVtfZnJvbV0gPSBmYWxzZTsNCgkJVHJhbnNmZXIoX2Zyb20sbXNnLnNlbmRlcix0b2tlbnNPZmZlcmVkT2ZbX2Zyb21dKTsNCgkJLy9ub3cgY2hlY2sgZm9yIHJvdW5kaW5nIGRvd24gd2hpY2ggd291bGQgcmVzdWx0IGluIHBlcm1hbmVudCBsb3NzIG9mIGNvaW5zDQoJCWlmICgodG9rZW5zT2ZmZXJlZE9mW19mcm9tXSp0b2tlblRheFJhdGUpJTEwMCAhPSAwKSBiYWxhbmNlT2ZbYmFua10rPTE7DQoJfQ0KCQ0KCW1vZGlmaWVyIGJhbmtPbmx5IHsNCgkJaWYgKG1zZy5zZW5kZXIgIT0gYmFuaykgdGhyb3c7DQoJCV87DQoJfQ0KCQ0KCWZ1bmN0aW9uIHNldFRheGVzKHVpbnQyNTYgX2V0aFRheFJhdGUsIHVpbnQyNTYgX3Rva2VuVGF4UmF0ZSkgYmFua09ubHkgeyAvL3RoZSBiYW5rIGNhbiBjaGFuZ2UgdGhlIHRheCByYXRlcw0KCQlldGhUYXhSYXRlID0gX2V0aFRheFJhdGU7DQoJCXRva2VuVGF4UmF0ZSA9IF90b2tlblRheFJhdGU7DQoJfQ0KCWZ1bmN0aW9uIGV4dHJhY3RXZWkodWludDI1NiBfd2VpKSBiYW5rT25seSB7IC8vd2l0aGRyYXcgbW9uZXkgZnJvbSB0aGUgY29udHJhY3QNCgkJaWYgKCFtc2cuc2VuZGVyLnNlbmQoX3dlaSkpIHRocm93Ow0KCX0NCglmdW5jdGlvbiB0cmFuc2Zlck93bmVyc2hpcChhZGRyZXNzIF9iYW5rKSBiYW5rT25seSB7IC8vY2hhbmdlIG93bmVyDQoJCWJhbmsgPSBfYmFuazsNCgl9DQp9'