base 64 content
base64theGreatEtherRace
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC42Ow0KDQovLw0KLy8gIFRoaXMgaXMgYW4gRXRoZXJldW0gUmFjZSAoIGFuZCBjb2RlciBjaGFsbGVuZ2UgKQ0KLy8NCi8vICBUbyBzdXBwb3J0IHRoaXMgZ2FtZSBwbGVhc2UgbWFrZSBzdXJlIHlvdSBjaGVjayBvdXQgdGhlIHNwb25zb3IgaW4gdGhlIHB1YmxpYyBzcG9uc29yIHZhcmlhYmxlIG9mIGVhY2ggZ2FtZQ0KLy8NCi8vICBob3cgdG8gcGxheToNCi8vDQovLyAgMSkgMjAgcmFjZXJzIGNhbiByZWdpc3RlciwgcmFjZSBzdGFydGluZyBmZWUgaXMgNTAgZXRoZXIgcGVyIGVudHJ5IChvbmx5IG9uZSBlbnRyeSBwZXIgcGVyc29uIGFsbG93ZWQhKQ0KLy8gIDIpIE9uY2UgMjAgcmFjZXJzIGhhdmUgcmVnaXN0ZXJlZCwgYW55b25lIGNhbiBzdGFydCB0aGUgcmFjZSBieSBoaXR0aW5nIHRoZSBzdGFydF90aGVfcmFjZSgpIGZ1bmN0aW9uDQovLyAgMykgT25jZSB0aGUgcmFjZSBoYXMgc3RhcnRlZCwgZXZlcnkgcmFjZXIgaGFzIHRvIGhpdCB0aGUgZHJpdmUoKSBmdW5jdGlvbiBhcyBvZnRlbiBhcyB0aGV5IGNhbg0KLy8gIDQpIEFmdGVyIGFwcHJveCAzMCBtaW5zICh+MTI2IGJsb2NrcykgdGhlIHJhY2UgZW5kcywgYW5kIHRoZSB3aW5uZXIgY2FuIGNsYWltIGhpcyBwcmljZQ0KLy8gICAgICAgICAocHJpY2UgaXMgYWxsIGVudHJ5IGZlZXMsIGFzIHdlbGwgYXMgd2hhdGV2ZXIgd2FzIGluIHRoZSBhZGRpdGlvbmFsX3ByaWNlX21vbmV5IHBvb2wgdG8gc3RhcnQgd2l0aCApDQovLyAgICAgIA0KLy8gIFBsZWFzZSBub3RlIHRoYXQgd2UnbGwgdHJ5IHRvIGZpbmQgYSBkaWZmZXJlbnQgc3BvbnNvciBmb3IgZWFjaCByYWNlICh3aG8gY29udHJpYnV0ZXMgdG8gdGhlIGFkZGl0aW9uYWxfcHJpY2VfbW9uZXkgcG9vbCkNCi8vICBEb250IGZvcmdldCB0byBjaGVjayBvdXQgdGhlIHNwb25zb3Igb2YgdGhpcyBnYW1lIQ0KLy8NCi8vICBQbGVhc2Ugc2VuZCBhbnkgY29tbWVudHMgb3IgcXVlc3Rpb25zIGFib3V0IHRoaXMgZ2FtZSB0byBwaGlsaXBwLmJ1cmthcmRAeWFob28uY29tLCBJIHdpbGwgdHJ5IHRvIHJlc3BvbmQgd2l0aGluIGEgZGF5Lg0KLy8gIExhbmd1YWdlcyBzcG9rZW46IEVuZ2xpc2gsIEdlcm1hbiwgYSBsaXR0bGUgU3BhbmlzaA0KLy8NCg0KY29udHJhY3QgVGhlR3JlYXRFdGhlclJhY2Ugew0KDQogICBtYXBwaW5nKHVpbnQyNTYgPT4gYWRkcmVzcykgcHVibGljIHJhY2VyczsgLy9rZWVwcyByYWNlcnMgKGluZGV4IDEuLnRvdGFsX3JhY2VycykNCiAgIG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50MjU2KSBwdWJsaWMgcmFjZXJfaW5kZXg7IC8vIGFkZHJlc3MgdG8gaW5kZXgNCiAgIA0KICAgbWFwcGluZyhhZGRyZXNzID0+IHVpbnQyNTYpIHB1YmxpYyBkaXN0YW5jZV9kcml2ZW47IC8vIGtlZXBzIHRyYWNrIG9mIHRoZSByYWNlL3Byb2dyZXNzIG9mIHBsYXllcnMNCiAgIA0KICAgc3RyaW5nIHB1YmxpYyBzcG9uc29yOw0KICAgDQogICB1aW50MjU2IHB1YmxpYyB0b3RhbF9yYWNlcnM7ICAgICAgLy8gbnVtYmVyIG9mIHJhY2Vycywgb25jZSByZWFjaGVkIHRoZSByYWNlIGNhbiBzdGFydA0KICAgdWludDI1NiBwdWJsaWMgcmVnaXN0ZXJlZF9yYWNlcnM7IC8vIGhvdyBtYW55IHJhY2VycyBkbyB3ZSBoYXZlIGFscmVhZHkNCiAgIHVpbnQyNTYgcHVibGljIHJlZ2lzdHJhdGlvbl9mZWU7ICAvLyBob3cgbXVjaCBpcyBpdCB0byBwYXJ0aWNpcGF0ZQ0KICAgdWludDI1NiBwdWJsaWMgYWRkaXRpb25hbF9wcmljZV9tb25leTsNCiAgIHVpbnQyNTYgcHVibGljIHJhY2Vfc3RhcnRfYmxvY2s7ICAvLyBibG9jayBudW1iZXIgdGhhdCBpbmRpY2F0ZXMgd2hlbiB0aGUgcmFjZSBzdGFydHMgKHNldCBhZnRlciBldmVyeW9uZSBoYXMgc2lnbmVkIHVwKQ0KICAgDQogICBhZGRyZXNzIHB1YmxpYyB3aW5uZXI7DQogICANCiAgIGFkZHJlc3MgZGV2ZWxvcGVyX2FkZHJlc3M7IC8vIHRvIGdpdmUgZGV2ZWxvcGVyIGhpcyA1IGV0aGVyIGZlZQ0KICAgYWRkcmVzcyBjcmVhdG9yOw0KDQogICBlbnVtIEV2dFN0YXR1cyB7IFNpZ25VcCwgUmVhZHlUb1N0YXJ0LCBTdGFydGVkLCBGaW5pc2hlZCB9DQogICBFdnRTdGF0dXMgcHVibGljIGV2ZW50U3RhdHVzOw0KICAgDQogICBmdW5jdGlvbiBnZXRTdGF0dXMoKSBjb25zdGFudCByZXR1cm5zIChzdHJpbmcpIHsNCiAgICAgICBpZiAoZXZlbnRTdGF0dXMgPT0gRXZ0U3RhdHVzLlNpZ25VcCkgcmV0dXJuICJTaWduVXAiOw0KICAgICAgIGlmIChldmVudFN0YXR1cyA9PSBFdnRTdGF0dXMuUmVhZHlUb1N0YXJ0KSByZXR1cm4gIlJlYWR5VG9TdGFydCI7DQogICAgICAgaWYgKGV2ZW50U3RhdHVzID09IEV2dFN0YXR1cy5TdGFydGVkKSByZXR1cm4gIlN0YXJ0ZWQiOw0KICAgICAgIGlmIChldmVudFN0YXR1cyA9PSBFdnRTdGF0dXMuRmluaXNoZWQpIHJldHVybiAiRmluaXNoZWQiOw0KICAgfQ0KICAgDQogICBmdW5jdGlvbiBhZGRpdGlvbmFsX2luY2VudGl2ZSgpIHB1YmxpYyBwYXlhYmxlIHsgLy8gYWRkaXRpb25hbCBldGhlciB0byB3aW4sIG9uIHRvcCBvZiBvdGhlciByYWNlcnMgY29udHJpYnV0aW9uDQogICAgICAgYWRkaXRpb25hbF9wcmljZV9tb25leSArPSBtc2cudmFsdWU7DQogICB9DQogICANCiAgIGZ1bmN0aW9uIFRoZUdyZWF0RXRoZXJSYWNlKHN0cmluZyBwX3Nwb25zb3IpeyAvLyBjcmVhdGUgdGhlIGNvbnRyYWN0DQogICAgICAgc3BvbnNvciA9IHBfc3BvbnNvcjsNCiAgICAgICB0b3RhbF9yYWNlcnMgPSAyMDsNCiAgICAgICByZWdpc3RlcmVkX3JhY2VycyA9IDA7DQogICAgICAgcmVnaXN0cmF0aW9uX2ZlZSA9IDUwIGV0aGVyOw0KICAgICAgIGV2ZW50U3RhdHVzID0gRXZ0U3RhdHVzLlNpZ25VcDsNCiAgICAgICBkZXZlbG9wZXJfYWRkcmVzcyA9IDB4NmQ1NzE5RmY0NjRjNjYyNEMzMDIyNTkzMTM5M0Y4NDJFM0E0QTQxYTsNCiAgICAgICBjcmVhdG9yID0gbXNnLnNlbmRlcjsNCiAgIH0NCiAgIA0KICAgLy8vIDEpIFNJR04gVVAgRk9SIFRIRSBSQUNFIChvbmx5IG9uZSBlbnRyeSBwZXIgcGVyc29uIGFsbG93ZWQpDQogICANCiAgIGZ1bmN0aW9uKCkgcGF5YWJsZSB7IC8vIGJ1eSBzdGFydGluZyBwb3NpdGlvbiBieSBzaW1wbHkgdHJhbnNmZXJyaW5nIA0KICAgICAgICB1aW50IHN0b3JlOw0KICAgICAgICBpZiAoIG1zZy52YWx1ZSA8IHJlZ2lzdHJhdGlvbl9mZWUgKSB0aHJvdzsgICAgLy8gbm90IGVub3VnaCBwYWlkIHRvIA0KICAgICAgICBpZiAoIHJhY2VyX2luZGV4W21zZy5zZW5kZXJdID4gMCAgKSB0aHJvdzsgICAgLy8gYWxyZWFkeSBwYXJ0IG9mIHRoZSByYWNlDQogICAgICAgIGlmICggZXZlbnRTdGF0dXMgIT0gRXZ0U3RhdHVzLlNpZ25VcCApIHRocm93OyAvLyBhcmUgd2Ugc3RpbGwgaW4gc2lnbnVwIHBoYXNlDQogICAgICAgIA0KICAgICAgICByZWdpc3RlcmVkX3JhY2VycysrOw0KICAgICAgICByYWNlcl9pbmRleFttc2cuc2VuZGVyXSA9IHJlZ2lzdGVyZWRfcmFjZXJzOyAgLy8gc3RvcmUgcmFjZXIgaW5kZXgvcG9zaXRpb24NCiAgICAgICAgcmFjZXJzW3JlZ2lzdGVyZWRfcmFjZXJzXSA9IG1zZy5zZW5kZXI7ICAgICAgIC8vIHN0b3JlIHJhY2VyIGJ5IGluZGV4L3Bvc2l0aW9uDQogICAgICAgIGlmICggcmVnaXN0ZXJlZF9yYWNlcnMgPj0gdG90YWxfcmFjZXJzKXsgICAgICAvLyByYWNlIGlzIGZ1bGwsIGxldHMgYmVnaW4uLg0KICAgICAgICAgICAgZXZlbnRTdGF0dXMgPSBFdnRTdGF0dXMuUmVhZHlUb1N0YXJ0OyAgICAgLy8gbm8gbW9yZSBidXkgaW4ncyBwb3NzaWJsZQ0KICAgICAgICAgICAgcmFjZV9zdGFydF9ibG9jayA9IGJsb2NrLm51bWJlciArIDQyOyAgLy8gcmFjZSBjYW4gc3RhcnQgfiAxMCBtaW51dGVzIGFmdGVyIGxhc3QgcGVyc29uIGhhcyBzaWduZWQgdXANCiAgICAgICAgfQ0KICAgfQ0KICAgDQogICAvLy8gMikgU1RBUlQgVEhFIFJBQ0UNCiAgIA0KICAgZnVuY3Rpb24gc3RhcnRfdGhlX3JhY2UoKSBwdWJsaWMgew0KICAgICAgIGlmICggZXZlbnRTdGF0dXMgIT0gRXZ0U3RhdHVzLlJlYWR5VG9TdGFydCApIHRocm93OyAvLyByYWNlIGlzIG5vdCByZWFkeSB0byBiZSBzdGFydGVkIHlldA0KICAgICAgIGlmIChibG9jay5udW1iZXIgPCByYWNlX3N0YXJ0X2Jsb2NrKSB0aHJvdzsgICAgICAgICAgICAvLyByYWNlIHN0YXJ0aW5nIGJsb2NrIG5vdCB5ZXQgcmVhY2hlZA0KICAgICAgIGV2ZW50U3RhdHVzID0gRXZ0U3RhdHVzLlN0YXJ0ZWQ7DQogICB9DQogICANCiAgIC8vLyAzKSBEUklWRSBBUyBGQVNUIEFTIFlPVSBDQU4gKGhpdCB0aGlzIGZ1bmN0aW9uIGFzIG9mdGVuIGFzIHlvdSBjYW4gd2l0aGluIHRoZSBuZXh0IDMwIG1pbnMgKQ0KICAgZnVuY3Rpb24gZHJpdmUoKSBwdWJsaWMgew0KICAgICAgIGlmICggZXZlbnRTdGF0dXMgIT0gRXZ0U3RhdHVzLlN0YXJ0ZWQgKSB0aHJvdzsNCiAgICAgICANCiAgICAgICBpZiAoIGJsb2NrLm51bWJlciA+IHJhY2Vfc3RhcnRfYmxvY2sgKyAxMjYgKXsgDQogICAgICAgICAgIA0KICAgICAgICAgICBldmVudFN0YXR1cyA9IEV2dFN0YXR1cy5GaW5pc2hlZDsNCiAgICAgICAgICAgDQogICAgICAgICAgIC8vIGZpbmQgd2lubmVyDQogICAgICAgICAgIHdpbm5lciA9IHJhY2Vyc1sxXTsNCiAgICAgICAgICAgZm9yICh1aW50MjU2IGlkeCA9IDI7IGlkeCA8PSByZWdpc3RlcmVkX3JhY2VyczsgaWR4Kyspew0KICAgICAgICAgICAgICAgaWYgKCBkaXN0YW5jZV9kcml2ZW5bcmFjZXJzW2lkeF1dID4gZGlzdGFuY2VfZHJpdmVuW3dpbm5lcl0gICkgLy8gbm90ZTogaW4gY2FzZSBvZiBlcXVhbCBkaXN0YW5jZSwgdGhlIHJhY2VyIHdobyBzaWduZWQgdXAgZWFybGllciB3aW5zDQogICAgICAgICAgICAgICAgICAgIHdpbm5lciA9IHJhY2Vyc1tpZHhdOw0KICAgICAgICAgICB9DQogICAgICAgICAgIHJldHVybjsNCiAgICAgICB9DQogICAgICAgZGlzdGFuY2VfZHJpdmVuW21zZy5zZW5kZXJdKys7IC8vIGRyaXZlIDEgdW5pdA0KICAgfQ0KICAgDQogICAvLyA0KSBDTEFJTSBXSU5OSU5HIE1PTkVZDQogICANCiAgIGZ1bmN0aW9uIGNsYWltX3ByaWNlX21vbmV5KCkgcHVibGljIHsNCiAgICAgICANCiAgICAgICBpZiAgKGV2ZW50U3RhdHVzID09IEV2dFN0YXR1cy5GaW5pc2hlZCl7DQogICAgICAgICAgICAgICAgdWludCB3aW5uaW5nX2Ftb3VudCA9IHRoaXMuYmFsYW5jZSAtIDUgZXRoZXI7ICAvLyBiYWxhbmNlIG1pbnVzIDUgZXRoZXIgZmVlDQogICAgICAgICAgICAgICAgaWYgKCF3aW5uZXIuc2VuZCh3aW5uaW5nX2Ftb3VudCkpIHRocm93OyAgICAgICAvLyBzZW5kIHRvIHdpbm5lcg0KICAgICAgICAgICAgICAgIGlmICghZGV2ZWxvcGVyX2FkZHJlc3Muc2VuZCg1IGV0aGVyKSkgdGhyb3c7ICAgLy8gc2VuZCA1IGV0aGVyIHRvIGRldmVsb3Blcg0KICAgICAgIH0NCiAgICAgICANCiAgIH0NCg0KICAgDQogICAvLyBjbGVhbnVwIG5vIGVhcmxpZXIgdGhhbiAzIGRheXMgYWZ0ZXIgcmFjZSAodG8gYWxsb3cgZm9yIGVub3VnaCB0aW1lIHRvIGNsYWltKSwgb3Igd2hpbGUgbm9vbmUgaGFzIHlldCByZWdpc3RlcmVkDQogICBmdW5jdGlvbiBjbGVhbnVwKCkgcHVibGljIHsNCiAgICAgICBpZiAobXNnLnNlbmRlciAhPSBjcmVhdG9yKSB0aHJvdzsNCiAgICAgICBpZiAoDQogICAgICAgICAgICAgcmVnaXN0ZXJlZF9yYWNlcnMgPT0gMCB8fCAgICAvLyBub29uZSBoYXMgeWV0IHJlZ2lzdGVyZWQNCiAgICAgICAgICAgICBldmVudFN0YXR1cyA9PSBFdnRTdGF0dXMuRmluaXNoZWQgJiYgYmxvY2subnVtYmVyID4gcmFjZV9zdGFydF9ibG9jayArIDE4NTE0IC8vIGZpbmlzaGVkLCBhbmQgMyBkYXlzIGhhdmUgcGFzc2VkDQogICAgICAgICAgKXsNCiAgICAgICAgICAgc2VsZmRlc3RydWN0KGNyZWF0b3IpOw0KICAgICAgIH0gDQogICAgICAgZWxzZSB0aHJvdzsNCiAgIH0NCiAgICANCn0='