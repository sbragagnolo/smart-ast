base 64 content
base64token20
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC40Ow0KDQovKioNCiAqIEB0aXRsZSBDb250cmFjdCBmb3Igb2JqZWN0IHRoYXQgaGF2ZSBhbiBvd25lcg0KICovDQpjb250cmFjdCBPd25lZCB7DQogICAgLyoqDQogICAgICogQ29udHJhY3Qgb3duZXIgYWRkcmVzcw0KICAgICAqLw0KICAgIGFkZHJlc3MgcHVibGljIG93bmVyOw0KDQogICAgLyoqDQogICAgICogQGRldiBEZWxlZ2F0ZSBjb250cmFjdCB0byBhbm90aGVyIHBlcnNvbg0KICAgICAqIEBwYXJhbSBfb3duZXIgTmV3IG93bmVyIGFkZHJlc3MgDQogICAgICovDQogICAgZnVuY3Rpb24gc2V0T3duZXIoYWRkcmVzcyBfb3duZXIpIG9ubHlPd25lcg0KICAgIHsgb3duZXIgPSBfb3duZXI7IH0NCg0KICAgIC8qKg0KICAgICAqIEBkZXYgT3duZXIgY2hlY2sgbW9kaWZpZXINCiAgICAgKi8NCiAgICBtb2RpZmllciBvbmx5T3duZXIgeyBpZiAobXNnLnNlbmRlciAhPSBvd25lcikgdGhyb3c7IF87IH0NCn0NCg0KLyoqDQogKiBAdGl0bGUgQ29tbW9uIHBhdHRlcm4gZm9yIGRlc3Ryb3lhYmxlIGNvbnRyYWN0cyANCiAqLw0KY29udHJhY3QgRGVzdHJveWFibGUgew0KICAgIGFkZHJlc3MgcHVibGljIGhhbW1lcjsNCg0KICAgIC8qKg0KICAgICAqIEBkZXYgSGFtbWVyIHNldHRlcg0KICAgICAqIEBwYXJhbSBfaGFtbWVyIE5ldyBoYW1tZXIgYWRkcmVzcw0KICAgICAqLw0KICAgIGZ1bmN0aW9uIHNldEhhbW1lcihhZGRyZXNzIF9oYW1tZXIpIG9ubHlIYW1tZXINCiAgICB7IGhhbW1lciA9IF9oYW1tZXI7IH0NCg0KICAgIC8qKg0KICAgICAqIEBkZXYgRGVzdHJveSBjb250cmFjdCBhbmQgc2NydWIgYSBkYXRhDQogICAgICogQG5vdGljZSBPbmx5IGhhbW1lciBjYW4gY2FsbCBpdCANCiAgICAgKi8NCiAgICBmdW5jdGlvbiBkZXN0cm95KCkgb25seUhhbW1lcg0KICAgIHsgc3VpY2lkZShtc2cuc2VuZGVyKTsgfQ0KDQogICAgLyoqDQogICAgICogQGRldiBIYW1tZXIgY2hlY2sgbW9kaWZpZXINCiAgICAgKi8NCiAgICBtb2RpZmllciBvbmx5SGFtbWVyIHsgaWYgKG1zZy5zZW5kZXIgIT0gaGFtbWVyKSB0aHJvdzsgXzsgfQ0KfQ0KDQovKioNCiAqIEB0aXRsZSBHZW5lcmljIG93bmVkIGRlc3Ryb3lhYmxlIGNvbnRyYWN0DQogKi8NCmNvbnRyYWN0IE9iamVjdCBpcyBPd25lZCwgRGVzdHJveWFibGUgew0KICAgIGZ1bmN0aW9uIE9iamVjdCgpIHsNCiAgICAgICAgb3duZXIgID0gbXNnLnNlbmRlcjsNCiAgICAgICAgaGFtbWVyID0gbXNnLnNlbmRlcjsNCiAgICB9DQp9DQoNCi8vIFN0YW5kYXJkIHRva2VuIGludGVyZmFjZSAoRVJDIDIwKQ0KLy8gaHR0cHM6Ly9naXRodWIuY29tL2V0aGVyZXVtL0VJUHMvaXNzdWVzLzIwDQpjb250cmFjdCBFUkMyMCANCnsNCi8vIEZ1bmN0aW9uczoNCiAgICAvLy8gQHJldHVybiB0b3RhbCBhbW91bnQgb2YgdG9rZW5zDQogICAgdWludDI1NiBwdWJsaWMgdG90YWxTdXBwbHk7DQoNCiAgICAvLy8gQHBhcmFtIF9vd25lciBUaGUgYWRkcmVzcyBmcm9tIHdoaWNoIHRoZSBiYWxhbmNlIHdpbGwgYmUgcmV0cmlldmVkDQogICAgLy8vIEByZXR1cm4gVGhlIGJhbGFuY2UNCiAgICBmdW5jdGlvbiBiYWxhbmNlT2YoYWRkcmVzcyBfb3duZXIpIGNvbnN0YW50IHJldHVybnMgKHVpbnQyNTYpOw0KDQogICAgLy8vIEBub3RpY2Ugc2VuZCBgX3ZhbHVlYCB0b2tlbiB0byBgX3RvYCBmcm9tIGBtc2cuc2VuZGVyYA0KICAgIC8vLyBAcGFyYW0gX3RvIFRoZSBhZGRyZXNzIG9mIHRoZSByZWNpcGllbnQNCiAgICAvLy8gQHBhcmFtIF92YWx1ZSBUaGUgYW1vdW50IG9mIHRva2VuIHRvIGJlIHRyYW5zZmVycmVkDQogICAgLy8vIEByZXR1cm4gV2hldGhlciB0aGUgdHJhbnNmZXIgd2FzIHN1Y2Nlc3NmdWwgb3Igbm90DQogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQyNTYgX3ZhbHVlKSByZXR1cm5zIChib29sKTsNCg0KICAgIC8vLyBAbm90aWNlIHNlbmQgYF92YWx1ZWAgdG9rZW4gdG8gYF90b2AgZnJvbSBgX2Zyb21gIG9uIHRoZSBjb25kaXRpb24gaXQgaXMgYXBwcm92ZWQgYnkgYF9mcm9tYA0KICAgIC8vLyBAcGFyYW0gX2Zyb20gVGhlIGFkZHJlc3Mgb2YgdGhlIHNlbmRlcg0KICAgIC8vLyBAcGFyYW0gX3RvIFRoZSBhZGRyZXNzIG9mIHRoZSByZWNpcGllbnQNCiAgICAvLy8gQHBhcmFtIF92YWx1ZSBUaGUgYW1vdW50IG9mIHRva2VuIHRvIGJlIHRyYW5zZmVycmVkDQogICAgLy8vIEByZXR1cm4gV2hldGhlciB0aGUgdHJhbnNmZXIgd2FzIHN1Y2Nlc3NmdWwgb3Igbm90DQogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCk7DQoNCiAgICAvLy8gQG5vdGljZSBgbXNnLnNlbmRlcmAgYXBwcm92ZXMgYF9hZGRyYCB0byBzcGVuZCBgX3ZhbHVlYCB0b2tlbnMNCiAgICAvLy8gQHBhcmFtIF9zcGVuZGVyIFRoZSBhZGRyZXNzIG9mIHRoZSBhY2NvdW50IGFibGUgdG8gdHJhbnNmZXIgdGhlIHRva2Vucw0KICAgIC8vLyBAcGFyYW0gX3ZhbHVlIFRoZSBhbW91bnQgb2Ygd2VpIHRvIGJlIGFwcHJvdmVkIGZvciB0cmFuc2Zlcg0KICAgIC8vLyBAcmV0dXJuIFdoZXRoZXIgdGhlIGFwcHJvdmFsIHdhcyBzdWNjZXNzZnVsIG9yIG5vdA0KICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludDI1NiBfdmFsdWUpIHJldHVybnMgKGJvb2wpOw0KDQogICAgLy8vIEBwYXJhbSBfb3duZXIgVGhlIGFkZHJlc3Mgb2YgdGhlIGFjY291bnQgb3duaW5nIHRva2Vucw0KICAgIC8vLyBAcGFyYW0gX3NwZW5kZXIgVGhlIGFkZHJlc3Mgb2YgdGhlIGFjY291bnQgYWJsZSB0byB0cmFuc2ZlciB0aGUgdG9rZW5zDQogICAgLy8vIEByZXR1cm4gQW1vdW50IG9mIHJlbWFpbmluZyB0b2tlbnMgYWxsb3dlZCB0byBzcGVudA0KICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1Nik7DQoNCi8vIEV2ZW50czoNCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgX2Zyb20sIGFkZHJlc3MgaW5kZXhlZCBfdG8sIHVpbnQyNTYgX3ZhbHVlKTsNCiAgICBldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgX293bmVyLCBhZGRyZXNzIGluZGV4ZWQgX3NwZW5kZXIsIHVpbnQyNTYgX3ZhbHVlKTsNCn0NCg0KLyoqDQogKiBAdGl0bGUgVG9rZW4gY29udHJhY3QgcmVwcmVzZW50cyBhbnkgYXNzZXQgaW4gZGlnaXRhbCBlY29ub215DQogKi8NCmNvbnRyYWN0IFRva2VuIGlzIE9iamVjdCwgRVJDMjAgew0KICAgIC8qIFNob3J0IGRlc2NyaXB0aW9uIG9mIHRva2VuICovDQogICAgc3RyaW5nIHB1YmxpYyBuYW1lOw0KICAgIHN0cmluZyBwdWJsaWMgc3ltYm9sOw0KDQogICAgLyogVG90YWwgY291bnQgb2YgdG9rZW5zIGV4aXN0ICovDQogICAgdWludCBwdWJsaWMgdG90YWxTdXBwbHk7DQoNCiAgICAvKiBGaXhlZCBwb2ludCBwb3NpdGlvbiAqLw0KICAgIHVpbnQ4IHB1YmxpYyBkZWNpbWFsczsNCiAgICANCiAgICAvKiBUb2tlbiBhcHByb3ZlbWVudCBzeXN0ZW0gKi8NCiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gdWludCkgYmFsYW5jZXM7DQogICAgbWFwcGluZyhhZGRyZXNzID0+IG1hcHBpbmcoYWRkcmVzcyA9PiB1aW50KSkgYWxsb3dhbmNlczsNCiANCiAgICAvKioNCiAgICAgKiBAZGV2IEdldCBiYWxhbmNlIG9mIHBsYWluIGFkZHJlc3MNCiAgICAgKiBAcGFyYW0gX293bmVyIGlzIGEgdGFyZ2V0IGFkZHJlc3MNCiAgICAgKiBAcmV0dXJuIGFtb3VudCBvZiB0b2tlbnMgb24gYmFsYW5jZQ0KICAgICAqLw0KICAgIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikNCiAgICB7IHJldHVybiBiYWxhbmNlc1tfb3duZXJdOyB9DQogDQogICAgLyoqDQogICAgICogQGRldiBUYWtlIGFsbG93ZWQgdG9rZW5zDQogICAgICogQHBhcmFtIF9vd25lciBUaGUgYWRkcmVzcyBvZiB0aGUgYWNjb3VudCBvd25pbmcgdG9rZW5zDQogICAgICogQHBhcmFtIF9zcGVuZGVyIFRoZSBhZGRyZXNzIG9mIHRoZSBhY2NvdW50IGFibGUgdG8gdHJhbnNmZXIgdGhlIHRva2Vucw0KICAgICAqIEByZXR1cm4gQW1vdW50IG9mIHJlbWFpbmluZyB0b2tlbnMgYWxsb3dlZCB0byBzcGVudA0KICAgICAqLw0KICAgIGZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludDI1NikNCiAgICB7IHJldHVybiBhbGxvd2FuY2VzW19vd25lcl1bX3NwZW5kZXJdOyB9DQoNCiAgICAvKiBUb2tlbiBjb25zdHJ1Y3RvciAqLw0KICAgIGZ1bmN0aW9uIFRva2VuKHN0cmluZyBfbmFtZSwgc3RyaW5nIF9zeW1ib2wsIHVpbnQ4IF9kZWNpbWFscywgdWludCBfY291bnQpIHsNCiAgICAgICAgbmFtZSAgICAgICAgPSBfbmFtZTsNCiAgICAgICAgc3ltYm9sICAgICAgPSBfc3ltYm9sOw0KICAgICAgICBkZWNpbWFscyAgICA9IF9kZWNpbWFsczsNCiAgICAgICAgdG90YWxTdXBwbHkgPSBfY291bnQ7DQogICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gX2NvdW50Ow0KICAgIH0NCiANCiAgICAvKioNCiAgICAgKiBAZGV2IFRyYW5zZmVyIHNlbGYgdG9rZW5zIHRvIGdpdmVuIGFkZHJlc3MNCiAgICAgKiBAcGFyYW0gX3RvIGRlc3RpbmF0aW9uIGFkZHJlc3MNCiAgICAgKiBAcGFyYW0gX3ZhbHVlIGFtb3VudCBvZiB0b2tlbiB2YWx1ZXMgdG8gc2VuZA0KICAgICAqIEBub3RpY2UgYF92YWx1ZWAgdG9rZW5zIHdpbGwgYmUgc2VuZGVkIHRvIGBfdG9gDQogICAgICogQHJldHVybiBgdHJ1ZWAgd2hlbiB0cmFuc2ZlciBkb25lDQogICAgICovDQogICAgZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQgX3ZhbHVlKSByZXR1cm5zIChib29sKSB7DQogICAgICAgIGlmIChiYWxhbmNlc1ttc2cuc2VuZGVyXSA+PSBfdmFsdWUpIHsNCiAgICAgICAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdIC09IF92YWx1ZTsNCiAgICAgICAgICAgIGJhbGFuY2VzW190b10gICAgICAgICs9IF92YWx1ZTsNCiAgICAgICAgICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlKTsNCiAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICB9DQogICAgICAgIHJldHVybiBmYWxzZTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAZGV2IFRyYW5zZmVyIHdpdGggYXBwcm92ZW1lbnQgbWVjaGFpbnNtDQogICAgICogQHBhcmFtIF9mcm9tIHNvdXJjZSBhZGRyZXNzLCBgX3ZhbHVlYCB0b2tlbnMgc2hvbGQgYmUgYXBwcm92ZWQgZm9yIGBzZW5kZXJgDQogICAgICogQHBhcmFtIF90byBkZXN0aW5hdGlvbiBhZGRyZXNzDQogICAgICogQHBhcmFtIF92YWx1ZSBhbW91bnQgb2YgdG9rZW4gdmFsdWVzIHRvIHNlbmQgDQogICAgICogQG5vdGljZSBmcm9tIGBfZnJvbWAgd2lsbCBiZSBzZW5kZWQgYF92YWx1ZWAgdG9rZW5zIHRvIGBfdG9gDQogICAgICogQHJldHVybiBgdHJ1ZWAgd2hlbiB0cmFuc2ZlciBpcyBkb25lDQogICAgICovDQogICAgZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCkgew0KICAgICAgICB2YXIgYXZhaWwgPSBhbGxvd2FuY2VzW19mcm9tXVttc2cuc2VuZGVyXQ0KICAgICAgICAgICAgICAgICAgPiBiYWxhbmNlc1tfZnJvbV0gPyBiYWxhbmNlc1tfZnJvbV0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogYWxsb3dhbmNlc1tfZnJvbV1bbXNnLnNlbmRlcl07DQogICAgICAgIGlmIChhdmFpbCA+PSBfdmFsdWUpIHsNCiAgICAgICAgICAgIGFsbG93YW5jZXNbX2Zyb21dW21zZy5zZW5kZXJdIC09IF92YWx1ZTsNCiAgICAgICAgICAgIGJhbGFuY2VzW19mcm9tXSAtPSBfdmFsdWU7DQogICAgICAgICAgICBiYWxhbmNlc1tfdG9dICAgKz0gX3ZhbHVlOw0KICAgICAgICAgICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsNCiAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICB9DQogICAgICAgIHJldHVybiBmYWxzZTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAZGV2IEdpdmUgdG8gdGFyZ2V0IGFkZHJlc3MgYWJpbGl0eSBmb3Igc2VsZiB0b2tlbiBtYW5pcHVsYXRpb24gd2l0aG91dCBzZW5kaW5nDQogICAgICogQHBhcmFtIF9zcGVuZGVyIHRhcmdldCBhZGRyZXNzIChmdXR1cmUgcmVxdWVzdGVyKQ0KICAgICAqIEBwYXJhbSBfdmFsdWUgYW1vdW50IG9mIHRva2VuIHZhbHVlcyBmb3IgYXBwcm92aW5nDQogICAgICovDQogICAgZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIF9zcGVuZGVyLCB1aW50MjU2IF92YWx1ZSkgcmV0dXJucyAoYm9vbCkgew0KICAgICAgICBhbGxvd2FuY2VzW21zZy5zZW5kZXJdW19zcGVuZGVyXSArPSBfdmFsdWU7DQogICAgICAgIEFwcHJvdmFsKG1zZy5zZW5kZXIsIF9zcGVuZGVyLCBfdmFsdWUpOw0KICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAZGV2IFJlc2V0IGNvdW50IG9mIHRva2VucyBhcHByb3ZlZCBmb3IgZ2l2ZW4gYWRkcmVzcw0KICAgICAqIEBwYXJhbSBfc3BlbmRlciB0YXJnZXQgYWRkcmVzcyAoZnV0dXJlIHJlcXVlc3RlcikNCiAgICAgKi8NCiAgICBmdW5jdGlvbiB1bmFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlcikNCiAgICB7IGFsbG93YW5jZXNbbXNnLnNlbmRlcl1bX3NwZW5kZXJdID0gMDsgfQ0KfQ=='