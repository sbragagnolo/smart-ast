base 64 content
base64token5
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC4xMTsNCiANCmNvbnRyYWN0IENvbnRyYWN0UmVjZWl2ZXIgew0KICAgICANCiAgICBzdHJ1Y3QgVEtOIHsNCiAgICAgICAgYWRkcmVzcyBzZW5kZXI7DQogICAgICAgIHVpbnQgdmFsdWU7DQogICAgICAgIGJ5dGVzIGRhdGE7DQogICAgICAgIGJ5dGVzNCBzaWc7DQogICAgfQ0KICAgDQogICANCiAgICBmdW5jdGlvbiB0b2tlbkZhbGxiYWNrKGFkZHJlc3MgX2Zyb20sIHVpbnQgX3ZhbHVlLCBieXRlcyBfZGF0YSl7DQogICAgICBUS04gbWVtb3J5IHRrbjsNCiAgICAgIHRrbi5zZW5kZXIgPSBfZnJvbTsNCiAgICAgIHRrbi52YWx1ZSA9IF92YWx1ZTsNCiAgICAgIHRrbi5kYXRhID0gX2RhdGE7DQogICAgICB1aW50MzIgdSA9IHVpbnQzMihfZGF0YVszXSkgKyAodWludDMyKF9kYXRhWzJdKSA8PCA4KSArICh1aW50MzIoX2RhdGFbMV0pIDw8IDE2KSArICh1aW50MzIoX2RhdGFbMF0pIDw8IDI0KTsNCiAgICAgIHRrbi5zaWcgPSBieXRlczQodSk7DQogDQogICAgfQ0KfQ0KIA0KY29udHJhY3QgU2FmZU1hdGggew0KICAgIHVpbnQyNTYgY29uc3RhbnQgcHVibGljIE1BWF9VSU5UMjU2ID0NCiAgICAweEZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkY7DQogDQogICAgZnVuY3Rpb24gc2FmZUFkZCh1aW50MjU2IHgsIHVpbnQyNTYgeSkgY29uc3RhbnQgaW50ZXJuYWwgcmV0dXJucyAodWludDI1NiB6KSB7DQogICAgICAgIGlmICh4ID4gTUFYX1VJTlQyNTYgLSB5KSB0aHJvdzsNCiAgICAgICAgcmV0dXJuIHggKyB5Ow0KICAgIH0NCiANCiAgICBmdW5jdGlvbiBzYWZlU3ViKHVpbnQyNTYgeCwgdWludDI1NiB5KSBjb25zdGFudCBpbnRlcm5hbCByZXR1cm5zICh1aW50MjU2IHopIHsNCiAgICAgICAgaWYgKHggPCB5KSB0aHJvdzsNCiAgICAgICAgcmV0dXJuIHggLSB5Ow0KICAgIH0NCiANCiAgICBmdW5jdGlvbiBzYWZlTXVsKHVpbnQyNTYgeCwgdWludDI1NiB5KSBjb25zdGFudCBpbnRlcm5hbCByZXR1cm5zICh1aW50MjU2IHopIHsNCiAgICAgICAgaWYgKHkgPT0gMCkgcmV0dXJuIDA7DQogICAgICAgIGlmICh4ID4gTUFYX1VJTlQyNTYgLyB5KSB0aHJvdzsNCiAgICAgICAgcmV0dXJuIHggKiB5Ow0KICAgIH0NCn0NCiANCmNvbnRyYWN0IFRva2VuIGlzIFNhZmVNYXRoew0KIA0KICBtYXBwaW5nKGFkZHJlc3MgPT4gdWludCkgYmFsYW5jZXM7DQogDQogIHN0cmluZyBwdWJsaWMgc3ltYm9sID0gIiI7DQogIHN0cmluZyBwdWJsaWMgbmFtZSA9ICIiOw0KICB1aW50OCBwdWJsaWMgZGVjaW1hbHMgPSAxODsNCiAgdWludDI1NiBwdWJsaWMgdG90YWxTdXBwbHkgPSAwOw0KICBhZGRyZXNzIG93bmVyID0gMDsNCiAgYm9vbCBzZXR1cERvbmUgPSBmYWxzZTsNCiANCiAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIGZyb20sIGFkZHJlc3MgaW5kZXhlZCB0bywgdWludCB2YWx1ZSwgYnl0ZXMgaW5kZXhlZCBkYXRhKTsNCiANCiAgZnVuY3Rpb24gVG9rZW4oYWRkcmVzcyBhZHIpIHsNCiAgICAgICAgb3duZXIgPSBhZHI7ICAgICAgICANCiAgICB9DQogICANCiAgICBmdW5jdGlvbiBTZXR1cFRva2VuKHN0cmluZyBfdG9rZW5OYW1lLCBzdHJpbmcgX3Rva2VuU3ltYm9sLCB1aW50MjU2IF90b2tlblN1cHBseSkNCiAgICB7DQogICAgICAgIGlmIChtc2cuc2VuZGVyID09IG93bmVyICYmIHNldHVwRG9uZSA9PSBmYWxzZSkNCiAgICAgICAgew0KICAgICAgICAgICAgc3ltYm9sID0gX3Rva2VuU3ltYm9sOw0KICAgICAgICAgICAgbmFtZSA9IF90b2tlbk5hbWU7DQogICAgICAgICAgICB0b3RhbFN1cHBseSA9IF90b2tlblN1cHBseSAqIDEwMDAwMDAwMDAwMDAwMDAwMDA7DQogICAgICAgICAgICBiYWxhbmNlc1tvd25lcl0gPSB0b3RhbFN1cHBseTsNCiAgICAgICAgICAgIHNldHVwRG9uZSA9IHRydWU7DQogICAgICAgIH0NCiAgICB9DQogDQogIGZ1bmN0aW9uIG5hbWUoKSBjb25zdGFudCByZXR1cm5zIChzdHJpbmcgX25hbWUpIHsNCiAgICAgIHJldHVybiBuYW1lOw0KICB9DQogDQogIGZ1bmN0aW9uIHN5bWJvbCgpIGNvbnN0YW50IHJldHVybnMgKHN0cmluZyBfc3ltYm9sKSB7DQogICAgICByZXR1cm4gc3ltYm9sOw0KICB9DQogDQogIGZ1bmN0aW9uIGRlY2ltYWxzKCkgY29uc3RhbnQgcmV0dXJucyAodWludDggX2RlY2ltYWxzKSB7DQogICAgICByZXR1cm4gZGVjaW1hbHM7DQogIH0NCiANCiAgZnVuY3Rpb24gdG90YWxTdXBwbHkoKSBjb25zdGFudCByZXR1cm5zICh1aW50MjU2IF90b3RhbFN1cHBseSkgew0KICAgICAgcmV0dXJuIHRvdGFsU3VwcGx5Ow0KICB9DQogDQogIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50IF92YWx1ZSwgYnl0ZXMgX2RhdGEpIHJldHVybnMgKGJvb2wgc3VjY2Vzcykgew0KICAgICANCiAgICBpZihpc0NvbnRyYWN0KF90bykpIHsNCiAgICAgICAgcmV0dXJuIHRyYW5zZmVyVG9Db250cmFjdChfdG8sIF92YWx1ZSwgX2RhdGEpOw0KICAgIH0NCiAgICBlbHNlIHsNCiAgICAgICAgcmV0dXJuIHRyYW5zZmVyVG9BZGRyZXNzKF90bywgX3ZhbHVlLCBfZGF0YSk7DQogICAgfQ0KfQ0KIA0KICBmdW5jdGlvbiB0cmFuc2ZlcihhZGRyZXNzIF90bywgdWludCBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcykgew0KICAgICANCiAgICBieXRlcyBtZW1vcnkgZW1wdHk7DQogICAgaWYoaXNDb250cmFjdChfdG8pKSB7DQogICAgICAgIHJldHVybiB0cmFuc2ZlclRvQ29udHJhY3QoX3RvLCBfdmFsdWUsIGVtcHR5KTsNCiAgICB9DQogICAgZWxzZSB7DQogICAgICAgIHJldHVybiB0cmFuc2ZlclRvQWRkcmVzcyhfdG8sIF92YWx1ZSwgZW1wdHkpOw0KICAgIH0NCn0NCiANCiAgZnVuY3Rpb24gaXNDb250cmFjdChhZGRyZXNzIF9hZGRyKSBwcml2YXRlIHJldHVybnMgKGJvb2wgaXNfY29udHJhY3QpIHsNCiAgICAgIHVpbnQgbGVuZ3RoOw0KICAgICANCiAgICAgIGlmIChiYWxhbmNlT2YoX2FkZHIpID49MCApDQogICAgIA0KICAgICAgYXNzZW1ibHkgew0KICAgICAgICAgICAgbGVuZ3RoIDo9IGV4dGNvZGVzaXplKF9hZGRyKQ0KICAgICAgICB9DQogICAgICAgIGlmKGxlbmd0aD4wKSB7DQogICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgfQ0KICAgICAgICBlbHNlIHsNCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgfQ0KICAgIH0NCiANCiAgZnVuY3Rpb24gdHJhbnNmZXJUb0FkZHJlc3MoYWRkcmVzcyBfdG8sIHVpbnQgX3ZhbHVlLCBieXRlcyBfZGF0YSkgcHJpdmF0ZSByZXR1cm5zIChib29sIHN1Y2Nlc3MpIHsNCiAgICBpZiAoYmFsYW5jZU9mKG1zZy5zZW5kZXIpIDwgX3ZhbHVlKSB0aHJvdzsNCiAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSA9IHNhZmVTdWIoYmFsYW5jZU9mKG1zZy5zZW5kZXIpLCBfdmFsdWUpOw0KICAgIGJhbGFuY2VzW190b10gPSBzYWZlQWRkKGJhbGFuY2VPZihfdG8pLCBfdmFsdWUpOw0KICAgIFRyYW5zZmVyKG1zZy5zZW5kZXIsIF90bywgX3ZhbHVlLCBfZGF0YSk7DQogICAgcmV0dXJuIHRydWU7DQogIH0NCiANCiAgZnVuY3Rpb24gdHJhbnNmZXJUb0NvbnRyYWN0KGFkZHJlc3MgX3RvLCB1aW50IF92YWx1ZSwgYnl0ZXMgX2RhdGEpIHByaXZhdGUgcmV0dXJucyAoYm9vbCBzdWNjZXNzKSB7DQogICAgaWYgKGJhbGFuY2VPZihtc2cuc2VuZGVyKSA8IF92YWx1ZSkgdGhyb3c7DQogICAgYmFsYW5jZXNbbXNnLnNlbmRlcl0gPSBzYWZlU3ViKGJhbGFuY2VPZihtc2cuc2VuZGVyKSwgX3ZhbHVlKTsNCiAgICBiYWxhbmNlc1tfdG9dID0gc2FmZUFkZChiYWxhbmNlT2YoX3RvKSwgX3ZhbHVlKTsNCiAgICBDb250cmFjdFJlY2VpdmVyIHJlY2lldmVyID0gQ29udHJhY3RSZWNlaXZlcihfdG8pOw0KICAgIHJlY2lldmVyLnRva2VuRmFsbGJhY2sobXNnLnNlbmRlciwgX3ZhbHVlLCBfZGF0YSk7DQogICAgVHJhbnNmZXIobXNnLnNlbmRlciwgX3RvLCBfdmFsdWUsIF9kYXRhKTsNCiAgICByZXR1cm4gdHJ1ZTsNCn0NCiANCiAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50IGJhbGFuY2UpIHsNCiAgICByZXR1cm4gYmFsYW5jZXNbX293bmVyXTsNCiAgfQ0KfQ=='