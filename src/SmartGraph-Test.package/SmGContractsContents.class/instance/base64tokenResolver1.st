base 64 content
base64tokenResolver1
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC4wOw0KDQpjb250cmFjdCBBYnN0cmFjdEVOUyB7DQogICAgZnVuY3Rpb24gb3duZXIoYnl0ZXMzMiBub2RlKSBjb25zdGFudCByZXR1cm5zKGFkZHJlc3MpOw0KICAgIGZ1bmN0aW9uIHJlc29sdmVyKGJ5dGVzMzIgbm9kZSkgY29uc3RhbnQgcmV0dXJucyhhZGRyZXNzKTsNCiAgICBmdW5jdGlvbiB0dGwoYnl0ZXMzMiBub2RlKSBjb25zdGFudCByZXR1cm5zKHVpbnQ2NCk7DQogICAgZnVuY3Rpb24gc2V0T3duZXIoYnl0ZXMzMiBub2RlLCBhZGRyZXNzIG93bmVyKTsNCiAgICBmdW5jdGlvbiBzZXRTdWJub2RlT3duZXIoYnl0ZXMzMiBub2RlLCBieXRlczMyIGxhYmVsLCBhZGRyZXNzIG93bmVyKTsNCiAgICBmdW5jdGlvbiBzZXRSZXNvbHZlcihieXRlczMyIG5vZGUsIGFkZHJlc3MgcmVzb2x2ZXIpOw0KICAgIGZ1bmN0aW9uIHNldFRUTChieXRlczMyIG5vZGUsIHVpbnQ2NCB0dGwpOw0KfQ0KDQovKioNCiAqIEEgc2ltcGxlIHJlc29sdmVyIGludGVuZGVkIGZvciB1c2Ugd2l0aCB0b2tlbiBjb250cmFjdHMuIE9ubHkgYWxsb3dzIHRoZQ0KICogb3duZXIgb2YgYSBub2RlIHRvIHNldCBpdHMgYWRkcmVzcywgYW5kIHJldHVybnMgdGhlIEVSQzIwIEpTT04gQUJJIGZvciBhbGwNCiAqIEFCSSBxdWVyaWVzLg0KICogDQogKiBBbHNvIGFjdHMgYXMgdGhlIHJlZ2lzdHJhciBmb3IgJ3RoZXRva2VuLmV0aCcgdG8gc2ltcGxpZnkgc2V0dGluZyB1cCBuZXcgdG9rZW5zLg0KICovDQpjb250cmFjdCBUb2tlblJlc29sdmVyIHsNCiAgICBieXRlczQgY29uc3RhbnQgSU5URVJGQUNFX01FVEFfSUQgPSAweDAxZmZjOWE3Ow0KICAgIGJ5dGVzNCBjb25zdGFudCBBRERSX0lOVEVSRkFDRV9JRCA9IDB4M2IzYjU3ZGU7DQogICAgYnl0ZXM0IGNvbnN0YW50IEFCSV9JTlRFUkZBQ0VfSUQgPSAweDIyMDNhYjU2Ow0KICAgIGJ5dGVzMzIgY29uc3RhbnQgUk9PVF9OT0RFID0gMHg2MzdmMTJlN2NkNmJlZDY1ZWVjZWVlMzRkMzU4NjgyNzk3NzhmYzU2YzNlNWU5NTFmNDZiODAxZmI3OGEyZDI2Ow0KICAgIGJ5dGVzIFRPS0VOX0pTT05fQUJJID0gJ1t7ImNvbnN0YW50Ijp0cnVlLCJpbnB1dHMiOltdLCJuYW1lIjoibmFtZSIsIm91dHB1dHMiOlt7Im5hbWUiOiJuYW1lIiwidHlwZSI6InN0cmluZyJ9XSwicGF5YWJsZSI6ZmFsc2UsInR5cGUiOiJmdW5jdGlvbiJ9LHsiY29uc3RhbnQiOmZhbHNlLCJpbnB1dHMiOlt7Im5hbWUiOiJfc3BlbmRlciIsInR5cGUiOiJhZGRyZXNzIn0seyJuYW1lIjoiX3ZhbHVlIiwidHlwZSI6InVpbnQyNTYifV0sIm5hbWUiOiJhcHByb3ZlIiwib3V0cHV0cyI6W3sibmFtZSI6InN1Y2Nlc3MiLCJ0eXBlIjoiYm9vbCJ9XSwicGF5YWJsZSI6ZmFsc2UsInR5cGUiOiJmdW5jdGlvbiJ9LHsiY29uc3RhbnQiOnRydWUsImlucHV0cyI6W10sIm5hbWUiOiJ0b3RhbFN1cHBseSIsIm91dHB1dHMiOlt7Im5hbWUiOiJ0b3RhbFN1cHBseSIsInR5cGUiOiJ1aW50MjU2In1dLCJwYXlhYmxlIjpmYWxzZSwidHlwZSI6ImZ1bmN0aW9uIn0seyJjb25zdGFudCI6ZmFsc2UsImlucHV0cyI6W3sibmFtZSI6Il9mcm9tIiwidHlwZSI6ImFkZHJlc3MifSx7Im5hbWUiOiJfdG8iLCJ0eXBlIjoiYWRkcmVzcyJ9LHsibmFtZSI6Il92YWx1ZSIsInR5cGUiOiJ1aW50MjU2In1dLCJuYW1lIjoidHJhbnNmZXJGcm9tIiwib3V0cHV0cyI6W3sibmFtZSI6InN1Y2Nlc3MiLCJ0eXBlIjoiYm9vbCJ9XSwicGF5YWJsZSI6ZmFsc2UsInR5cGUiOiJmdW5jdGlvbiJ9LHsiY29uc3RhbnQiOnRydWUsImlucHV0cyI6W10sIm5hbWUiOiJkZWNpbWFscyIsIm91dHB1dHMiOlt7Im5hbWUiOiJkZWNpbWFscyIsInR5cGUiOiJ1aW50OCJ9XSwicGF5YWJsZSI6ZmFsc2UsInR5cGUiOiJmdW5jdGlvbiJ9LHsiY29uc3RhbnQiOnRydWUsImlucHV0cyI6W3sibmFtZSI6Il9vd25lciIsInR5cGUiOiJhZGRyZXNzIn1dLCJuYW1lIjoiYmFsYW5jZU9mIiwib3V0cHV0cyI6W3sibmFtZSI6ImJhbGFuY2UiLCJ0eXBlIjoidWludDI1NiJ9XSwicGF5YWJsZSI6ZmFsc2UsInR5cGUiOiJmdW5jdGlvbiJ9LHsiY29uc3RhbnQiOnRydWUsImlucHV0cyI6W10sIm5hbWUiOiJzeW1ib2wiLCJvdXRwdXRzIjpbeyJuYW1lIjoic3ltYm9sIiwidHlwZSI6InN0cmluZyJ9XSwicGF5YWJsZSI6ZmFsc2UsInR5cGUiOiJmdW5jdGlvbiJ9LHsiY29uc3RhbnQiOmZhbHNlLCJpbnB1dHMiOlt7Im5hbWUiOiJfdG8iLCJ0eXBlIjoiYWRkcmVzcyJ9LHsibmFtZSI6Il92YWx1ZSIsInR5cGUiOiJ1aW50MjU2In1dLCJuYW1lIjoidHJhbnNmZXIiLCJvdXRwdXRzIjpbeyJuYW1lIjoic3VjY2VzcyIsInR5cGUiOiJib29sIn1dLCJwYXlhYmxlIjpmYWxzZSwidHlwZSI6ImZ1bmN0aW9uIn0seyJjb25zdGFudCI6dHJ1ZSwiaW5wdXRzIjpbeyJuYW1lIjoiX293bmVyIiwidHlwZSI6ImFkZHJlc3MifSx7Im5hbWUiOiJfc3BlbmRlciIsInR5cGUiOiJhZGRyZXNzIn1dLCJuYW1lIjoiYWxsb3dhbmNlIiwib3V0cHV0cyI6W3sibmFtZSI6InJlbWFpbmluZyIsInR5cGUiOiJ1aW50MjU2In1dLCJwYXlhYmxlIjpmYWxzZSwidHlwZSI6ImZ1bmN0aW9uIn1dJzsNCiAgICANCiAgICBldmVudCBBZGRyQ2hhbmdlZChieXRlczMyIGluZGV4ZWQgbm9kZSwgYWRkcmVzcyBhKTsNCg0KICAgIEFic3RyYWN0RU5TIGVucyA9IEFic3RyYWN0RU5TKDB4MzE0MTU5MjY1ZEQ4ZGJiMzEwNjQyZjk4ZjUwQzA2NjE3M0MxMjU5Yik7DQogICAgbWFwcGluZyhieXRlczMyPT5hZGRyZXNzKSBhZGRyZXNzZXM7DQogICAgYWRkcmVzcyBvd25lcjsNCg0KICAgIG1vZGlmaWVyIG9ubHlfbm9kZV9vd25lcihieXRlczMyIG5vZGUpIHsNCiAgICAgICAgcmVxdWlyZShlbnMub3duZXIobm9kZSkgPT0gbXNnLnNlbmRlciB8fCBvd25lciA9PSBtc2cuc2VuZGVyKTsNCiAgICAgICAgXzsNCiAgICB9DQogICAgDQogICAgbW9kaWZpZXIgb25seV9vd25lcigpIHsNCiAgICAgICAgcmVxdWlyZShvd25lciA9PSBtc2cuc2VuZGVyKTsNCiAgICAgICAgXzsNCiAgICB9DQogICAgDQogICAgZnVuY3Rpb24gc2V0T3duZXIoYWRkcmVzcyBuZXdPd25lcikgb25seV9vd25lciB7DQogICAgICAgIG93bmVyID0gbmV3T3duZXI7DQogICAgfQ0KDQogICAgZnVuY3Rpb24gbmV3VG9rZW4oc3RyaW5nIG5hbWUsIGFkZHJlc3MgYWRkcikgb25seV9vd25lciB7DQogICAgICAgIHZhciBsYWJlbCA9IHNoYTMobmFtZSk7DQogICAgICAgIHZhciBub2RlID0gc2hhMyhST09UX05PREUsIG5hbWUpOw0KICAgICAgICANCiAgICAgICAgZW5zLnNldFN1Ym5vZGVPd25lcihST09UX05PREUsIGxhYmVsLCB0aGlzKTsNCiAgICAgICAgZW5zLnNldFJlc29sdmVyKG5vZGUsIHRoaXMpOw0KICAgICAgICBhZGRyZXNzZXNbbm9kZV0gPSBhZGRyOw0KICAgICAgICBBZGRyQ2hhbmdlZChub2RlLCBhZGRyKTsNCiAgICB9DQogICAgDQogICAgZnVuY3Rpb24gc2V0U3Vibm9kZU93bmVyKGJ5dGVzMjIgbGFiZWwsIGFkZHJlc3MgbmV3T3duZXIpIG9ubHlfb3duZXIgew0KICAgICAgICBlbnMuc2V0U3Vibm9kZU93bmVyKFJPT1RfTk9ERSwgbGFiZWwsIG5ld093bmVyKTsNCiAgICB9DQoNCiAgICBmdW5jdGlvbiBUb2tlblJlc29sdmVyKCkgew0KICAgICAgICBvd25lciA9IG1zZy5zZW5kZXI7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogUmV0dXJucyB0cnVlIGlmIHRoZSByZXNvbHZlciBpbXBsZW1lbnRzIHRoZSBpbnRlcmZhY2Ugc3BlY2lmaWVkIGJ5IHRoZSBwcm92aWRlZCBoYXNoLg0KICAgICAqIEBwYXJhbSBpbnRlcmZhY2VJRCBUaGUgSUQgb2YgdGhlIGludGVyZmFjZSB0byBjaGVjayBmb3IuDQogICAgICogQHJldHVybiBUcnVlIGlmIHRoZSBjb250cmFjdCBpbXBsZW1lbnRzIHRoZSByZXF1ZXN0ZWQgaW50ZXJmYWNlLg0KICAgICAqLw0KICAgIGZ1bmN0aW9uIHN1cHBvcnRzSW50ZXJmYWNlKGJ5dGVzNCBpbnRlcmZhY2VJRCkgY29uc3RhbnQgcmV0dXJucyAoYm9vbCkgew0KICAgICAgICByZXR1cm4gaW50ZXJmYWNlSUQgPT0gQUREUl9JTlRFUkZBQ0VfSUQgfHwNCiAgICAgICAgICAgICAgIGludGVyZmFjZUlEID09IEFCSV9JTlRFUkZBQ0VfSUQgfHwNCiAgICAgICAgICAgICAgIGludGVyZmFjZUlEID09IElOVEVSRkFDRV9NRVRBX0lEOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIFJldHVybnMgdGhlIGFkZHJlc3MgYXNzb2NpYXRlZCB3aXRoIGFuIEVOUyBub2RlLg0KICAgICAqIEBwYXJhbSBub2RlIFRoZSBFTlMgbm9kZSB0byBxdWVyeS4NCiAgICAgKiBAcmV0dXJuIFRoZSBhc3NvY2lhdGVkIGFkZHJlc3MuDQogICAgICovDQogICAgZnVuY3Rpb24gYWRkcihieXRlczMyIG5vZGUpIGNvbnN0YW50IHJldHVybnMgKGFkZHJlc3MgcmV0KSB7DQogICAgICAgIHJldCA9IGFkZHJlc3Nlc1tub2RlXTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBTZXRzIHRoZSBhZGRyZXNzIGFzc29jaWF0ZWQgd2l0aCBhbiBFTlMgbm9kZS4NCiAgICAgKiBNYXkgb25seSBiZSBjYWxsZWQgYnkgdGhlIG93bmVyIG9mIHRoYXQgbm9kZSBpbiB0aGUgRU5TIHJlZ2lzdHJ5Lg0KICAgICAqIEBwYXJhbSBub2RlIFRoZSBub2RlIHRvIHVwZGF0ZS4NCiAgICAgKiBAcGFyYW0gYWRkciBUaGUgYWRkcmVzcyB0byBzZXQuDQogICAgICovDQogICAgZnVuY3Rpb24gc2V0QWRkcihieXRlczMyIG5vZGUsIGFkZHJlc3MgYWRkcikgb25seV9ub2RlX293bmVyKG5vZGUpIHsNCiAgICAgICAgYWRkcmVzc2VzW25vZGVdID0gYWRkcjsNCiAgICAgICAgQWRkckNoYW5nZWQobm9kZSwgYWRkcik7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogUmV0dXJucyB0aGUgQUJJIGFzc29jaWF0ZWQgd2l0aCBhbiBFTlMgbm9kZS4NCiAgICAgKiBEZWZpbmVkIGluIEVJUDIwNS4NCiAgICAgKiBAcGFyYW0gbm9kZSBUaGUgRU5TIG5vZGUgdG8gcXVlcnkNCiAgICAgKiBAcGFyYW0gY29udGVudFR5cGVzIEEgYml0d2lzZSBPUiBvZiB0aGUgQUJJIGZvcm1hdHMgYWNjZXB0ZWQgYnkgdGhlIGNhbGxlci4NCiAgICAgKiBAcmV0dXJuIGNvbnRlbnRUeXBlIFRoZSBjb250ZW50IHR5cGUgb2YgdGhlIHJldHVybiB2YWx1ZQ0KICAgICAqIEByZXR1cm4gZGF0YSBUaGUgQUJJIGRhdGENCiAgICAgKi8NCiAgICBmdW5jdGlvbiBBQkkoYnl0ZXMzMiBub2RlLCB1aW50MjU2IGNvbnRlbnRUeXBlcykgY29uc3RhbnQgcmV0dXJucyAodWludDI1NiBjb250ZW50VHlwZSwgYnl0ZXMgZGF0YSkgew0KICAgICAgICBub2RlOw0KICAgICAgICBpZihjb250ZW50VHlwZXMgJiAxID09IDEpIHsNCiAgICAgICAgICAgIC8vIEpTT04gQUJJDQogICAgICAgICAgICBjb250ZW50VHlwZSA9IDE7DQogICAgICAgICAgICBkYXRhID0gVE9LRU5fSlNPTl9BQkk7DQogICAgICAgICAgICByZXR1cm47DQogICAgICAgIH0NCiAgICAgICAgY29udGVudFR5cGUgPSAwOw0KICAgIH0NCn0='