base 64 content
base64tokenTraderFactory8
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC4wOw0KDQovL2h0dHBzOi8vZ2l0aHViLmNvbS9uZXh1c2Rldi9lcmMyMC9ibG9iL21hc3Rlci9jb250cmFjdHMvZXJjMjAuc29sDQoNCmNvbnRyYWN0IEVSQzIwQ29uc3RhbnQgew0KICAgIGZ1bmN0aW9uIGJhbGFuY2VPZiggYWRkcmVzcyB3aG8gKSBjb25zdGFudCByZXR1cm5zICh1aW50IHZhbHVlKTsNCn0NCmNvbnRyYWN0IEVSQzIwU3RhdGVmdWwgew0KICAgIGZ1bmN0aW9uIHRyYW5zZmVyKCBhZGRyZXNzIHRvLCB1aW50IHZhbHVlKSByZXR1cm5zIChib29sIG9rKTsNCn0NCmNvbnRyYWN0IEVSQzIwRXZlbnRzIHsNCiAgICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50IHZhbHVlKTsNCn0NCmNvbnRyYWN0IEVSQzIwIGlzIEVSQzIwQ29uc3RhbnQsIEVSQzIwU3RhdGVmdWwsIEVSQzIwRXZlbnRzIHt9DQoNCmNvbnRyYWN0IG93bmVkIHsNCiAgICBhZGRyZXNzIHB1YmxpYyBvd25lcjsNCg0KICAgIGZ1bmN0aW9uIG93bmVkKCkgew0KICAgICAgICBvd25lciA9IG1zZy5zZW5kZXI7DQogICAgfQ0KDQogICAgbW9kaWZpZXIgb25seU93bmVyIHsNCiAgICAgICAgaWYgKG1zZy5zZW5kZXIgIT0gb3duZXIpIHRocm93Ow0KICAgICAgICBfOw0KICAgIH0NCg0KICAgIGZ1bmN0aW9uIHRyYW5zZmVyT3duZXJzaGlwKGFkZHJlc3MgbmV3T3duZXIpIG9ubHlPd25lciB7DQogICAgICAgIG93bmVyID0gbmV3T3duZXI7DQogICAgfQ0KfQ0KDQovLyBjb250cmFjdCBjYW4gc2VsbCB0b2tlbnMgZm9yIEVUSA0KLy8gcHJpY2VzIGFyZSBpbiBhbW91bnQgb2Ygd2VpIHBlciBiYXRjaCBvZiB0b2tlbiB1bml0cw0KDQpjb250cmFjdCBUb2tlblRyYWRlciBpcyBvd25lZCB7DQoNCiAgICBhZGRyZXNzIHB1YmxpYyBhc3NldDsgICAgICAgLy8gYWRkcmVzcyBvZiB0b2tlbg0KICAgIHVpbnQyNTYgcHVibGljIHNlbGxQcmljZTsgICAvLyBjb250cmFjdCBzZWxscyBsb3RzIG9mIHRva2VucyBhdCB0aGlzIHByaWNlDQogICAgdWludDI1NiBwdWJsaWMgdW5pdHM7ICAgICAgIC8vIGxvdCBzaXplICh0b2tlbi13ZWkpDQoNCiAgICBib29sIHB1YmxpYyBzZWxsc1Rva2VuczsgICAgLy8gaXMgY29udHJhY3Qgc2VsbGluZw0KDQogICAgZXZlbnQgQWN0aXZhdGVkRXZlbnQoYm9vbCBzZWxscyk7DQogICAgZXZlbnQgVXBkYXRlRXZlbnQoKTsNCg0KICAgIGZ1bmN0aW9uIFRva2VuVHJhZGVyICgNCiAgICAgICAgYWRkcmVzcyBfYXNzZXQsIA0KICAgICAgICB1aW50MjU2IF9zZWxsUHJpY2UsIA0KICAgICAgICB1aW50MjU2IF91bml0cywNCiAgICAgICAgYm9vbCAgICBfc2VsbHNUb2tlbnMNCiAgICAgICAgKQ0KICAgIHsNCiAgICAgICAgICBhc3NldCAgICAgICAgID0gX2Fzc2V0OyANCiAgICAgICAgICBzZWxsUHJpY2UgICAgPSBfc2VsbFByaWNlOw0KICAgICAgICAgIHVuaXRzICAgICAgICAgPSBfdW5pdHM7IA0KICAgICAgICAgIHNlbGxzVG9rZW5zICAgPSBfc2VsbHNUb2tlbnM7DQoNCiAgICAgICAgICBBY3RpdmF0ZWRFdmVudChzZWxsc1Rva2Vucyk7DQogICAgfQ0KDQogICAgLy8gbW9kaWZ5IHRyYWRpbmcgYmVoYXZpb3INCiAgICBmdW5jdGlvbiBhY3RpdmF0ZSAoDQogICAgICAgIGJvb2wgICAgX3NlbGxzVG9rZW5zDQogICAgICAgICkgb25seU93bmVyDQogICAgew0KICAgICAgICAgIHNlbGxzVG9rZW5zICAgPSBfc2VsbHNUb2tlbnM7DQoNCiAgICAgICAgICBBY3RpdmF0ZWRFdmVudChzZWxsc1Rva2Vucyk7DQogICAgfQ0KDQogICAgLy8gYWxsb3cgb3duZXIgdG8gcmVtb3ZlIHRyYWRlIHRva2VuDQogICAgZnVuY3Rpb24gd2l0aGRyYXdBc3NldCh1aW50MjU2IF92YWx1ZSkgb25seU93bmVyIHJldHVybnMgKGJvb2wgb2spDQogICAgew0KICAgICAgICByZXR1cm4gRVJDMjAoYXNzZXQpLnRyYW5zZmVyKG93bmVyLF92YWx1ZSk7DQogICAgICAgIFVwZGF0ZUV2ZW50KCk7DQogICAgfQ0KDQogICAgLy8gYWxsb3cgb3duZXIgdG8gcmVtb3ZlIGFyYml0cmFyeSB0b2tlbnMNCiAgICAvLyBpbmNsdWRlZCBqdXN0IGluIGNhc2UgY29udHJhY3QgcmVjZWl2ZXMgd3JvbmcgdG9rZW4NCiAgICBmdW5jdGlvbiB3aXRoZHJhd1Rva2VuKGFkZHJlc3MgX3Rva2VuLCB1aW50MjU2IF92YWx1ZSkgb25seU93bmVyIHJldHVybnMgKGJvb2wgb2spDQogICAgew0KICAgICAgICByZXR1cm4gRVJDMjAoX3Rva2VuKS50cmFuc2Zlcihvd25lcixfdmFsdWUpOw0KICAgICAgICBVcGRhdGVFdmVudCgpOw0KICAgIH0NCg0KICAgIC8vIGFsbG93IG93bmVyIHRvIHJlbW92ZSBFVEgNCiAgICBmdW5jdGlvbiB3aXRoZHJhdyh1aW50MjU2IF92YWx1ZSkgb25seU93bmVyIHJldHVybnMgKGJvb2wgb2spDQogICAgew0KICAgICAgICBpZih0aGlzLmJhbGFuY2UgPj0gX3ZhbHVlKSB7DQogICAgICAgICAgICByZXR1cm4gb3duZXIuc2VuZChfdmFsdWUpOw0KICAgICAgICB9DQogICAgICAgIFVwZGF0ZUV2ZW50KCk7DQogICAgfQ0KDQogICAgLy91c2VyIGJ1eXMgdG9rZW4gd2l0aCBFVEgNCiAgICBmdW5jdGlvbiBidXkoKSBwYXlhYmxlIHsNCiAgICAgICAgaWYoc2VsbHNUb2tlbnMgfHwgbXNnLnNlbmRlciA9PSBvd25lcikgDQogICAgICAgIHsNCiAgICAgICAgICAgIHVpbnQgb3JkZXIgICA9IG1zZy52YWx1ZSAvIHNlbGxQcmljZTsgDQogICAgICAgICAgICB1aW50IGNhbl9zZWxsID0gRVJDMjAoYXNzZXQpLmJhbGFuY2VPZihhZGRyZXNzKHRoaXMpKSAvIHVuaXRzOw0KDQogICAgICAgICAgICBpZihvcmRlciA+IGNhbl9zZWxsKQ0KICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgIHVpbnQyNTYgY2hhbmdlID0gbXNnLnZhbHVlIC0gKGNhbl9zZWxsICogc2VsbFByaWNlKTsNCiAgICAgICAgICAgICAgICBvcmRlciA9IGNhbl9zZWxsOw0KICAgICAgICAgICAgICAgIGlmKCFtc2cuc2VuZGVyLnNlbmQoY2hhbmdlKSkgdGhyb3c7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGlmKG9yZGVyID4gMCkgew0KICAgICAgICAgICAgICAgIGlmKCFFUkMyMChhc3NldCkudHJhbnNmZXIobXNnLnNlbmRlcixvcmRlciAqIHVuaXRzKSkgdGhyb3c7DQogICAgICAgICAgICB9DQogICAgICAgICAgICBVcGRhdGVFdmVudCgpOw0KICAgICAgICB9DQogICAgICAgIGVsc2UgaWYoIW1zZy5zZW5kZXIuc2VuZChtc2cudmFsdWUpKSB0aHJvdzsgIC8vIHJldHVybiB1c2VyIGZ1bmRzIGlmIHRoZSBjb250cmFjdCBpcyBub3Qgc2VsbGluZw0KICAgIH0NCg0KICAgIC8vIHNlbmRpbmcgRVRIIHRvIGNvbnRyYWN0IHNlbGxzIEdOVCB0byB1c2VyDQogICAgZnVuY3Rpb24gKCkgcGF5YWJsZSB7DQogICAgICAgIGJ1eSgpOw0KICAgIH0NCn0NCg0KLy8gVGhpcyBjb250cmFjdCBkZXBsb3lzIFRva2VuVHJhZGVyIGNvbnRyYWN0cyBhbmQgbG9ncyB0aGUgZXZlbnQNCi8vIHRyYWRlIHBhaXJzIGFyZSBpZGVudGlmaWVkIHdpdGggc2hhMyhhc3NldCx1bml0cykNCg0KY29udHJhY3QgVG9rZW5UcmFkZXJGYWN0b3J5IHsNCg0KICAgIGV2ZW50IFRyYWRlTGlzdGluZyhieXRlczMyIGJvb2tpZCwgYWRkcmVzcyBvd25lciwgYWRkcmVzcyBhZGRyKTsNCiAgICBldmVudCBOZXdCb29rKGJ5dGVzMzIgYm9va2lkLCBhZGRyZXNzIGFzc2V0LCB1aW50MjU2IHVuaXRzKTsNCg0KICAgIG1hcHBpbmcoIGFkZHJlc3MgPT4gYm9vbCApIF92ZXJpZnk7DQogICAgbWFwcGluZyggYnl0ZXMzMiA9PiBib29sICkgcGFpckV4aXRzOw0KICAgIA0KICAgIGZ1bmN0aW9uIHZlcmlmeShhZGRyZXNzIHRyYWRlQ29udHJhY3QpICBjb25zdGFudCByZXR1cm5zICgNCiAgICAgICAgYm9vbCB2YWxpZCwNCiAgICAgICAgYWRkcmVzcyBhc3NldCwgDQogICAgICAgIHVpbnQyNTYgc2VsbFByaWNlLCANCiAgICAgICAgdWludDI1NiB1bml0cywNCiAgICAgICAgYm9vbCAgICBzZWxsc1Rva2Vucw0KICAgICAgICApIHsNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgdmFsaWQgPSBfdmVyaWZ5W3RyYWRlQ29udHJhY3RdOw0KICAgICAgICAgICAgDQogICAgICAgICAgICBpZih2YWxpZCkgew0KICAgICAgICAgICAgICAgIFRva2VuVHJhZGVyIHQgPSBUb2tlblRyYWRlcih0cmFkZUNvbnRyYWN0KTsNCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICBhc3NldCA9IHQuYXNzZXQoKTsNCiAgICAgICAgICAgICAgICBzZWxsUHJpY2UgPSB0LnNlbGxQcmljZSgpOw0KICAgICAgICAgICAgICAgIHVuaXRzID0gdC51bml0cygpOw0KICAgICAgICAgICAgICAgIHNlbGxzVG9rZW5zID0gdC5zZWxsc1Rva2VucygpOw0KICAgICAgICAgICAgfQ0KICAgICAgICANCiAgICB9DQoNCiAgICBmdW5jdGlvbiBjcmVhdGVUcmFkZUNvbnRyYWN0KCAgICAgICANCiAgICAgICAgYWRkcmVzcyBfYXNzZXQsIA0KICAgICAgICB1aW50MjU2IF9zZWxsUHJpY2UsIA0KICAgICAgICB1aW50MjU2IF91bml0cywNCiAgICAgICAgYm9vbCAgICBfc2VsbHNUb2tlbnMNCiAgICAgICAgKSByZXR1cm5zIChhZGRyZXNzKSANCiAgICB7DQogICAgICAgIGlmKF91bml0cyA9PSAwKSB0aHJvdzsgICAgICAgICAgICAgIC8vIGNhbid0IHNlbGwgemVybyB1bml0cw0KDQogICAgICAgIGFkZHJlc3MgdHJhZGVyID0gbmV3IFRva2VuVHJhZGVyICgNCiAgICAgICAgICAgICAgICAgICAgIF9hc3NldCwgDQogICAgICAgICAgICAgICAgICAgICBfc2VsbFByaWNlLCANCiAgICAgICAgICAgICAgICAgICAgIF91bml0cywNCiAgICAgICAgICAgICAgICAgICAgIF9zZWxsc1Rva2Vucyk7DQoNCiAgICAgICAgdmFyIGJvb2tpZCA9IHNoYTMoX2Fzc2V0LF91bml0cyk7DQoNCiAgICAgICAgX3ZlcmlmeVt0cmFkZXJdID0gdHJ1ZTsgLy8gcmVjb3JkIHRoYXQgdGhpcyBmYWN0b3J5IGNyZWF0ZWQgdGhlIHRyYWRlcg0KDQogICAgICAgIFRva2VuVHJhZGVyKHRyYWRlcikudHJhbnNmZXJPd25lcnNoaXAobXNnLnNlbmRlcik7IC8vIHNldCB0aGUgb3duZXIgdG8gd2hvZXZlciBjYWxsZWQgdGhlIGZ1bmN0aW9uDQoNCiAgICAgICAgaWYocGFpckV4aXRzW2Jvb2tpZF0gPT0gZmFsc2UpIHsNCiAgICAgICAgICAgIHBhaXJFeGl0c1tib29raWRdID0gdHJ1ZTsNCiAgICAgICAgICAgIE5ld0Jvb2soYm9va2lkLCBfYXNzZXQsIF91bml0cyk7DQogICAgICAgIH0NCg0KICAgICAgICBUcmFkZUxpc3RpbmcoYm9va2lkLG1zZy5zZW5kZXIsdHJhZGVyKTsNCiAgICB9DQoNCiAgICBmdW5jdGlvbiAoKSB7DQogICAgICAgIHRocm93OyAgICAgLy8gUHJldmVudHMgYWNjaWRlbnRhbCBzZW5kaW5nIG9mIGV0aGVyIHRvIHRoZSBmYWN0b3J5DQogICAgfQ0KfQ=='