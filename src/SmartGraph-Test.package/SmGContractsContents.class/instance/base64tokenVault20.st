base 64 content
base64tokenVault20
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC4xMDsNCg0KLy8gVG9rZW4gc2VsbGluZyBzbWFydCBjb250cmFjdA0KLy8gSW5zcGlyZWQgYnkgaHR0cHM6Ly9naXRodWIuY29tL2Jva2t5cG9vYmFoL1Rva2VuVHJhZGVyDQoNCi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bS9FSVBzL2lzc3Vlcy8yMA0KY29udHJhY3QgRVJDMjAgew0KICAgIGZ1bmN0aW9uIHRvdGFsU3VwcGx5KCkgY29uc3RhbnQgcmV0dXJucyAodWludCB0b3RhbFN1cHBseSk7DQogICAgZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MgX293bmVyKSBjb25zdGFudCByZXR1cm5zICh1aW50IGJhbGFuY2UpOw0KICAgIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgX3RvLCB1aW50IF92YWx1ZSkgcmV0dXJucyAoYm9vbCBzdWNjZXNzKTsNCiAgICBmdW5jdGlvbiB0cmFuc2ZlckZyb20oYWRkcmVzcyBfZnJvbSwgYWRkcmVzcyBfdG8sIHVpbnQgX3ZhbHVlKSByZXR1cm5zIChib29sIHN1Y2Nlc3MpOw0KICAgIGZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludCBfdmFsdWUpIHJldHVybnMgKGJvb2wgc3VjY2Vzcyk7DQogICAgZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3MgX293bmVyLCBhZGRyZXNzIF9zcGVuZGVyKSBjb25zdGFudCByZXR1cm5zICh1aW50IHJlbWFpbmluZyk7DQogICAgZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCBhZGRyZXNzIGluZGV4ZWQgX3RvLCB1aW50IF92YWx1ZSk7DQogICAgZXZlbnQgQXBwcm92YWwoYWRkcmVzcyBpbmRleGVkIF9vd25lciwgYWRkcmVzcyBpbmRleGVkIF9zcGVuZGVyLCB1aW50IF92YWx1ZSk7DQp9DQoNCi8vIGBvd25lZGAgY29udHJhY3RzIGFsbG93cyB1cyB0byBzcGVjaWZ5IGFuIG93bmVyIGFkZHJlc3MNCi8vIHdoaWNoIGhhcyBhZG1pbiByaWdodCB0byB0aGlzIGNvbnRyYWN0DQpjb250cmFjdCBvd25lZCB7DQogICAgYWRkcmVzcyBwdWJsaWMgb3duZXI7DQogICAgZXZlbnQgT3duZXJzaGlwVHJhbnNmZXJyZWQoYWRkcmVzcyBpbmRleGVkIF9mcm9tLCBhZGRyZXNzIGluZGV4ZWQgX3RvKTsNCg0KICAgIGZ1bmN0aW9uIG93bmVkKCkgew0KICAgICAgICBvd25lciA9IG1zZy5zZW5kZXI7DQogICAgfQ0KDQogICAgbW9kaWZpZXIgb25seU93bmVyIHsNCiAgICAgICAgcmVxdWlyZShtc2cuc2VuZGVyID09IG93bmVyKTsNCiAgICAgICAgXzsNCiAgICB9DQoNCiAgICBmdW5jdGlvbiB0cmFuc2Zlck93bmVyc2hpcChhZGRyZXNzIG5ld093bmVyKSBvbmx5T3duZXIgew0KICAgICAgICBPd25lcnNoaXBUcmFuc2ZlcnJlZChvd25lciwgbmV3T3duZXIpOw0KICAgICAgICBvd25lciA9IG5ld093bmVyOw0KICAgIH0NCn0NCg0KLy8gYGhhbHRpbmdgIGNvbnRyYWN0cyBhbGxvdyB1cyB0byBzdG9wIGFjdGl2aXR5IG9uIHRoaXMgY29udHJhY3QsDQovLyBvciBldmVuIHNlbGYtZGVzdHJ1Y3QgaWYgbmVlZCBiZS4NCmNvbnRyYWN0IGhhbHRpbmcgaXMgb3duZWQgew0KICAgIGJvb2wgcHVibGljIHJ1bm5pbmcgPSB0cnVlOw0KDQogICAgZnVuY3Rpb24gc3RhcnQoKSBvbmx5T3duZXIgew0KICAgICAgICBydW5uaW5nID0gdHJ1ZTsNCiAgICB9DQoNCiAgICBmdW5jdGlvbiBzdG9wKCkgb25seU93bmVyIHsNCiAgICAgICAgcnVubmluZyA9IGZhbHNlOw0KICAgIH0NCg0KICAgIGZ1bmN0aW9uIGRlc3RydWN0KCkgb25seU93bmVyIHsNCiAgICAgICAgc2VsZmRlc3RydWN0KG93bmVyKTsNCiAgICB9DQoNCiAgICBtb2RpZmllciBoYWx0aW5nIHsNCiAgICAgICAgYXNzZXJ0KHJ1bm5pbmcpOw0KICAgICAgICBfOw0KICAgIH0NCn0NCg0KLy8gY29udHJhY3QgY2FuIGJ1eSBvciBzZWxsIHRva2VucyBmb3IgRVRIDQovLyBwcmljZXMgYXJlIGluIGFtb3VudCBvZiB3ZWkgcGVyIGJhdGNoIG9mIHRva2VuIHVuaXRzDQpjb250cmFjdCBUb2tlblZhdWx0IGlzIG93bmVkLCBoYWx0aW5nIHsNCg0KICAgIGFkZHJlc3MgcHVibGljIGFzc2V0OyAgICAvLyBhZGRyZXNzIG9mIHRva2VuDQogICAgdWludCBwdWJsaWMgc2VsbFByaWNlOyAgIC8vIGNvbnRyYWN0IHNlbGxzIGxvdHMgYXQgdGhpcyBwcmljZSAoaW4gd2VpKQ0KICAgIHVpbnQgcHVibGljIHVuaXRzOyAgICAgICAvLyBsb3Qgc2l6ZSAodG9rZW4td2VpKQ0KDQogICAgZXZlbnQgTWFrZXJXaXRoZHJld0Fzc2V0KHVpbnQgdG9rZW5zKTsNCiAgICBldmVudCBNYWtlcldpdGhkcmV3RXRoZXIodWludCBldGhlcnMpOw0KICAgIGV2ZW50IFNvbGRUb2tlbnModWludCB0b2tlbnMpOw0KDQogICAgLy8gQ29uc3RydWN0b3IgLSBvbmx5IHRvIGJlIGNhbGxlZCBieSB0aGUgVG9rZW5UcmFkZXJGYWN0b3J5IGNvbnRyYWN0DQogICAgZnVuY3Rpb24gVG9rZW5WYXVsdCAoDQogICAgICAgIGFkZHJlc3MgX2Fzc2V0LA0KICAgICAgICB1aW50IF9zZWxsUHJpY2UsDQogICAgICAgIHVpbnQgX3VuaXRzDQogICAgKSB7DQogICAgICAgIGFzc2V0ICAgICAgID0gX2Fzc2V0Ow0KICAgICAgICBzZWxsUHJpY2UgICA9IF9zZWxsUHJpY2U7DQogICAgICAgIHVuaXRzICAgICAgID0gX3VuaXRzOw0KDQogICAgICAgIHJlcXVpcmUoYXNzZXQgIT0gMCk7DQogICAgICAgIHJlcXVpcmUoc2VsbFByaWNlID4gMCk7DQogICAgICAgIHJlcXVpcmUodW5pdHMgPiAwKTsNCiAgICB9DQoNCiAgICAvLyBXaXRoZHJhdyBhc3NldCBFUkMyMCBUb2tlbg0KICAgIGZ1bmN0aW9uIG1ha2VyV2l0aGRyYXdBc3NldCh1aW50IHRva2Vucykgb25seU93bmVyIHJldHVybnMgKGJvb2wgb2spIHsNCiAgICAgICAgTWFrZXJXaXRoZHJld0Fzc2V0KHRva2Vucyk7DQogICAgICAgIHJldHVybiBFUkMyMChhc3NldCkudHJhbnNmZXIob3duZXIsIHRva2Vucyk7DQogICAgfQ0KDQogICAgLy8gV2l0aGRyYXcgYWxsIGV0aCBmcm9tIHRoaXMgY29udHJhY3QNCiAgICBmdW5jdGlvbiBtYWtlcldpdGhkcmF3RXRoZXIoKSBvbmx5T3duZXIgew0KICAgICAgICBNYWtlcldpdGhkcmV3RXRoZXIodGhpcy5iYWxhbmNlKTsNCiAgICAgICAgcmV0dXJuIG93bmVyLnRyYW5zZmVyKHRoaXMuYmFsYW5jZSk7DQogICAgfQ0KDQogICAgLy8gRnVuY3Rpb24gdG8gZWFzaWx5IGNoZWNrIHRoaXMgY29udHJhY3RzIGJhbGFuY2UNCiAgICBmdW5jdGlvbiBnZXRBc3NldEJhbGFuY2UoKSBjb25zdGFudCByZXR1cm5zICh1aW50KSB7DQogICAgICAgIHJldHVybiBFUkMyMChhc3NldCkuYmFsYW5jZU9mKGFkZHJlc3ModGhpcykpOw0KICAgIH0NCg0KICAgIGZ1bmN0aW9uIG1pbih1aW50IGEsIHVpbnQgYikgcHJpdmF0ZSByZXR1cm5zICh1aW50KSB7DQogICAgICAgIHJldHVybiBhIDwgYiA/IGEgOiBiOw0KICAgIH0NCg0KICAgIC8vIFByaW1hcnkgZnVuY3Rpb247IGNhbGxlZCB3aXRoIEV0aGVyIHNlbnQgdG8gY29udHJhY3QNCiAgICBmdW5jdGlvbiB0YWtlckJ1eUFzc2V0KCkgcGF5YWJsZSBoYWx0aW5nIHsNCg0KICAgICAgICAvLyBNdXN0IHJlcXVlc3QgYXQgbGVhc3Qgb25lIGFzc2V0DQogICAgICAgIHJlcXVpcmUobXNnLnZhbHVlID49IHNlbGxQcmljZSk7DQoNCiAgICAgICAgdWludCBvcmRlciAgICA9IG1zZy52YWx1ZSAvIHNlbGxQcmljZTsNCiAgICAgICAgdWludCBjYW5fc2VsbCA9IGdldEFzc2V0QmFsYW5jZSgpIC8gdW5pdHM7DQogICAgICAgIC8vIHN0YXJ0IHdpdGggbm8gY2hhbmdlDQogICAgICAgIHVpbnQyNTYgY2hhbmdlID0gMDsNCiAgICAgICAgaWYgKG1zZy52YWx1ZSA+IChjYW5fc2VsbCAqIHNlbGxQcmljZSkpIHsNCiAgICAgICAgICAgIGNoYW5nZSAgPSBtc2cudmFsdWUgLSAoY2FuX3NlbGwgKiBzZWxsUHJpY2UpOw0KICAgICAgICAgICAgb3JkZXIgPSBjYW5fc2VsbDsNCiAgICAgICAgfQ0KICAgICAgICBpZiAoY2hhbmdlID4gMCkgew0KICAgICAgICAgICAgaWYgKCFtc2cuc2VuZGVyLnNlbmQoY2hhbmdlKSkgdGhyb3c7DQogICAgICAgIH0NCiAgICAgICAgaWYgKG9yZGVyID4gMCkgew0KICAgICAgICAgICAgaWYgKCFFUkMyMChhc3NldCkudHJhbnNmZXIobXNnLnNlbmRlciwgb3JkZXIgKiB1bml0cykpIHRocm93Ow0KICAgICAgICB9DQogICAgICAgIFNvbGRUb2tlbnMob3JkZXIpOw0KDQogICAgfQ0KDQogICAgLy8gRXRoZXIgaXMgc2VudCB0byB0aGUgY29udHJhY3Q7IGNhbiBiZSBlaXRoZXIgTWFrZXIgb3IgVGFrZXINCiAgICBmdW5jdGlvbiAoKSBwYXlhYmxlIHsNCiAgICAgICAgaWYgKG1zZy5zZW5kZXIgPT0gb3duZXIpIHsNCiAgICAgICAgICAgIC8vIEFsbG93IG93bmVyIHRvIHNpbXBseSBhZGQgZXRoIHRvIGNvbnRyYWN0DQogICAgICAgICAgICByZXR1cm47DQogICAgICAgIH0NCiAgICAgICAgZWxzZSB7DQogICAgICAgICAgICAvLyBPdGhlcndpc2UsIGludGVycHJldCBhcyBhIGJ1eSByZXF1ZXN0DQogICAgICAgICAgICB0YWtlckJ1eUFzc2V0KCk7DQogICAgICAgIH0NCiAgICB9DQp9'