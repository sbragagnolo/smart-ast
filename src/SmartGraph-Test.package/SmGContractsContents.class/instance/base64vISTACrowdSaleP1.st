base 64 content
base64vISTACrowdSaleP1
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC4xMTsNCmxpYnJhcnkgU2FmZU1hdGggew0KCWZ1bmN0aW9uIG11bCh1aW50IGEsIHVpbnQgYikgaW50ZXJuYWwgcmV0dXJucyAodWludCkgew0KCQl1aW50IGMgPSBhICogYjsNCgkJYXNzZXJ0KGEgPT0gMCB8fCBjIC8gYSA9PSBiKTsNCgkJcmV0dXJuIGM7DQoJfQ0KCQ0KCWZ1bmN0aW9uIGRpdih1aW50IGEsIHVpbnQgYikgaW50ZXJuYWwgcmV0dXJucyAodWludCkgew0KCQlhc3NlcnQoYiA+IDApOw0KCQl1aW50IGMgPSBhIC8gYjsNCgkJYXNzZXJ0KGEgPT0gYiAqIGMgKyBhICUgYik7DQoJCXJldHVybiBjOw0KCX0NCgkNCglmdW5jdGlvbiBzdWIodWludCBhLCB1aW50IGIpIGludGVybmFsIHJldHVybnMgKHVpbnQpIHsNCgkJYXNzZXJ0KGIgPD0gYSk7DQoJCXJldHVybiBhIC0gYjsNCgl9DQoJDQoJZnVuY3Rpb24gYWRkKHVpbnQgYSwgdWludCBiKSBpbnRlcm5hbCByZXR1cm5zICh1aW50KSB7DQoJCXVpbnQgYyA9IGEgKyBiOw0KCQlhc3NlcnQoYyA+PSBhKTsNCgkJcmV0dXJuIGM7DQoJfQ0KCQ0KCWZ1bmN0aW9uIG1heDY0KHVpbnQ2NCBhLCB1aW50NjQgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDY0KSB7DQoJCXJldHVybiBhID49IGIgPyBhIDogYjsNCgl9DQoJDQoJZnVuY3Rpb24gbWluNjQodWludDY0IGEsIHVpbnQ2NCBiKSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50NjQpIHsNCgkJcmV0dXJuIGEgPCBiID8gYSA6IGI7DQoJfQ0KCQ0KCWZ1bmN0aW9uIG1heDI1Nih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1Nikgew0KCQlyZXR1cm4gYSA+PSBiID8gYSA6IGI7DQoJfQ0KCQ0KCWZ1bmN0aW9uIG1pbjI1Nih1aW50MjU2IGEsIHVpbnQyNTYgYikgaW50ZXJuYWwgY29uc3RhbnQgcmV0dXJucyAodWludDI1Nikgew0KCQlyZXR1cm4gYSA8IGIgPyBhIDogYjsNCgl9DQoJDQoJZnVuY3Rpb24gYXNzZXJ0KGJvb2wgYXNzZXJ0aW9uKSBpbnRlcm5hbCB7DQoJCWlmICghYXNzZXJ0aW9uKSB7DQoJCQl0aHJvdzsNCiAgICB9DQogIH0NCn0NCg0KDQpjb250cmFjdCBPd25hYmxlIHsNCiAgICBhZGRyZXNzIHB1YmxpYyBvd25lcjsNCiAgICBmdW5jdGlvbiBPd25hYmxlKCkgew0KICAgICAgICBvd25lciA9IG1zZy5zZW5kZXI7DQogICAgfQ0KCQ0KICAgIG1vZGlmaWVyIG9ubHlPd25lciB7DQogICAgICAgIGlmIChtc2cuc2VuZGVyICE9IG93bmVyKSB0aHJvdzsNCiAgICAgICAgXzsNCiAgICB9DQoJDQogICAgZnVuY3Rpb24gdHJhbnNmZXJPd25lcnNoaXAoYWRkcmVzcyBuZXdPd25lcikgb25seU93bmVyIHsNCiAgICAgICAgaWYgKG5ld093bmVyICE9IGFkZHJlc3MoMCkpIHsNCiAgICAgICAgICAgIG93bmVyID0gbmV3T3duZXI7DQogICAgICAgIH0NCiAgICB9DQp9DQoNCg0KDQovKg0KICogUGF1c2FibGUgRnVuY3Rpb24NCiAqIEFic3RyYWN0IGNvbnRyYWN0IHRoYXQgYWxsb3dzIGNoaWxkcmVuIHRvIGltcGxlbWVudCBhbiBlbWVyZ2VuY3kgc3RvcCBmdW5jdGlvbi4gDQogKi8NCmNvbnRyYWN0IFBhdXNhYmxlIGlzIE93bmFibGUgew0KCWJvb2wgcHVibGljIHN0b3BwZWQgPSBmYWxzZTsNCgltb2RpZmllciBzdG9wSW5FbWVyZ2VuY3kgew0KCQlpZiAoc3RvcHBlZCkgew0KCQkJdGhyb3c7DQoJCX0NCgkJXzsNCgl9DQogIA0KCW1vZGlmaWVyIG9ubHlJbkVtZXJnZW5jeSB7DQoJCWlmICghc3RvcHBlZCkgew0KCQkJdGhyb3c7DQoJCX0NCgkJXzsNCgl9DQoJDQovKg0KICogRW1lcmdlbmN5U3RvcCBGdW5jdGlvbg0KICogY2FsbGVkIGJ5IHRoZSBvd25lciBvbiBlbWVyZ2VuY3ksIHRyaWdnZXJzIHN0b3BwZWQgc3RhdGUgDQogKi8NCmZ1bmN0aW9uIGVtZXJnZW5jeVN0b3AoKSBleHRlcm5hbCBvbmx5T3duZXIgew0KICAgIHN0b3BwZWQgPSB0cnVlOw0KCX0NCg0KCQ0KLyoNCiAqIFJlbGVhc2UgRW1lcmdlbmN5U3RhdGUgRnVuY3Rpb24NCiAqIGNhbGxlZCBieSB0aGUgb3duZXIgb24gZW5kIG9mIGVtZXJnZW5jeSwgcmV0dXJucyB0byBub3JtYWwgc3RhdGUNCiAqLyAgDQoNCmZ1bmN0aW9uIHJlbGVhc2UoKSBleHRlcm5hbCBvbmx5T3duZXIgb25seUluRW1lcmdlbmN5IHsNCiAgICBzdG9wcGVkID0gZmFsc2U7DQoJfQ0KfQ0KDQovKg0KICogRVJDMjBCYXNpYyBjbGFzcw0KICogQWJzdHJhY3QgY29udHJhY3QgdGhhdCBhbGxvd3MgY2hpbGRyZW4gdG8gaW1wbGVtZW50IEVSQzIwYmFzaWMgcGVyc2lzdGVudCBkYXRhIGluIHN0YXRlIHZhcmlhYmxlcy4NCiAqLyAJDQpjb250cmFjdCBFUkMyMEJhc2ljIHsNCiAgdWludCBwdWJsaWMgdG90YWxTdXBwbHk7DQogIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIHdobykgY29uc3RhbnQgcmV0dXJucyAodWludCk7DQogIGZ1bmN0aW9uIHRyYW5zZmVyKGFkZHJlc3MgdG8sIHVpbnQgdmFsdWUpOw0KICBldmVudCBUcmFuc2ZlcihhZGRyZXNzIGluZGV4ZWQgZnJvbSwgYWRkcmVzcyBpbmRleGVkIHRvLCB1aW50IHZhbHVlKTsNCn0NCg0KDQovKg0KICogRVJDMjAgY2xhc3MNCiAqIEFic3RyYWN0IGNvbnRyYWN0IHRoYXQgYWxsb3dzIGNoaWxkcmVuIHRvIGltcGxlbWVudCBFUkMyMCBwZXJzaXN0ZW50IGRhdGEgaW4gc3RhdGUgdmFyaWFibGVzLg0KICovIA0KY29udHJhY3QgRVJDMjAgaXMgRVJDMjBCYXNpYyB7DQoJZnVuY3Rpb24gYWxsb3dhbmNlKGFkZHJlc3Mgb3duZXIsIGFkZHJlc3Mgc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludCk7DQoJZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgZnJvbSwgYWRkcmVzcyB0bywgdWludCB2YWx1ZSk7DQoJZnVuY3Rpb24gYXBwcm92ZShhZGRyZXNzIHNwZW5kZXIsIHVpbnQgdmFsdWUpOw0KCWV2ZW50IEFwcHJvdmFsKGFkZHJlc3MgaW5kZXhlZCBvd25lciwgYWRkcmVzcyBpbmRleGVkIHNwZW5kZXIsIHVpbnQgdmFsdWUpOw0KfQ0KDQoNCg0KLyoNCiAqIEJhc2ljVG9rZW4gY2xhc3MNCiAqIEFic3RyYWN0IGNvbnRyYWN0IHRoYXQgYWxsb3dzIGNoaWxkcmVuIHRvIGltcGxlbWVudCBCYXNpY1Rva2VuIGZ1bmN0aW9ucyBhbmQgIHBlcnNpc3RlbnQgZGF0YSBpbiBzdGF0ZSB2YXJpYWJsZXMuDQogKi8NCg0KY29udHJhY3QgQmFzaWNUb2tlbiBpcyBFUkMyMEJhc2ljIHsNCiAgDQoJdXNpbmcgU2FmZU1hdGggZm9yIHVpbnQ7DQogIA0KCW1hcHBpbmcoYWRkcmVzcyA9PiB1aW50KSBiYWxhbmNlczsNCiAgDQoJLyoNCgkqIEZpeCBmb3IgdGhlIEVSQzIwIHNob3J0IGFkZHJlc3MgYXR0YWNrICANCgkqLw0KCW1vZGlmaWVyIG9ubHlQYXlsb2FkU2l6ZSh1aW50IHNpemUpIHsNCgkJaWYobXNnLmRhdGEubGVuZ3RoIDwgc2l6ZSArIDQpIHsNCgkJdGhyb3c7DQoJCX0NCgkJXzsNCgl9DQoJDQoJZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyBfdG8sIHVpbnQgX3ZhbHVlKSBvbmx5UGF5bG9hZFNpemUoMiAqIDMyKSB7DQoJCWJhbGFuY2VzW21zZy5zZW5kZXJdID0gYmFsYW5jZXNbbXNnLnNlbmRlcl0uc3ViKF92YWx1ZSk7DQoJCWJhbGFuY2VzW190b10gPSBiYWxhbmNlc1tfdG9dLmFkZChfdmFsdWUpOw0KCQlUcmFuc2Zlcihtc2cuc2VuZGVyLCBfdG8sIF92YWx1ZSk7DQoJfQ0KCQ0KCWZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzIF9vd25lcikgY29uc3RhbnQgcmV0dXJucyAodWludCBiYWxhbmNlKSB7DQoJCXJldHVybiBiYWxhbmNlc1tfb3duZXJdOw0KCX0NCn0NCg0KDQoNCi8qDQogKiBTdGFuZGFyZFRva2VuIGNsYXNzDQogKiBBYnN0cmFjdCBjb250cmFjdCB0aGF0IGFsbG93cyBjaGlsZHJlbiB0byBpbXBsZW1lbnQgU3RhbmRUb2tlbiBmdW5jdGlvbnMgYW5kICBwZXJzaXN0ZW50IGRhdGEgaW4gc3RhdGUgdmFyaWFibGVzLg0KICovDQpjb250cmFjdCBTdGFuZGFyZFRva2VuIGlzIEJhc2ljVG9rZW4sIEVSQzIwIHsNCgltYXBwaW5nIChhZGRyZXNzID0+IG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludCkpIGFsbG93ZWQ7DQoJZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgX2Zyb20sIGFkZHJlc3MgX3RvLCB1aW50IF92YWx1ZSkgb25seVBheWxvYWRTaXplKDMgKiAzMikgew0KICAgIHZhciBfYWxsb3dhbmNlID0gYWxsb3dlZFtfZnJvbV1bbXNnLnNlbmRlcl07DQogICAgLy8gQ2hlY2sgaXMgbm90IG5lZWRlZCBiZWNhdXNlIHN1YihfYWxsb3dhbmNlLCBfdmFsdWUpIHdpbGwgYWxyZWFkeSB0aHJvdyBpZiB0aGlzIGNvbmRpdGlvbiBpcyBub3QgbWV0DQogICAgLy8gaWYgKF92YWx1ZSA+IF9hbGxvd2FuY2UpIHRocm93Ow0KICAgIGJhbGFuY2VzW190b10gPSBiYWxhbmNlc1tfdG9dLmFkZChfdmFsdWUpOw0KICAgIGJhbGFuY2VzW19mcm9tXSA9IGJhbGFuY2VzW19mcm9tXS5zdWIoX3ZhbHVlKTsNCiAgICBhbGxvd2VkW19mcm9tXVttc2cuc2VuZGVyXSA9IF9hbGxvd2FuY2Uuc3ViKF92YWx1ZSk7DQogICAgVHJhbnNmZXIoX2Zyb20sIF90bywgX3ZhbHVlKTsNCiAgfQ0KCWZ1bmN0aW9uIGFwcHJvdmUoYWRkcmVzcyBfc3BlbmRlciwgdWludCBfdmFsdWUpIHsNCgkJLy8gVG8gY2hhbmdlIHRoZSBhcHByb3ZlIGFtb3VudCB5b3UgZmlyc3QgaGF2ZSB0byByZWR1Y2UgdGhlIGFkZHJlc3Nlc2ANCgkJLy8gIGFsbG93YW5jZSB0byB6ZXJvIGJ5IGNhbGxpbmcgYGFwcHJvdmUoX3NwZW5kZXIsIDApYCBpZiBpdCBpcyBub3QNCgkJLy8gIGFscmVhZHkgMCB0byBtaXRpZ2F0ZSB0aGUgcmFjZSBjb25kaXRpb24gZGVzY3JpYmVkIGhlcmU6DQoJCS8vICBodHRwczovL2dpdGh1Yi5jb20vZXRoZXJldW0vRUlQcy9pc3N1ZXMvMjAjaXNzdWVjb21tZW50LTI2MzUyNDcyOQ0KCQlpZiAoKF92YWx1ZSAhPSAwKSAmJiAoYWxsb3dlZFttc2cuc2VuZGVyXVtfc3BlbmRlcl0gIT0gMCkpIHRocm93Ow0KCQlhbGxvd2VkW21zZy5zZW5kZXJdW19zcGVuZGVyXSA9IF92YWx1ZTsNCgkJQXBwcm92YWwobXNnLnNlbmRlciwgX3NwZW5kZXIsIF92YWx1ZSk7DQoJfQ0KCWZ1bmN0aW9uIGFsbG93YW5jZShhZGRyZXNzIF9vd25lciwgYWRkcmVzcyBfc3BlbmRlcikgY29uc3RhbnQgcmV0dXJucyAodWludCByZW1haW5pbmcpIHsNCgkJcmV0dXJuIGFsbG93ZWRbX293bmVyXVtfc3BlbmRlcl07DQoJfQ0KfQ0KDQoNCg0KLyoqDQogKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICogVklTVEEgdG9rZW4gc21hcnQgY29udHJhY3QuIEltcGxlbWVudHMNCiAqIFZJU1RBQ09JTiBjbGFzcw0KICovDQpjb250cmFjdCBWSVNUQWNvaW4gaXMgU3RhbmRhcmRUb2tlbiwgT3duYWJsZSB7DQoJc3RyaW5nIHB1YmxpYyBjb25zdGFudCBuYW1lID0gIlZJU1RBY29pbiI7DQoJc3RyaW5nIHB1YmxpYyBjb25zdGFudCBzeW1ib2wgPSAiVlRBIjsNCgl1aW50IHB1YmxpYyBjb25zdGFudCBkZWNpbWFscyA9IDA7DQoJLy8gQ29uc3RydWN0b3INCglmdW5jdGlvbiBWSVNUQWNvaW4oKSB7DQoJCXRvdGFsU3VwcGx5ID0gNTAwMDAwMDA7DQoJCWJhbGFuY2VzW21zZy5zZW5kZXJdID0gdG90YWxTdXBwbHk7IC8vIFNlbmQgYWxsIHRva2VucyB0byBvd25lcg0KCX0NCn0NCg0KDQoNCg0KDQoNCi8qKg0KICogQ3Jvd2RzYWxlIFNtYXJ0IENvbnRyYWN0IGZvciBWSVNUQSBGSU5URUNIDQogKiBUaGlzIHNtYXJ0IGNvbnRyYWN0IGNvbGxlY3RzIEVUSCwgYW5kIGluIHJldHVybiBlbWl0cyBWSVNUQWNvaW4gdG9rZW5zIHRvIHRoZSBiYWNrZXJzDQogKi8NCmNvbnRyYWN0IFZJU1RBQ3Jvd2RTYWxlUDEgaXMgUGF1c2FibGUgew0KICAgIA0KICAgIHVzaW5nIFNhZmVNYXRoIGZvciB1aW50Ow0KICAgIHN0cnVjdCBCYWNrZXIgew0KICAgICAgICB1aW50IHdlaVJlY2VpdmVkOyAvLyBBbW91bnQgb2YgRXRoZXIgZ2l2ZW4NCiAgICAgICAgdWludCBjb2luU2VudDsNCiAgICB9DQoJDQogICAgLyoNCiAgICAqIENvbnN0YW50cw0KICAgICovDQogICAgLyogTWluaW11bSBudW1iZXIgb2YgVklTVEFjb2luIHRvIHNlbGwgKi8NCiAgICB1aW50IHB1YmxpYyBjb25zdGFudCBNSU5fQ0FQID0gMTsgLy8gMSBWSVNUQWNvaW5zDQogICAgLyogTWF4aW11bSBudW1iZXIgb2YgVklTVEFjb2luIHRvIHNlbGwgKi8NCiAgICB1aW50IHB1YmxpYyBjb25zdGFudCBNQVhfQ0FQID0gNTAwMDAwMDsgLy8gNTAwMCBWSVNUQWNvaW5zDQogICAgLyogTWluaW11bSBhbW91bnQgdG8gaW52ZXN0ICovDQogICAgdWludCBwdWJsaWMgY29uc3RhbnQgTUlOX0lOVkVTVF9FVEhFUiA9IDUwMCBmaW5uZXk7DQogICAgLyogQ3Jvd2RzYWxlIHBlcmlvZCAqLw0KICAgIHVpbnQgcHJpdmF0ZSBjb25zdGFudCBDUk9XRFNBTEVfUEVSSU9EID0gMTUgZGF5czsNCiAgICAvKiBOdW1iZXIgb2YgVklTVEFjb2lucyBwZXIgRXRoZXIgKi8NCiAgICB1aW50IHB1YmxpYyBjb25zdGFudCBDT0lOX1BFUl9FVEhFUiA9IDM1MDsgLy8gMSBWSVNUQWNvaW5zL2V0aA0KCQ0KCQ0KCQ0KCQ0KICAgIC8qDQogICAgKiBWYXJpYWJsZXMNCiAgICAqLw0KICAgIC8qIFZJU1RBY29pbiBjb250cmFjdCByZWZlcmVuY2UgKi8NCiAgICBWSVNUQWNvaW4gcHVibGljIGNvaW47DQogICAgLyogTXVsdGlzaWcgY29udHJhY3QgdGhhdCB3aWxsIHJlY2VpdmUgdGhlIEV0aGVyICovDQogICAgYWRkcmVzcyBwdWJsaWMgbXVsdGlzaWdFdGhlcjsNCiAgICAvKiBOdW1iZXIgb2YgRXRoZXIgcmVjZWl2ZWQgKi8NCiAgICB1aW50IHB1YmxpYyBldGhlclJlY2VpdmVkOw0KICAgIC8qIE51bWJlciBvZiBWSVNUQWNvaW5zIHNlbnQgdG8gRXRoZXIgY29udHJpYnV0b3JzICovDQogICAgdWludCBwdWJsaWMgY29pblNlbnRUb0V0aGVyOw0KICAgIC8qIENyb3dkc2FsZSBzdGFydCB0aW1lICovDQogICAgdWludCBwdWJsaWMgc3RhcnRUaW1lOw0KICAgIC8qIENyb3dkc2FsZSBlbmQgdGltZSAqLw0KICAgIHVpbnQgcHVibGljIGVuZFRpbWU7DQogICAgLyogSXMgY3Jvd2RzYWxlIHN0aWxsIG9uIGdvaW5nICovDQogICAgYm9vbCBwdWJsaWMgY3Jvd2RzYWxlQ2xvc2VkID0gZmFsc2U7DQogICAgLyogQmFja2VycyBFdGhlciBpbmRleGVkIGJ5IHRoZWlyIEV0aGVyZXVtIGFkZHJlc3MgKi8NCiAgICBtYXBwaW5nKGFkZHJlc3MgPT4gQmFja2VyKSBwdWJsaWMgYmFja2VyczsNCgkNCgkNCgkNCgkNCiAgICAvKg0KICAgICogTW9kaWZpZXJzDQogICAgKi8NCiAgICBtb2RpZmllciBtaW5DYXBOb3RSZWFjaGVkKCkgew0KICAgICAgICBpZiAoKG5vdyA8IGVuZFRpbWUpIHx8IGNvaW5TZW50VG9FdGhlciA+PSBNSU5fQ0FQICkgdGhyb3c7DQogICAgICAgIF87DQogICAgfQ0KICAgIG1vZGlmaWVyIHJlc3BlY3RUaW1lRnJhbWUoKSB7DQogICAgICAgIGlmICgobm93IDwgc3RhcnRUaW1lKSB8fCAobm93ID4gZW5kVGltZSApKSB0aHJvdzsNCiAgICAgICAgXzsNCiAgICB9DQoJDQoJDQogICAgLyoNCiAgICAgKiBFdmVudA0KICAgICovDQogICAgZXZlbnQgTG9nUmVjZWl2ZWRFVEgoYWRkcmVzcyBhZGRyLCB1aW50IHZhbHVlKTsNCiAgICBldmVudCBMb2dDb2luc0VtaXRlZChhZGRyZXNzIGluZGV4ZWQgZnJvbSwgdWludCBhbW91bnQpOw0KCQ0KCQ0KICAgIC8qDQogICAgICogQ29uc3RydWN0b3INCiAgICAqLw0KICAgIGZ1bmN0aW9uIFZJU1RBQ3Jvd2RTYWxlUDEoYWRkcmVzcyBfVklTVEFjb2luQWRkcmVzcywgYWRkcmVzcyBfdG8pIHsNCiAgICAgICAgY29pbiA9IFZJU1RBY29pbihfVklTVEFjb2luQWRkcmVzcyk7DQogICAgICAgIG11bHRpc2lnRXRoZXIgPSBfdG87DQogICAgfQ0KCQ0KCQ0KICAgIC8qIA0KICAgICAqIFRoZSBmYWxsYmFjayBmdW5jdGlvbiBjb3JyZXNwb25kcyB0byBhIGRvbmF0aW9uIGluIEVUSA0KICAgICAqLw0KICAgIGZ1bmN0aW9uKCkgc3RvcEluRW1lcmdlbmN5IHJlc3BlY3RUaW1lRnJhbWUgcGF5YWJsZSB7DQogICAgICAgIGlmIChjcm93ZHNhbGVDbG9zZWQpIHRocm93OyAvL0Nyb3dkc2FsZSB3YXMgY2xvc2VkLg0KCQlyZWNlaXZlRVRIKG1zZy5zZW5kZXIpOw0KICAgIH0NCgkNCgkNCiAgICAvKiANCiAgICAgKiBUbyBjYWxsIHRvIHN0YXJ0IHRoZSBjcm93ZHNhbGUNCiAgICAgKi8NCiAgICBmdW5jdGlvbiBzdGFydCgpIG9ubHlPd25lciB7DQogICAgICAgIGlmIChzdGFydFRpbWUgIT0gMCkgdGhyb3c7IC8vIENyb3dkc2FsZSB3YXMgYWxyZWFkeSBzdGFydGVkDQogICAgICAgIHN0YXJ0VGltZSA9IG5vdyA7ICAgICAgICAgICAgDQogICAgICAgIGVuZFRpbWUgPSAgbm93ICsgQ1JPV0RTQUxFX1BFUklPRDsgICAgDQogICAgfQ0KCQ0KCQ0KICAgIC8qDQogICAgICogIFJlY2VpdmVzIGEgZG9uYXRpb24gaW4gRXRoZXINCiAgICAqLw0KICAgIGZ1bmN0aW9uIHJlY2VpdmVFVEgoYWRkcmVzcyBiZW5lZmljaWFyeSkgaW50ZXJuYWwgew0KICAgICAgICBpZiAobXNnLnZhbHVlIDwgTUlOX0lOVkVTVF9FVEhFUikgdGhyb3c7IC8vIERvbid0IGFjY2VwdCBmdW5kaW5nIHVuZGVyIGEgcHJlZGVmaW5lZCB0aHJlc2hvbGQgICAgICAgIA0KICAgICAgICB1aW50IGNvaW5Ub1NlbmQgPSBib251cyhtc2cudmFsdWUubXVsKENPSU5fUEVSX0VUSEVSKS5kaXYoMSBldGhlcikpOyAvLyBDb21wdXRlIHRoZSBudW1iZXIgb2YgVklTVEFjb2luIHRvIHNlbmQNCiAgICAgICAgaWYgKGNvaW5Ub1NlbmQuYWRkKGNvaW5TZW50VG9FdGhlcikgPiBNQVhfQ0FQKSB0aHJvdzsgICAgDQogICAgICAgIEJhY2tlciBiYWNrZXIgPSBiYWNrZXJzW2JlbmVmaWNpYXJ5XTsNCiAgICAgICAgY29pbi50cmFuc2ZlcihiZW5lZmljaWFyeSwgY29pblRvU2VuZCk7IC8vIFRyYW5zZmVyIFZJU1RBY29pbnMgcmlnaHQgbm93DQoJCWlmICghbXVsdGlzaWdFdGhlci5zZW5kKHRoaXMuYmFsYW5jZSkpIHRocm93OyAvL1RyYW5zZmVyIEVUSCB0byBWSVNUQSBFQ0MJCQ0KICAgICAgICBiYWNrZXIuY29pblNlbnQgPSBiYWNrZXIuY29pblNlbnQuYWRkKGNvaW5Ub1NlbmQpOw0KICAgICAgICBiYWNrZXIud2VpUmVjZWl2ZWQgPSBiYWNrZXIud2VpUmVjZWl2ZWQuYWRkKG1zZy52YWx1ZSk7IC8vIFVwZGF0ZSB0aGUgdG90YWwgd2VpIGNvbGxlY3RlZCBkdXJpbmcgdGhlIGNyb3dkZnVuZGluZyBmb3IgdGhpcyBiYWNrZXIgICAgDQogICAgICAgIGV0aGVyUmVjZWl2ZWQgPSBldGhlclJlY2VpdmVkLmFkZChtc2cudmFsdWUpOyAvLyBVcGRhdGUgdGhlIHRvdGFsIHdlaSBjb2xsZWN0ZWQgZHVyaW5nIHRoZSBjcm93ZGZ1bmRpbmcNCiAgICAgICAgY29pblNlbnRUb0V0aGVyID0gY29pblNlbnRUb0V0aGVyLmFkZChjb2luVG9TZW5kKTsNCiAgICAgICAgLy8gU2VuZCBldmVudHMNCiAgICAgICAgTG9nQ29pbnNFbWl0ZWQobXNnLnNlbmRlciAsY29pblRvU2VuZCk7DQogICAgICAgIExvZ1JlY2VpdmVkRVRIKGJlbmVmaWNpYXJ5LCBldGhlclJlY2VpdmVkKTsgDQogICAgfQ0KICAgIA0KICAgIC8qDQogICAgICpDb21wdXRlIHRoZSBWSVNUQWNvaW4gQk9OVVMgYWNjb3JkaW5nIHRvIHRoZSBpbnZlc3RtZW50IHBlcmlvZA0KICAgICAqLw0KICAgIGZ1bmN0aW9uIGJvbnVzKHVpbnQgYW1vdW50KSBpbnRlcm5hbCBjb25zdGFudCByZXR1cm5zICh1aW50KSB7DQogICAgICAgIHJldHVybiBhbW91bnQuYWRkKGFtb3VudC5kaXYoNSkpOyAgIC8vIGJvbnVzIDIwJQ0KICAgIH0NCgkNCgkNCgkNCgkNCiAgICAvKiAgDQogICAgICogRklOQUxJWkUgdGhlIGNyb3dkc2FsZSwgc2hvdWxkIGJlIGNhbGxlZCBhZnRlciBpY28gcGVyaW9kDQogICAgKi8NCiAgICBmdW5jdGlvbiBmaW5hbGl6ZSgpIG9ubHlPd25lciBwdWJsaWMgew0KICAgICAgICBpZiAobm93IDwgZW5kVGltZSkgeyAvLyBDYW5ub3QgZmluYWxpc2UgYmVmb3JlIENST1dEU0FMRV9QRVJJT0Qgb3IgYmVmb3JlIHNlbGxpbmcgYWxsIGNvaW5zDQogICAgICAgICAgICBpZiAoY29pblNlbnRUb0V0aGVyID09IE1BWF9DQVApIHsNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgdGhyb3c7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgaWYgKCFtdWx0aXNpZ0V0aGVyLnNlbmQodGhpcy5iYWxhbmNlKSkgdGhyb3c7IC8vIE1vdmUgdGhlIHJlbWFpbmluZyBFdGhlciB0byB0aGUgbXVsdGlzaWcgYWRkcmVzcw0KCQlnZXRSZW1haW5Db2lucygpOw0KICAgICAgICBjcm93ZHNhbGVDbG9zZWQgPSB0cnVlOw0KICAgIH0NCgkNCgkNCiAgICAvKiAgDQogICAgKiBGYWlsc2FmZSBkcmFpbg0KICAgICovDQogICAgZnVuY3Rpb24gZHJhaW4oKSBvbmx5T3duZXIgew0KICAgICAgICBpZiAoIW93bmVyLnNlbmQodGhpcy5iYWxhbmNlKSkgdGhyb3c7DQogICAgfQ0KCQ0KCQ0KICAgIC8qKg0KICAgICAqIEFsbG93IHRvIGNoYW5nZSB0aGUgdGVhbSBtdWx0aXNpZyBhZGRyZXNzIGluIHRoZSBjYXNlIG9mIGVtZXJnZW5jeS4NCiAgICAgKi8NCiAgICBmdW5jdGlvbiBzZXRNdWx0aXNpZyhhZGRyZXNzIGFkZHIpIG9ubHlPd25lciBwdWJsaWMgew0KICAgICAgICBpZiAoYWRkciA9PSBhZGRyZXNzKDApKSB0aHJvdzsNCiAgICAgICAgbXVsdGlzaWdFdGhlciA9IGFkZHI7DQogICAgfQ0KCQ0KCQ0KICAgIC8qKg0KICAgICAqIE1hbnVhbGx5IGJhY2sgVklTVEFjb2luIG93bmVyIGFkZHJlc3MuDQogICAgICovDQogICAgZnVuY3Rpb24gYmFja1ZJU1RBY29pbk93bmVyKCkgb25seU93bmVyIHB1YmxpYyB7DQogICAgICAgIGNvaW4udHJhbnNmZXJPd25lcnNoaXAob3duZXIpOw0KICAgIH0NCgkNCgkNCiAgICAvKioNCiAgICAgKiBHZXQgcmVhbWluIGNvaW5zIGJhY2sgdG8gb3duZXINCiAgICAgKi8NCiAgICBmdW5jdGlvbiBnZXRSZW1haW5Db2lucygpIG9ubHlPd25lciBwdWJsaWMgew0KICAgICAgICB2YXIgcmVtYWlucyA9IE1BWF9DQVAgLSBjb2luU2VudFRvRXRoZXI7DQogICAgICAgIEJhY2tlciBiYWNrZXIgPSBiYWNrZXJzW293bmVyXTsNCiAgICAgICAgY29pbi50cmFuc2Zlcihvd25lciwgcmVtYWlucyk7IC8vIFRyYW5zZmVyIFZJU1RBY29pbnMgcmlnaHQgbm93IA0KICAgICAgICBiYWNrZXIuY29pblNlbnQgPSBiYWNrZXIuY29pblNlbnQuYWRkKHJlbWFpbnMpOw0KICAgICAgICBjb2luU2VudFRvRXRoZXIgPSBjb2luU2VudFRvRXRoZXIuYWRkKHJlbWFpbnMpOw0KICAgICAgICAvLyBTZW5kIGV2ZW50cw0KICAgICAgICBMb2dDb2luc0VtaXRlZCh0aGlzICxyZW1haW5zKTsNCiAgICAgICAgTG9nUmVjZWl2ZWRFVEgob3duZXIsIGV0aGVyUmVjZWl2ZWQpOyANCiAgICB9DQp9'