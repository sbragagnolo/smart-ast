base 64 content
base64vIUREFoundersTokenSale2
	^'cHJhZ21hIHNvbGlkaXR5XjAuNC42Ow0KDQpjb250cmFjdCBWSVVSRUZvdW5kZXJzVG9rZW5TYWxlIHsNCiAgLy8gTWFwcyBhZGRyZXNzZXMgdG8gYmFsYW5jZXMgaW4gRVRIDQogIG1hcHBpbmcgKGFkZHJlc3MgPT4gdWludCkgcHVibGljIGJhbGFuY2VzOw0KDQogIHVpbnQgcHVibGljIHRyYW5zZmVycmVkX3RvdGFsID0gMDsNCg0KICAvLyBNaW5pbXVtIGFuZCBNYXhpbXVtIEdvYWxzIGZvciBUb2tlbiBTYWxlDQogIHVpbnQgcHVibGljIGNvbnN0YW50IG1pbl9nb2FsX2Ftb3VudCA9IDQwMDAgZXRoZXI7DQogIHVpbnQgcHVibGljIGNvbnN0YW50IG1heF9nb2FsX2Ftb3VudCA9IDYwMDAgZXRoZXI7DQoNCiAgLy8gbG9mdFZSIE9mZmxpbmUgUHJvamVjdCBXYWxsZXQNCiAgYWRkcmVzcyBwdWJsaWMgcHJvamVjdF93YWxsZXQ7DQoNCiAgLy8gVG9rZW4gU2FsZSBTY2hlZHVsZQ0KICB1aW50IHB1YmxpYyB0b2tlbl9zYWxlX3N0YXJ0X2Jsb2NrOw0KICB1aW50IHB1YmxpYyB0b2tlbl9zYWxlX2VuZF9ibG9jazsNCg0KICAvLyBBcHByb3hpbWF0ZSBibG9ja3MgY3JlYXRlZCBpbiAyIG1vbnRocyAtIDM1MSw1NTggYmxvY2tzDQogIHVpbnQgY29uc3RhbnQgYmxvY2tzX2luX3R3b19tb250aHMgPSAzNjAwMDA7DQoNCiAgLy8gQmxvY2sgbnVtYmVyIGF0IHRoZSBlbmQgb2YgdGhlIHJlZnVuZCB3aW5kb3cNCiAgdWludCBwdWJsaWMgcmVmdW5kX3dpbmRvd19lbmRfYmxvY2s7DQoNCiAgZnVuY3Rpb24gVklVUkVGb3VuZGVyc1Rva2VuU2FsZSh1aW50IF9zdGFydF9ibG9jaywgdWludCBfZW5kX2Jsb2NrLCBhZGRyZXNzIF9wcm9qZWN0X3dhbGxldCkgew0KICAgIGlmIChfc3RhcnRfYmxvY2sgPD0gYmxvY2subnVtYmVyKSB0aHJvdzsNCiAgICBpZiAoX2VuZF9ibG9jayA8PSBfc3RhcnRfYmxvY2spIHRocm93Ow0KICAgIGlmIChfcHJvamVjdF93YWxsZXQgPT0gMCkgdGhyb3c7DQoNCiAgICAvLyBJbml0aWFsaXppbmcgcGFyYW1ldGVycyBmb3IgVG9rZW4gU2FsZQ0KICAgIHRva2VuX3NhbGVfc3RhcnRfYmxvY2sgPSBfc3RhcnRfYmxvY2s7DQogICAgdG9rZW5fc2FsZV9lbmRfYmxvY2sgPSBfZW5kX2Jsb2NrOw0KICAgIHByb2plY3Rfd2FsbGV0ID0gX3Byb2plY3Rfd2FsbGV0Ow0KICAgIHJlZnVuZF93aW5kb3dfZW5kX2Jsb2NrID0gdG9rZW5fc2FsZV9lbmRfYmxvY2sgKyBibG9ja3NfaW5fdHdvX21vbnRoczsNCiAgfQ0KDQogIC8vIENoZWNrcyBpZiB0aGUgVG9rZW4gU2FsZSBoYXMgc3RhcnRlZA0KICBmdW5jdGlvbiBoYXNfdG9rZW5fc2FsZV9zdGFydGVkKCkgcHJpdmF0ZSBjb25zdGFudCByZXR1cm5zIChib29sKSB7DQogICAgcmV0dXJuIGJsb2NrLm51bWJlciA+PSB0b2tlbl9zYWxlX3N0YXJ0X2Jsb2NrOw0KICB9DQoNCiAgLy8gQ2hlY2tzIGlmIHRoZSBUb2tlbiBTYWxlIGhhcyBlbmRlZA0KICBmdW5jdGlvbiBoYXNfdG9rZW5fc2FsZV90aW1lX2VuZGVkKCkgcHJpdmF0ZSBjb25zdGFudCByZXR1cm5zIChib29sKSB7DQogICAgcmV0dXJuIGJsb2NrLm51bWJlciA+IHRva2VuX3NhbGVfZW5kX2Jsb2NrOw0KICB9DQoNCiAgLy8gQ2hlY2tzIGlmIHRoZSBtaW5pbXVtIGdvYWwgd2FzIHJlYWNoZWQNCiAgZnVuY3Rpb24gaXNfbWluX2dvYWxfcmVhY2hlZCgpIHByaXZhdGUgY29uc3RhbnQgcmV0dXJucyAoYm9vbCkgew0KICAgIHJldHVybiB0cmFuc2ZlcnJlZF90b3RhbCA+PSBtaW5fZ29hbF9hbW91bnQ7DQogIH0NCg0KICAvLyBDaGVja3MgaWYgdGhlIG1heGltdW0gZ29hbCB3YXMgcmVhY2hlZA0KICBmdW5jdGlvbiBpc19tYXhfZ29hbF9yZWFjaGVkKCkgcHJpdmF0ZSBjb25zdGFudCByZXR1cm5zIChib29sKSB7DQogICAgcmV0dXJuIHRyYW5zZmVycmVkX3RvdGFsID49IG1heF9nb2FsX2Ftb3VudDsNCiAgfQ0KDQogIC8vIEFjY2VwdHMgRVRIIHdoaWxlIFRva2VuIFNhbGUgaXMgYWN0aXZlIG9yIHVudGlsIHRoZSBtYXhpbXVtIGdvYWwgaXMgcmVhY2hlZA0KICBmdW5jdGlvbigpIHBheWFibGUgew0KICAgIC8vIENoZWNrIGlmIFRva2VuIFNhbGUgaGFzIHN0YXJ0ZWQNCiAgICBpZiAoIWhhc190b2tlbl9zYWxlX3N0YXJ0ZWQoKSkgdGhyb3c7DQoNCiAgICAvLyBDaGVjayBpZiBUb2tlbiBTYWxlIGlzIG92ZXINCiAgICBpZiAoaGFzX3Rva2VuX3NhbGVfdGltZV9lbmRlZCgpKSB0aHJvdzsNCg0KICAgIC8vIERvbid0IGFjY2VwdCB0cmFuc2FjdGlvbnMgd2l0aCB6ZXJvIHZhbHVlDQogICAgaWYgKG1zZy52YWx1ZSA9PSAwKSB0aHJvdzsNCg0KICAgIC8vIENoZWNrIGlmIHRoZSBtYXhpbXVtIGdvYWwgd2FzIHJlYWNoZWQNCiAgICBpZiAoaXNfbWF4X2dvYWxfcmVhY2hlZCgpKSB0aHJvdzsNCg0KICAgIC8vIENoZWNrIGlmIHNlbmRlcnMgdHJhbnNhY3Rpb24gZW5kcyB1cCBnb2luZyBvdmVyIHRoZSBtYXhpbXVtIGdvYWwgYW1vdW50DQogICAgaWYgKHRyYW5zZmVycmVkX3RvdGFsICsgbXNnLnZhbHVlID4gbWF4X2dvYWxfYW1vdW50KSB7DQogICAgICAvLyBSZXR1cm4gYXMgY2hhbmdlIHRoZSBhbW91bnQgdGhhdCBnb2VzIG92ZXIgdGhlIG1heGltdW0gZ29hbCBhbW91bnQNCiAgICAgIHZhciBjaGFuZ2VfdG9fcmV0dXJuID0gdHJhbnNmZXJyZWRfdG90YWwgKyBtc2cudmFsdWUgLSBtYXhfZ29hbF9hbW91bnQ7DQogICAgICBpZiAoIW1zZy5zZW5kZXIuc2VuZChjaGFuZ2VfdG9fcmV0dXJuKSkgdGhyb3c7DQoNCiAgICAgIC8vIFJlY29yZHMgd2hhdCB0aGUgc2VuZGVyIHdhcyBhYmxlIHRvIHNlbmQgdG8gcmVhY2ggdGhlIG1heGltdW0gZ29hbCBhbW91bnQNCiAgICAgIC8vIEFkZHMgdGhpcyB2YWx1ZSB0byB0aGUgc2VuZGVycyBiYWxhbmNlIGFuZCB0byB0cmFuc2ZlcnJlZF90b3RhbCB0byBmaW5pc2ggdGhlIFRva2VuIFNhbGUNCiAgICAgIHZhciB0b19hZGQgPSBtYXhfZ29hbF9hbW91bnQgLSB0cmFuc2ZlcnJlZF90b3RhbDsNCiAgICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdICs9IHRvX2FkZDsNCiAgICAgIHRyYW5zZmVycmVkX3RvdGFsICs9IHRvX2FkZDsNCg0KICAgIH0gZWxzZSB7DQogICAgICAvLyBSZWNvcmRzIHRoZSB2YWx1ZSBvZiB0aGUgc2VuZGVycyB0cmFuc2FjdGlvbiB3aXRoIHRoZSBUb2tlbiBTYWxlIFNtYXJ0IENvbnRyYWN0DQogICAgICAvLyBSZWNvcmRzIHRoZSBhbW91bnQgdGhlIHNlbmRlciBzZW50IHRvIHRoZSBUb2tlbiBTYWxlIFNtYXJ0IENvbnRyYWN0DQogICAgICBiYWxhbmNlc1ttc2cuc2VuZGVyXSArPSBtc2cudmFsdWU7DQogICAgICB0cmFuc2ZlcnJlZF90b3RhbCArPSBtc2cudmFsdWU7DQogICAgfQ0KICB9DQoNCiAgLy8gVHJhbnNmZXIgRVRIIHRvIGxvZnRWUiBPZmZsaW5lIFByb2plY3Qgd2FsbGV0DQogIGZ1bmN0aW9uIHRyYW5zZmVyX2Z1bmRzX3RvX3Byb2plY3QoKSB7DQogICAgLy8gQ2hlY2sgaWYgdGhlIG1pbmltdW0gZ29hbCBhbW91bnQgd2FzIHJlYWNoZWQNCiAgICBpZiAoIWlzX21pbl9nb2FsX3JlYWNoZWQoKSkgdGhyb3c7DQogICAgLy8gQ2hlY2sgaWYgdGhlIGZ1bmRzIGhhdmUgYWxyZWFkeSBiZWVuIHRyYW5zZmVycmVkIHRvIHRoZSBwcm9qZWN0IHdhbGxldA0KICAgIGlmICh0aGlzLmJhbGFuY2UgPT0gMCkgdGhyb3c7DQoNCiAgICAvLyBUcmFuc2ZlciBFVEggdG8gbG9mdFZSIE9mZmxpbmUgUHJvamVjdCB3YWxsZXQNCiAgICBpZiAoIXByb2plY3Rfd2FsbGV0LnNlbmQodGhpcy5iYWxhbmNlKSkgdGhyb3c7DQogIH0NCg0KICAvLyBSZWZ1bmQgRVRIIGluIGNhc2UgdGhlIG1pbmltdW0gZ29hbCB3YXMgbm90IHJlYWNoZWQgZHVyaW5nIHRoZSBUb2tlbiBTYWxlDQogIC8vIFJlZnVuZCB3aWxsIGJlIGF2YWlsYWJsZSBkdXJpbmcgYSB0d28gbW9udGggd2luZG93IGFmdGVyIHRoZSBUb2tlbiBTYWxlDQogIGZ1bmN0aW9uIHJlZnVuZCgpIHsNCiAgICAvLyBDaGVjayBpZiB0aGUgVG9rZW4gU2FsZSBoYXMgZW5kZWQNCiAgICBpZiAoIWhhc190b2tlbl9zYWxlX3RpbWVfZW5kZWQoKSkgdGhyb3c7DQogICAgLy8gQ2hlY2sgaWYgdGhlIG1pbmltdW0gZ29hbCBhbW91bnQgd2FzIHJlYWNoZWQgYW5kIHRocm93cyBpZiBpdCBoYXMgYmVlbiByZWFjaGVkDQogICAgaWYgKGlzX21pbl9nb2FsX3JlYWNoZWQoKSkgdGhyb3c7DQogICAgLy8gQ2hlY2sgaWYgdGhlIHJlZnVuZCB3aW5kb3cgaGFzIHBhc3NlZA0KICAgIGlmIChibG9jay5udW1iZXIgPiByZWZ1bmRfd2luZG93X2VuZF9ibG9jaykgdGhyb3c7DQoNCiAgICAvLyBSZWNvcmRzIHRoZSBiYWxhbmNlIG9mIHRoZSBzZW5kZXINCiAgICB2YXIgcmVmdW5kX2Ftb3VudCA9IGJhbGFuY2VzW21zZy5zZW5kZXJdOw0KICAgIC8vIENoZWNrIGlmIHRoZSBzZW5kZXIgaGFzIGEgYmFsYW5jZQ0KICAgIGlmIChyZWZ1bmRfYW1vdW50ID09IDApIHRocm93Ow0KDQogICAgLy8gUmVzZXQgYmFsYW5jZQ0KICAgIGJhbGFuY2VzW21zZy5zZW5kZXJdID0gMDsNCg0KICAgIC8vIEFjdHVhbCByZWZ1bmQNCiAgICBpZiAoIW1zZy5zZW5kZXIuc2VuZChyZWZ1bmRfYW1vdW50KSkgew0KICAgICAgICAgaWYgKCFtc2cuc2VuZGVyLnNlbmQocmVmdW5kX2Ftb3VudCkpIHRocm93Ow0KICAgIH0NCiAgfQ0KDQogIC8vIEluIHRoZSBjYXNlIHRoYXQgdGhlcmUgaXMgYW55IEVUSCBsZWZ0IHVuY2xhaW1lZCBhZnRlciB0aGUgdHdvIG1vbnRoIHJlZnVuZCB3aW5kb3csDQogIC8vIFNlbmQgdGhlIEVUSCB0byB0aGUgbG9mdFZSIE9mZmxpbmUgUHJvamVjdCBXYWxsZXQNCiAgZnVuY3Rpb24gdHJhbnNmZXJfcmVtYWluaW5nX2Z1bmRzX3RvX3Byb2plY3QoKSB7DQogICAgaWYgKCFoYXNfdG9rZW5fc2FsZV90aW1lX2VuZGVkKCkpIHRocm93Ow0KICAgIGlmIChpc19taW5fZ29hbF9yZWFjaGVkKCkpIHRocm93Ow0KICAgIGlmIChibG9jay5udW1iZXIgPD0gcmVmdW5kX3dpbmRvd19lbmRfYmxvY2spIHRocm93Ow0KDQogICAgaWYgKHRoaXMuYmFsYW5jZSA9PSAwKSB0aHJvdzsNCiAgICAvLyBUcmFuc2ZlciByZW1haW5pbmcgRVRIIHRvIGxvZnRWUiBPZmZsaW5lIFByb2plY3QgV2FsbGV0DQogICAgaWYgKCFwcm9qZWN0X3dhbGxldC5zZW5kKHRoaXMuYmFsYW5jZSkpIHRocm93Ow0KICB9DQp9'